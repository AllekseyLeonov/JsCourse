{"version":3,"sources":["config/constants/ROUTES.js","redux/auth/ACTION_TYPES.js","redux/auth/actions.js","components/ProfileInfo.js","components/RegistrationMenu.js","config/constants/LOCAL_STORAGE_KEYS.js","components/RegistrationMenuContainer.js","utils/textFormatUtils.js","components/AuthMenu.js","components/AuthMenuContainer.js","config/constants/API_CONFIG.js","components/SignInMenu.js","redux/signInState/ACTION_TYPES.js","redux/signInState/actions.js","components/SignInManager.js","components/HeaderMenu.js","components/SearchField.js","pages/notes/NotesList.js","pages/notes/NotesListMenu.js","pages/notes/ActiveNoteEditingDialog.js","components/BodyContainer.js","pages/notes/ActiveNote.js","config/constants/NOTES.js","pages/notes/NotesContainer.js","pages/sharedNotes/sharedNotesContainer.js","pages/about/About.js","pages/errors/Error404.js","redux/auth/authReducer.js","redux/signInState/signInReducer.js","redux/reducer.js","App.js","index.js"],"names":["ROUTES","notes","sharedNotes","about","ACTION_TYPES","AuthChangeEmail","AuthChangeFirstName","AuthChangeLastName","AuthChangeDateOfBirth","setAuthEmail","newEmail","type","payload","setAuthFirstName","newFirstName","setAuthLastName","newLastName","setAuthBirthDate","newBirthDate","ProfileInfo","email","firstName","lastName","dateOfBirth","setIsAuthorised","useState","anchorEl","setAnchorEl","Button","onClick","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","Typography","variant","color","fullWidth","defaultProps","connect","state","auth","dispatch","setEmail","bindActionCreators","setFirstName","setLastName","setDateOfBirth","RegistrationMenu","formik","setIsOnRegistrationProcess","onSubmit","handleSubmit","style","display","flexDirection","justifyContent","wrap","TextField","name","label","value","values","onChange","handleChange","error","touched","errors","helperText","password","confirmPassword","NOTES_ARRAY_KEY","USER_DATA_KEY","currentYear","Date","getUTCFullYear","RegistrationMenuContainer","useFormik","initialValues","validate","year","date","test","substring","actions","userData","localStorage","setItem","JSON","stringify","setSubmitting","AuthMenu","AuthMenuContainer","data","useQuery","axios","filter","user","length","SignInMenu","isOnRegistrationProcess","changeSigInState","setSignInState","isSignIn","SignInManager","setIsSignIn","signIn","HeaderMenu","AppBar","position","backgroundColor","Toolbar","height","alignItems","className","to","activeClassName","SearchField","array","setArray","Input","searchText","target","item","title","toLowerCase","includes","content","startAdornment","InputAdornment","NotesList","notesArray","selectedIndex","setSelectedIndex","List","map","ListItem","button","selected","ListItemIcon","ListItemText","primary","Grid","container","justify","secondary","stringToFormat","lengthOfPreviewString","substr","NotesListMenu","changeSelectedIndex","filteredArray","setFilteredArray","xs","direction","ActiveNoteEditingDialog","noteTitle","noteContent","isOpen","setOpen","updateNote","textFieldTitle","textFieldContent","isTitleCorrect","setIsTitleCorrect","isContentCorrect","setIsContentCorrect","Dialog","maxWidth","DialogTitle","DialogContent","defaultValue","multiline","DialogActions","disabled","BodyContainer","children","ActiveNote","selectedItem","isDialogOpen","setDialogState","NOTES","NotesContainer","loadedNotesAsString","getItem","parse","setNotesArray","selectedNote","setSelectedNote","index","updatedArray","note","updatedNote","SharedNotesContainer","About","Error404","textAlign","userDataFromLocalstorage","initialState","authReducer","action","defaultState","signInReducer","rootReducer","combineReducers","store","createStore","queryClient","QueryClient","App","QueryClientProvider","client","basename","exact","path","component","getState","from","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9bac991a.chunk.js","sourcesContent":["const ROUTES = {\n  notes: \"/notes\",\n  sharedNotes: \"/shared-notes\",\n  about: \"/about\",\n};\n\nexport default ROUTES;\n","const ACTION_TYPES = {\n  AuthChangeEmail: \"AUTH_CHANGE_EMAIL\",\n  AuthChangeFirstName: \"AUTH_CHANGE_FIRST_NAME\",\n  AuthChangeLastName: \"AUTH_CHANGE_LAST_NAME\",\n  AuthChangeDateOfBirth: \"AUTH_CHANGE_DATE_OF_BIRTH\",\n};\n\nexport default ACTION_TYPES;\n","import ACTION_TYPES from \"./ACTION_TYPES\";\n\nexport const setAuthEmail = (newEmail) => ({\n  type: ACTION_TYPES.AuthChangeEmail,\n  payload: newEmail,\n});\n\nexport const setAuthFirstName = (newFirstName) => ({\n  type: ACTION_TYPES.AuthChangeFirstName,\n  payload: newFirstName,\n});\n\nexport const setAuthLastName = (newLastName) => ({\n  type: ACTION_TYPES.AuthChangeLastName,\n  payload: newLastName,\n});\n\nexport const setAuthBirthDate = (newBirthDate) => ({\n  type: ACTION_TYPES.AuthChangeDateOfBirth,\n  payload: newBirthDate,\n});\n","import React, { useState } from \"react\";\nimport { Menu, Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport PropTypes from \"prop-types\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport {\n  setAuthBirthDate,\n  setAuthEmail,\n  setAuthFirstName,\n  setAuthLastName,\n} from \"../redux/auth/actions\";\n\nconst ProfileInfo = ({\n  email,\n  firstName,\n  lastName,\n  dateOfBirth,\n  setIsAuthorised,\n}) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <Button onClick={handleClick}>Profile</Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <div>\n          <Typography variant=\"h5\">{email}</Typography>\n          <Typography variant=\"h5\">{firstName}</Typography>\n          <Typography variant=\"h5\">{lastName}</Typography>\n          <Typography variant=\"h5\">{dateOfBirth}</Typography>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => setIsAuthorised(false)}\n            fullWidth\n          >\n            Log out\n          </Button>\n        </div>\n      </Menu>\n    </div>\n  );\n};\nconst setStateToProps = (state) => ({\n  email: state.auth.email,\n  firstName: state.auth.firstName,\n  lastName: state.auth.lastName,\n  dateOfBirth: state.auth.dateOfBirth,\n});\n\nconst setDispatchToProps = (dispatch) => ({\n  setEmail: bindActionCreators(setAuthEmail, dispatch),\n  setFirstName: bindActionCreators(setAuthFirstName, dispatch),\n  setLastName: bindActionCreators(setAuthLastName, dispatch),\n  setDateOfBirth: bindActionCreators(setAuthBirthDate, dispatch),\n});\n\nProfileInfo.propTypes = {\n  email: PropTypes.string,\n  firstName: PropTypes.string,\n  lastName: PropTypes.string,\n  dateOfBirth: PropTypes.string,\n  setIsAuthorised: PropTypes.func,\n};\n\nProfileInfo.defaultProps = {\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  dateOfBirth: \"\",\n  setIsAuthorised: () => {},\n};\n\nexport default connect(setStateToProps, setDispatchToProps)(ProfileInfo);\n","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { Menu } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nconst RegistrationMenu = ({ formik, setIsOnRegistrationProcess }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <Button onClick={handleClick}>Registration</Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <h1>Registration</h1>\n        <form\n          onSubmit={formik.handleSubmit}\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            wrap: \"nowrap\",\n          }}\n        >\n          <TextField\n            id=\"email\"\n            name=\"email\"\n            label=\"Email\"\n            type=\"email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n          />\n          <TextField\n            name=\"firstName\"\n            label=\"First name\"\n            value={formik.values.firstName}\n            onChange={formik.handleChange}\n            error={formik.touched.firstName && Boolean(formik.errors.firstName)}\n            helperText={formik.touched.firstName && formik.errors.firstName}\n          />\n          <TextField\n            name=\"lastName\"\n            label=\"Last name\"\n            value={formik.values.lastName}\n            onChange={formik.handleChange}\n            error={formik.touched.lastName && Boolean(formik.errors.lastName)}\n            helperText={formik.touched.lastName && formik.errors.lastName}\n          />\n          <TextField\n            name=\"dateOfBirth\"\n            label=\"Date of birth\"\n            type=\"date\"\n            value={formik.values.dateOfBirth}\n            onChange={formik.handleChange}\n            error={\n              formik.touched.dateOfBirth && Boolean(formik.errors.dateOfBirth)\n            }\n            helperText={formik.touched.dateOfBirth && formik.errors.dateOfBirth}\n          />\n          <TextField\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n          />\n          <TextField\n            name=\"confirmPassword\"\n            label=\"Confirm password\"\n            type=\"password\"\n            value={formik.values.confirmPassword}\n            onChange={formik.handleChange}\n            error={\n              formik.touched.confirmPassword &&\n              Boolean(formik.errors.confirmPassword)\n            }\n            helperText={\n              formik.touched.confirmPassword && formik.errors.confirmPassword\n            }\n          />\n          <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n            Submit\n          </Button>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            fullWidth\n            onClick={() => setIsOnRegistrationProcess(false)}\n          >\n            Log in\n          </Button>\n        </form>\n      </Menu>\n    </div>\n  );\n};\n\nRegistrationMenu.propTypes = {\n  formik: PropTypes.func,\n  setIsOnRegistrationProcess: PropTypes.func,\n};\n\nRegistrationMenu.defaultProps = {\n  formik: () => {},\n  setIsOnRegistrationProcess: () => {},\n};\n\nexport default RegistrationMenu;\n","export const NOTES_ARRAY_KEY = \"notesArray\";\nexport const USER_DATA_KEY = \"notesUserData\";\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useFormik } from \"formik\";\n\nimport RegistrationMenu from \"./RegistrationMenu\";\nimport { USER_DATA_KEY } from \"../config/constants/LOCAL_STORAGE_KEYS\";\nimport { getYearFromDate } from \"../utils/textFormatUtils\";\n\nconst currentDate = new Date();\nconst currentYear = currentDate.getUTCFullYear();\nconst MAX_HUMAN_AGE = 120;\nconst isYearValid = (year) =>\n  year > currentYear - MAX_HUMAN_AGE && year < currentYear;\n\nconst RegistrationMenuContainer = ({\n  email,\n  firstName,\n  lastName,\n  dateOfBirth,\n  setEmail,\n  setFirstName,\n  setLastName,\n  setDateOfBirth,\n  setIsAuthorised,\n  setIsOnRegistrationProcess,\n}) => {\n  const formik = useFormik({\n    initialValues: {\n      email,\n      firstName,\n      lastName,\n      dateOfBirth,\n      password: \"\",\n      confirmPassword: \"\",\n    },\n\n    validate: (values) => {\n      const errors = {};\n      if (!values.email) {\n        errors.email = \"Required\";\n      } else if (\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n      ) {\n        errors.email = \"Invalid email address\";\n      }\n      if (!values.firstName) {\n        errors.firstName = \"Required\";\n      } else if (!/^[a-zA-Z ]+$/.test(values.firstName)) {\n        errors.firstName = \"Invalid name input\";\n      }\n      if (!values.lastName) {\n        errors.lastName = \"Required\";\n      } else if (!/^[a-zA-Z ]+$/.test(values.lastName)) {\n        errors.lastName = \"Invalid last name input\";\n      }\n      if (!values.dateOfBirth) {\n        errors.dateOfBirth = \"Required\";\n      } else if (!isYearValid(getYearFromDate(values.dateOfBirth))) {\n        errors.dateOfBirth = \"Invalid year input\";\n      }\n      if (!values.password) {\n        errors.password = \"Required\";\n      }\n      if (!values.confirmPassword) {\n        errors.confirmPassword = \"Required\";\n      } else if (values.password !== values.confirmPassword) {\n        errors.confirmPassword = \"Password confirm is invalid\";\n      }\n      return errors;\n    },\n\n    onSubmit: (values, actions) => {\n      const userData = {\n        email: values.email,\n        firstName: values.firstName,\n        lastName: values.lastName,\n        dateOfBirth: values.dateOfBirth,\n      };\n      setEmail(userData.email);\n      setFirstName(userData.firstName);\n      setLastName(userData.lastName);\n      setDateOfBirth(userData.dateOfBirth);\n\n      localStorage.setItem(USER_DATA_KEY, JSON.stringify(userData));\n\n      actions.setSubmitting(false);\n\n      setIsAuthorised(true);\n      setIsOnRegistrationProcess(false);\n    },\n  });\n\n  return (\n    <RegistrationMenu\n      formik={formik}\n      setIsOnRegistrationProcess={setIsOnRegistrationProcess}\n    />\n  );\n};\n\nRegistrationMenuContainer.propTypes = {\n  email: PropTypes.string,\n  firstName: PropTypes.string,\n  lastName: PropTypes.string,\n  dateOfBirth: PropTypes.string,\n  setEmail: PropTypes.func,\n  setFirstName: PropTypes.func,\n  setLastName: PropTypes.func,\n  setDateOfBirth: PropTypes.func,\n  setIsAuthorised: PropTypes.func,\n  setIsOnRegistrationProcess: PropTypes.func,\n};\n\nRegistrationMenuContainer.defaultProps = {\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  dateOfBirth: \"\",\n  setEmail: () => {},\n  setFirstName: () => {},\n  setLastName: () => {},\n  setDateOfBirth: () => {},\n  setIsAuthorised: () => {},\n  setIsOnRegistrationProcess: () => {},\n};\n\nexport default RegistrationMenuContainer;\n","export const getPreviewString = (stringToFormat, lengthOfPreviewString) =>\n  stringToFormat.length > 20\n    ? `${stringToFormat.substr(0, lengthOfPreviewString)} ...`\n    : stringToFormat;\n\nconst YEAR_STRING_LENGTH = 4;\nexport const getYearFromDate = (date) => date.substring(0, YEAR_STRING_LENGTH);\n","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { Menu } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nconst AuthMenu = ({ formik, setIsOnRegistrationProcess }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <Button onClick={handleClick}>Log in</Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <h1>Sign in</h1>\n        <form\n          onSubmit={formik.handleSubmit}\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            wrap: \"nowrap\",\n          }}\n        >\n          <TextField\n            id=\"email\"\n            name=\"email\"\n            label=\"Email\"\n            type=\"email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n          />\n          <TextField\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n          />\n          <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n            Submit\n          </Button>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            fullWidth\n            onClick={() => setIsOnRegistrationProcess(true)}\n          >\n            Create new account\n          </Button>\n        </form>\n      </Menu>\n    </div>\n  );\n};\n\nAuthMenu.propTypes = {\n  formik: PropTypes.func,\n  setIsOnRegistrationProcess: PropTypes.func,\n};\n\nAuthMenu.defaultProps = {\n  formik: () => {},\n  setIsOnRegistrationProcess: () => {},\n};\n\nexport default AuthMenu;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useQuery } from \"react-query\";\nimport axios from \"axios\";\nimport { useFormik } from \"formik\";\n\nimport AuthMenu from \"./AuthMenu\";\nimport { USER_DATA_KEY } from \"../config/constants/LOCAL_STORAGE_KEYS\";\nimport userApi from \"../config/constants/API_CONFIG\";\n\nconst AuthMenuContainer = ({\n  email,\n  setEmail,\n  setFirstName,\n  setLastName,\n  setDateOfBirth,\n  setIsAuthorised,\n  setIsOnRegistrationProcess,\n}) => {\n  const { data } = useQuery(\"users\", () => axios(userApi));\n\n  const formik = useFormik({\n    initialValues: {\n      email,\n      password: \"\",\n    },\n\n    validate: (values) => {\n      const errors = {};\n      if (!values.email) {\n        errors.email = \"Required\";\n      } else if (\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n      ) {\n        errors.email = \"Invalid email address\";\n      }\n      if (!values.password) {\n        errors.password = \"Required\";\n      }\n      if (\n        data.data.filter(\n          (user) =>\n            user.email === values.email && user.password === values.password\n        ).length === 0\n      ) {\n        errors.email = \"Such user not found\";\n      }\n      return errors;\n    },\n\n    onSubmit: (values, actions) => {\n      const userData = data.data.filter(\n        (user) =>\n          user.email === values.email && user.password === values.password\n      )[0];\n\n      setEmail(userData.email);\n      setFirstName(userData.firstName);\n      setLastName(userData.lastName);\n      setDateOfBirth(userData.dateOfBirth);\n\n      localStorage.setItem(USER_DATA_KEY, JSON.stringify(userData));\n\n      setIsAuthorised(true);\n      actions.setSubmitting(false);\n    },\n  });\n\n  return (\n    <AuthMenu\n      formik={formik}\n      setIsOnRegistrationProcess={setIsOnRegistrationProcess}\n    />\n  );\n};\n\nAuthMenuContainer.propTypes = {\n  email: PropTypes.string,\n  setEmail: PropTypes.func,\n  setFirstName: PropTypes.func,\n  setLastName: PropTypes.func,\n  setDateOfBirth: PropTypes.func,\n  setIsAuthorised: PropTypes.func,\n  setIsOnRegistrationProcess: PropTypes.func,\n};\n\nAuthMenuContainer.defaultProps = {\n  email: \"\",\n  setEmail: () => {},\n  setFirstName: () => {},\n  setLastName: () => {},\n  setDateOfBirth: () => {},\n  setIsAuthorised: () => {},\n  setIsOnRegistrationProcess: () => {},\n};\n\nexport default AuthMenuContainer;\n","const userApi = \"https://mocki.io/v1/cb356f5f-32cc-48f8-8f05-297ecc66ca90\";\nexport default userApi;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport RegistrationMenuContainer from \"./RegistrationMenuContainer\";\nimport AuthMenuContainer from \"./AuthMenuContainer\";\n\nimport {\n  setAuthBirthDate,\n  setAuthEmail,\n  setAuthFirstName,\n  setAuthLastName,\n} from \"../redux/auth/actions\";\n\nconst SignInMenu = ({\n  email,\n  firstName,\n  lastName,\n  dateOfBirth,\n  setEmail,\n  setFirstName,\n  setLastName,\n  setDateOfBirth,\n  setIsAuthorised,\n}) => {\n  const [isOnRegistrationProcess, setIsOnRegistrationProcess] = useState(false);\n  return isOnRegistrationProcess ? (\n    <RegistrationMenuContainer\n      setIsAuthorised={setIsAuthorised}\n      setIsOnRegistrationProcess={setIsOnRegistrationProcess}\n      email={email}\n      firstName={firstName}\n      lastName={lastName}\n      dateOfBirth={dateOfBirth}\n      setEmail={setEmail}\n      setFirstName={setFirstName}\n      setLastName={setLastName}\n      setDateOfBirth={setDateOfBirth}\n    />\n  ) : (\n    <AuthMenuContainer\n      setIsAuthorised={setIsAuthorised}\n      setIsOnRegistrationProcess={setIsOnRegistrationProcess}\n      setEmail={setEmail}\n      setFirstName={setFirstName}\n      setLastName={setLastName}\n      setDateOfBirth={setDateOfBirth}\n    />\n  );\n};\n\nconst setStateToProps = (state) => ({\n  email: state.auth.email,\n  firstName: state.auth.firstName,\n  lastName: state.auth.lastName,\n  dateOfBirth: state.auth.dateOfBirth,\n});\n\nconst setDispatchToProps = (dispatch) => ({\n  setEmail: bindActionCreators(setAuthEmail, dispatch),\n  setFirstName: bindActionCreators(setAuthFirstName, dispatch),\n  setLastName: bindActionCreators(setAuthLastName, dispatch),\n  setDateOfBirth: bindActionCreators(setAuthBirthDate, dispatch),\n});\n\nSignInMenu.propTypes = {\n  email: PropTypes.string,\n  firstName: PropTypes.string,\n  lastName: PropTypes.string,\n  dateOfBirth: PropTypes.string,\n  setEmail: PropTypes.func,\n  setFirstName: PropTypes.func,\n  setLastName: PropTypes.func,\n  setDateOfBirth: PropTypes.func,\n  setIsAuthorised: PropTypes.func,\n};\n\nSignInMenu.defaultProps = {\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  dateOfBirth: \"\",\n  setEmail: () => {},\n  setFirstName: () => {},\n  setLastName: () => {},\n  setDateOfBirth: () => {},\n  setIsAuthorised: () => {},\n};\n\nexport default connect(setStateToProps, setDispatchToProps)(SignInMenu);\n","const ACTION_TYPES = {\n  changeSigInState: \"CHANGE_SIGN_IN_STATE\",\n};\n\nexport default ACTION_TYPES;\n","import ACTION_TYPES from \"./ACTION_TYPES\";\n\nconst setSignInState = (isSignIn) => ({\n  type: ACTION_TYPES.changeSigInState,\n  payload: isSignIn,\n});\n\nexport default setSignInState;\n","import React from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport ProfileInfo from \"./ProfileInfo\";\nimport SignInMenu from \"./SignInMenu\";\nimport setSignInState from \"../redux/signInState/actions\";\n\nconst SignInManager = ({ isSignIn, setIsSignIn }) =>\n  isSignIn ? (\n    <ProfileInfo setIsAuthorised={setIsSignIn} />\n  ) : (\n    <SignInMenu setIsAuthorised={setIsSignIn} />\n  );\n\nconst setStateToProps = (state) => ({\n  isSignIn: state.signIn.isSignIn,\n});\n\nconst setDispatchToProps = (dispatch) => ({\n  setIsSignIn: bindActionCreators(setSignInState, dispatch),\n});\n\nSignInManager.propTypes = {\n  isSignIn: PropTypes.bool,\n  setIsSignIn: PropTypes.func,\n};\n\nSignInManager.defaultProps = {\n  isSignIn: false,\n  setIsSignIn: () => {},\n};\n\nexport default connect(setStateToProps, setDispatchToProps)(SignInManager);\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { Typography } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\n\nimport \"./styles.css\";\nimport ROUTES from \"../config/constants/ROUTES\";\nimport SignInManager from \"./SignInManager\";\n\nconst HeaderMenu = () => (\n  <AppBar position=\"static\" style={{ backgroundColor: \"rgb(196, 116, 69)\" }}>\n    <Toolbar\n      style={{\n        justifyContent: \"space-around\",\n        height: \"inherit\",\n        alignItems: \"inherit\",\n      }}\n    >\n      <Typography variant=\"h5\" className=\"HeaderItem\">\n        <NavLink\n          to={ROUTES.notes}\n          activeClassName=\"ActiveNavLink\"\n          className=\"NavLink\"\n        >\n          My notes\n        </NavLink>\n      </Typography>\n      <Typography variant=\"h5\" className=\"HeaderItem\">\n        <NavLink\n          to={ROUTES.sharedNotes}\n          activeClassName=\"ActiveNavLink\"\n          className=\"NavLink\"\n        >\n          Shared notes\n        </NavLink>\n      </Typography>\n      <Typography variant=\"h5\" className=\"HeaderItem\">\n        <NavLink\n          to={ROUTES.about}\n          activeClassName=\"ActiveNavLink\"\n          className=\"NavLink\"\n        >\n          About\n        </NavLink>\n      </Typography>\n      <SignInManager />\n    </Toolbar>\n  </AppBar>\n);\n\nexport default HeaderMenu;\n","import React from \"react\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Input from \"@material-ui/core/Input\";\nimport PropTypes from \"prop-types\";\n\nconst SearchField = ({ array, setArray }) => {\n  const handleInputChange = (event) => {\n    const searchText = event.target.value;\n    setArray(\n      array.filter(\n        (item) =>\n          item.title.toLowerCase().includes(searchText.toLowerCase()) ||\n          item.content.toLowerCase().includes(searchText.toLowerCase())\n      )\n    );\n  };\n\n  return (\n    <Input\n      label=\"Search\"\n      onChange={handleInputChange}\n      startAdornment={\n        <InputAdornment>\n          <SearchIcon />\n        </InputAdornment>\n      }\n    />\n  );\n};\n\nSearchField.propTypes = {\n  array: PropTypes.arrayOf(PropTypes.object),\n  setArray: PropTypes.func,\n};\n\nSearchField.defaultProps = {\n  array: [],\n  setArray: () => {},\n};\n\nexport default SearchField;\n","import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport NoteIcon from \"@material-ui/icons/Note\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { Grid } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport { getPreviewString } from \"../../utils/textFormatUtils\";\n\nconst LENGTH_OF_NOTE_CONTENT_PREVIEW = 20;\n\nconst NotesList = ({ notesArray, selectedIndex, setSelectedIndex }) => (\n  <List>\n    {notesArray.map((item) => (\n      <ListItem\n        button\n        selected={selectedIndex === item.id}\n        onClick={() => setSelectedIndex(item.id)}\n      >\n        <ListItemIcon>\n          <NoteIcon />\n        </ListItemIcon>\n        <ListItemText\n          primary={\n            <Grid container justify=\"space-between\">\n              <span>{item.title}</span>\n              <span>{item.date}</span>\n            </Grid>\n          }\n          secondary={getPreviewString(\n            item.content,\n            LENGTH_OF_NOTE_CONTENT_PREVIEW\n          )}\n        />\n      </ListItem>\n    ))}\n  </List>\n);\n\nNotesList.propTypes = {\n  notesArray: PropTypes.arrayOf(PropTypes.object),\n  selectedIndex: PropTypes.number,\n  setSelectedIndex: PropTypes.func,\n};\n\nNotesList.defaultProps = {\n  notesArray: [],\n  selectedIndex: null,\n  setSelectedIndex() {},\n};\n\nexport default NotesList;\n","import React, { useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport \"./styles.css\";\nimport SearchField from \"../../components/SearchField\";\nimport NotesList from \"./NotesList\";\n\nconst NotesListMenu = ({ notesArray, selectedIndex, changeSelectedIndex }) => {\n  const [filteredArray, setFilteredArray] = useState(notesArray);\n\n  return (\n    <Grid className=\"NotesListMenu\" container item xs={3} direction=\"column\">\n      <SearchField array={notesArray} setArray={setFilteredArray} />\n      <NotesList\n        notesArray={filteredArray}\n        selectedIndex={selectedIndex}\n        setSelectedIndex={changeSelectedIndex}\n      />\n    </Grid>\n  );\n};\n\nNotesListMenu.propTypes = {\n  notesArray: PropTypes.arrayOf(PropTypes.object),\n  selectedIndex: PropTypes.number,\n  changeSelectedIndex: PropTypes.func,\n};\n\nNotesListMenu.defaultProps = {\n  notesArray: [],\n  selectedIndex: null,\n  changeSelectedIndex() {},\n};\n\nexport default NotesListMenu;\n","import React, { useState } from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport { Grid } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport PropTypes from \"prop-types\";\n\nimport \"./styles.css\";\n\nconst TITLE_MAX_LENGTH = 35;\nconst CONTENT_MAX_LENGTH = 2000;\n\nconst ActiveNoteEditingDialog = ({\n  noteTitle,\n  noteContent,\n  isOpen,\n  setOpen,\n  updateNote,\n}) => {\n  let textFieldTitle = noteTitle;\n  let textFieldContent = noteContent;\n\n  const [isTitleCorrect, setIsTitleCorrect] = useState(true);\n  const [isContentCorrect, setIsContentCorrect] = useState(true);\n\n  const checkIsTitleCorrect = (title) =>\n    title.length > 0 && title.length < TITLE_MAX_LENGTH;\n  const checkIsContentCorrect = (content) =>\n    content.length > 0 && content.length < CONTENT_MAX_LENGTH;\n\n  const handleTitleFieldChange = (event) => {\n    textFieldTitle = event.target.value;\n    setIsTitleCorrect(checkIsTitleCorrect(textFieldTitle));\n  };\n  const handleContentFieldChange = (event) => {\n    textFieldContent = event.target.value;\n    setIsContentCorrect(checkIsContentCorrect(textFieldContent));\n  };\n  const handleSaveBtnClick = () => {\n    updateNote(textFieldTitle, textFieldContent);\n    setOpen(false);\n  };\n\n  return (\n    <Dialog open={isOpen} fullWidth=\"true\" maxWidth=\"false\">\n      <DialogTitle>Editing note</DialogTitle>\n      <DialogContent>\n        <Grid direction=\"column\">\n          <TextField\n            id=\"editTitleField\"\n            error={!isTitleCorrect}\n            className=\"DialogInputField\"\n            label=\"title\"\n            defaultValue={textFieldTitle}\n            onChange={handleTitleFieldChange}\n            helperText={\n              isTitleCorrect\n                ? \"\"\n                : `Title length must be between 1 and ${TITLE_MAX_LENGTH} symbols`\n            }\n          />\n          <TextField\n            error={!isContentCorrect}\n            className=\"DialogInputField\"\n            label=\"content\"\n            defaultValue={textFieldContent}\n            onChange={handleContentFieldChange}\n            helperText={\n              isContentCorrect\n                ? \"\"\n                : `Content length must be between 1 and ${CONTENT_MAX_LENGTH} symbols`\n            }\n            multiline\n          />\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => setOpen(!isOpen)}>Close</Button>\n        <Button\n          disabled={!(isTitleCorrect && isContentCorrect)}\n          onClick={handleSaveBtnClick}\n        >\n          Save\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nActiveNoteEditingDialog.propTypes = {\n  noteTitle: PropTypes.string,\n  noteContent: PropTypes.string,\n  isOpen: PropTypes.bool,\n  setOpen: PropTypes.func,\n  updateNote: PropTypes.func,\n};\n\nActiveNoteEditingDialog.defaultProps = {\n  noteTitle: \"\",\n  noteContent: \"\",\n  isOpen: false,\n  setOpen: () => {},\n  updateNote: () => {},\n};\n\nexport default ActiveNoteEditingDialog;\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport \"./styles.css\";\n\nconst BodyContainer = ({ children }) => (\n  <Grid className=\"ActiveNote\" container wrap=\"nowrap\">\n    {children}\n  </Grid>\n);\n\nBodyContainer.propTypes = {\n  children: PropTypes.element,\n};\n\nBodyContainer.defaultProps = {\n  children: <div />,\n};\n\nexport default BodyContainer;\n","import React, { useState } from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport PropTypes from \"prop-types\";\n\nimport \"./styles.css\";\nimport ActiveNoteEditingDialog from \"./ActiveNoteEditingDialog\";\nimport BodyContainer from \"../../components/BodyContainer\";\n\nconst ActiveNote = ({ selectedItem, updateNote }) => {\n  const [isDialogOpen, setDialogState] = useState(false);\n\n  return selectedItem ? (\n    <BodyContainer>\n      <Grid container direction=\"column\" alignItems=\"center\">\n        <Typography className=\"ActiveNoteTitle\" variant=\"h3\">\n          {selectedItem.title}\n        </Typography>\n        <Typography className=\"ActiveNoteContent\" variant=\"h5\">\n          {selectedItem.content}\n        </Typography>\n      </Grid>\n      <Button\n        onClick={() => setDialogState(!isDialogOpen)}\n        style={{ backgroundColor: \"rgba(255, 255, 255, 0.7)\" }}\n      >\n        {\" \"}\n        Edit{\" \"}\n      </Button>\n      <ActiveNoteEditingDialog\n        noteTitle={selectedItem.title}\n        noteContent={selectedItem.content}\n        isOpen={isDialogOpen}\n        setOpen={setDialogState}\n        updateNote={updateNote}\n      />\n    </BodyContainer>\n  ) : (\n    <BodyContainer>\n      <Typography variant=\"h3\">Select note to display</Typography>\n    </BodyContainer>\n  );\n};\n\nActiveNote.propTypes = {\n  selectedItem: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    content: PropTypes.string,\n    date: PropTypes.string,\n  }),\n  updateNote: PropTypes.func,\n};\n\nActiveNote.defaultProps = {\n  selectedItem: null,\n  updateNote: () => {},\n};\n\nexport default ActiveNote;\n","const NOTES = [\n  {\n    id: 0,\n    title: \"React\",\n    content:\n      \"React — JavaScript-библиотека с открытым исходным кодом для разработки пользовательских интерфейсов.\" +\n      \"React разрабатывается и поддерживается Facebook, Instagram и сообществом отдельных разработчиков и корпораций.\" +\n      \"React может использоваться для разработки одностраничных и мобильных приложений. Его цель — предоставить высокую скорость, простоту и масштабируемость.\" +\n      \" В качестве библиотеки для разработки пользовательских интерфейсов React часто используется с другими библиотеками, такими как MobX, Redux и GraphQL.\",\n    date: \"03.05.2020\",\n  },\n  {\n    id: 1,\n    title: \"Material Design\",\n    content:\n      \"Material Design — стиль графического дизайна интерфейсов программного обеспечения и приложений,\" +\n      \" разработанный компанией Google. Впервые представлен на конференции Google I/O 25 июня 2014 года.\" +\n      \" Стиль расширяет идею «карточек», появившуюся в Google Now, более широким применением строгих макетов,\" +\n      \" анимаций и переходов, отступов и эффектов глубины (света и тени). По идее графических дизайнеров Google,\" +\n      \" у приложений не должно быть острых углов, карточки должны переключаться между собой плавно и практически незаметно.\",\n    date: \"02.05.2020\",\n  },\n  {\n    id: 2,\n    title: \"Использование хука состояния\",\n    content:\n      \"useState — это хук.\" +\n      \" Мы вызываем его, чтобы наделить наш функциональный компонент внутренним состоянием.\" +\n      \" React будет хранить это состояние между рендерами. Вызов useState возвращает массив с двумя элементами,\" +\n      \" который содержит: текущее значение состояния и функцию для его обновления.\" +\n      \" Эту функцию можно использовать где угодно, например, в обработчике событий.\" +\n      \" Она схожа с this.setState в классах, но не сливает новое и старое состояние вместе.\",\n    date: \"02.05.2020\",\n  },\n  {\n    id: 3,\n    title: \"GitHub Pages\",\n    content:\n      \"GitHub Pages are public web pages for users, organizations, and repositories,\" +\n      \" that are freely hosted on GitHub’s github.io domain or on a custom domain name of your choice.\" +\n      \" GitHub Pages are powered by Jekyll behind the scenes,\" +\n      \" so they’re a great way to host your Jekyll-powered website for free.\",\n    date: \"02.05.2020\",\n  },\n];\n\nexport default NOTES;\n","import React, { useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport NotesListMenu from \"./NotesListMenu\";\nimport ActiveNote from \"./ActiveNote\";\nimport NOTES from \"../../config/constants/NOTES\";\nimport { NOTES_ARRAY_KEY } from \"../../config/constants/LOCAL_STORAGE_KEYS\";\nimport \"./styles.css\";\n\nconst NotesContainer = () => {\n  const loadedNotesAsString = localStorage.getItem(NOTES_ARRAY_KEY);\n\n  const [notesArray, setNotesArray] = useState(\n    loadedNotesAsString ? JSON.parse(loadedNotesAsString) : NOTES\n  );\n  const [selectedNote, setSelectedNote] = useState(null);\n\n  const updateNote = (title, content) => {\n    const updatedArray = notesArray.map((note) => {\n      if (note.id === selectedNote.id) {\n        const updatedNote = {\n          id: note.id,\n          title,\n          content,\n          date: note.date,\n        };\n        setSelectedNote(updatedNote);\n        return updatedNote;\n      }\n      return note;\n    });\n    setNotesArray(updatedArray);\n\n    localStorage.setItem(NOTES_ARRAY_KEY, JSON.stringify(updatedArray));\n  };\n\n  return (\n    <div className=\"NotesContainer\">\n      <Grid container direction=\"row\" wrap=\"nowrap\" justify=\"space-between\">\n        <NotesListMenu\n          notesArray={notesArray}\n          selectedIndex={selectedNote ? selectedNote.id : null}\n          changeSelectedIndex={(index) => setSelectedNote(notesArray[index])}\n        />\n        <ActiveNote item selectedItem={selectedNote} updateNote={updateNote} />\n      </Grid>\n    </div>\n  );\n};\n\nexport default NotesContainer;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nimport BodyContainer from \"../../components/BodyContainer\";\n\nconst SharedNotesContainer = () => (\n  <BodyContainer>\n    <Typography variant=\"h1\">There will be Shared Notes page</Typography>\n  </BodyContainer>\n);\n\nexport default SharedNotesContainer;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nimport BodyContainer from \"../../components/BodyContainer\";\n\nconst About = () => (\n  <BodyContainer>\n    <Typography variant=\"h1\">There will be About page</Typography>\n  </BodyContainer>\n);\n\nexport default About;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nimport BodyContainer from \"../../components/BodyContainer\";\n\nconst Error404 = () => (\n  <BodyContainer>\n    <Typography variant=\"h1\" style={{ textAlign: \"center\" }}>\n      Error 404 - Page not found\n    </Typography>\n  </BodyContainer>\n);\n\nexport default Error404;\n","import ACTION_TYPES from \"./ACTION_TYPES\";\nimport { USER_DATA_KEY } from \"../../config/constants/LOCAL_STORAGE_KEYS\";\n\nconst defaultUserData = {\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  dateOfBirth: \"\",\n};\n\nconst userDataFromLocalstorage = localStorage.getItem(USER_DATA_KEY);\nconst initialState = userDataFromLocalstorage\n  ? JSON.parse(userDataFromLocalstorage)\n  : defaultUserData;\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.AuthChangeEmail:\n      return { ...state, email: action.payload };\n    case ACTION_TYPES.AuthChangeFirstName:\n      return { ...state, firstName: action.payload };\n    case ACTION_TYPES.AuthChangeLastName:\n      return { ...state, lastName: action.payload };\n    case ACTION_TYPES.AuthChangeDateOfBirth:\n      return { ...state, dateOfBirth: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import ACTION_TYPES from \"./ACTION_TYPES\";\nimport { USER_DATA_KEY } from \"../../config/constants/LOCAL_STORAGE_KEYS\";\n\nconst defaultState = {\n  isSignIn: Boolean(localStorage.getItem(USER_DATA_KEY)),\n};\n\nconst signInReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.changeSigInState:\n      return { ...state, isSignIn: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default signInReducer;\n","import { combineReducers } from \"redux\";\n\nimport authReducer from \"./auth/authReducer\";\nimport signInReducer from \"./signInState/signInReducer\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  signIn: signInReducer,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nimport HeaderMenu from \"./components/HeaderMenu\";\nimport NotesContainer from \"./pages/notes/NotesContainer\";\nimport SharedNotesContainer from \"./pages/sharedNotes/sharedNotesContainer\";\nimport About from \"./pages/about/About\";\nimport Error404 from \"./pages/errors/Error404\";\n\nimport ROUTES from \"./config/constants/ROUTES\";\n\nimport rootReducer from \"./redux/reducer\";\n\nconst store = createStore(rootReducer);\nconst queryClient = new QueryClient();\n\nconst App = () => (\n  <Provider store={store}>\n    <QueryClientProvider client={queryClient}>\n      <HashRouter basename=\"/\">\n        <HeaderMenu />\n        <Switch>\n          <Route\n            exact\n            path={ROUTES.notes}\n            component={\n              store.getState().signIn.isSignIn ? NotesContainer : Error404\n            }\n          />\n          <Route\n            exact\n            path={ROUTES.sharedNotes}\n            component={\n              store.getState().signIn.isSignIn ? SharedNotesContainer : Error404\n            }\n          />\n          <Route exact path={ROUTES.about} component={About} />\n          <Route component={Error404} />\n        </Switch>\n        <Redirect from=\"/\" to=\"/notes\" />\n      </HashRouter>\n    </QueryClientProvider>\n  </Provider>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}