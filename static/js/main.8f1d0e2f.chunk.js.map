{"version":3,"sources":["config/constants/LOCAL_STORAGE_KEYS.js","redux/auth/ACTION_TYPES.js","redux/auth/authReducer.js","redux/signInState/ACTION_TYPES.js","redux/signInState/signInReducer.js","redux/reducer.js","config/constants/ROUTES.js","redux/signInState/actions.js","redux/auth/actions.js","components/styles.js","components/ProfileInfo/ProfileInfo.js","components/ProfileInfo/index.js","components/RegistrationMenu/RegistrationMenu.js","utils/textFormatUtils.js","utils/validations.js","components/RegistrationMenu/RegistrationMenuContainer.js","components/RegistrationMenu/index.js","components/AuthMenu/AuthMenu.js","components/AuthMenu/AuthMenuContainer.js","config/constants/API_CONFIG.js","components/AuthMenu/index.js","components/SignInMenu/SignInMenu.js","components/SignInMenu/index.js","components/SignInManager/SignInManager.js","components/SignInManager/index.js","components/HeaderMenu/index.js","components/HeaderMenu/HeaderMenu.js","components/SearchField/SearchField.js","components/SearchField/index.js","utils/arrayProcessingUtils.js","components/FilterField/FilterField.js","components/FilterField/index.js","pages/notes/styles.js","pages/notes/NotesList.js","config/constants/NOTES.js","pages/notes/NoteProcessingDialog.js","pages/notes/NotesListMenu.js","components/BodyContainer/BodyContainer.js","components/BodyContainer/index.js","pages/notes/NoteSharingSnackbar.js","pages/notes/ActiveNote.js","pages/sharedNotes/styles.js","pages/sharedNotes/sharedNotesContainer.js","pages/sharedNotes/PreviewSharedNote.js","pages/sharedNotes/index.js","pages/about/index.js","pages/about/About.js","pages/errors/styles.js","pages/errors/index.js","pages/errors/Error404.js","pages/notes/index.js","pages/notes/NotesContainer.js","routing/PrivateRoutes.js","routing/CommonRoutes.js","routing/ApplicationRouter.js","routing/index.js","App.js","index.js"],"names":["NOTES_ARRAY_KEY","SHARED_NOTES_ARRAY_KEY","USER_DATA_KEY","ACTION_TYPES","AuthChangeEmail","AuthChangeFirstName","AuthChangeLastName","AuthChangeDateOfBirth","userDataFromLocalstorage","localStorage","getItem","initialState","JSON","parse","email","firstName","lastName","dateOfBirth","authReducer","state","action","type","payload","changeSigInState","defaultState","isSignIn","Boolean","signInReducer","rootReducer","combineReducers","auth","signIn","ROUTES","root","notes","sharedNotes","sharedNotesWithParams","about","setSignInState","setAuthEmail","newEmail","setAuthFirstName","newFirstName","setAuthLastName","newLastName","setAuthBirthDate","newBirthDate","styles","makeStyles","ActiveNote","padding","height","minHeight","justifyContent","alignItems","backgroundColor","marginLeft","marginRight","HeaderItem","display","flexGrow","NavLink","textDecoration","color","ActiveNavLink","SignButtonBox","alignSelf","SignButton","textTransform","Menu","flexDirection","maxWidth","MenuItem","width","CenteredMenuItem","ProfileIcon","transform","NotesButtons","FilterFieldTitle","paddingRight","FilterFieldSelect","HeaderMenuAppBar","HeaderMenuToolBar","RegistrationMenu","RegistrationMenuTitle","RegistrationMenuForm","ProfileInfo","setIsAuthorised","useState","anchorEl","setAnchorEl","classes","Box","className","Button","onClick","event","currentTarget","Typography","variant","keepMounted","open","onClose","defaultProps","connect","dispatch","setEmail","bindActionCreators","setFirstName","setLastName","setDateOfBirth","formik","setIsOnRegistrationProcess","id","onSubmit","handleSubmit","TextField","name","label","value","values","onChange","handleChange","error","touched","errors","helperText","InputLabelProps","shrink","autoFocus","password","confirmPassword","getSharedNoteLink","baseUrl","window","location","href","match","substring","length","currentYear","Date","getUTCFullYear","validateRegistrationInfo","year","date","test","RegistrationMenuContainer","useFormik","initialValues","validate","actions","userData","setItem","stringify","setSubmitting","AuthMenu","style","wrap","NotesButton","AuthMenuContainer","user","useQuery","axios","data","find","validateAuthInfo","currentUserData","filter","SignInMenu","isOnRegistrationProcess","SignInManager","setIsSignIn","HeaderMenu","AppBar","position","Toolbar","to","activeClassName","SearchField","array","setArray","Input","searchText","target","item","title","toLowerCase","includes","content","startAdornment","InputAdornment","SORT_PARAMETERS","sortNotesArray","sortParameter","sort","note1","note2","updateSharedNotesArray","noteToUpdate","userWhoShare","currentArrayAsString","currentArray","note","userEmail","concat","FilterField","setSortingParameter","Select","defaultValue","NotesContainer","ActiveNoteTitle","textAlign","ActiveNoteContent","wordWrap","NotesListMenu","DialogInputField","WithMargin","margin","NotesList","maxHeight","overflow","setItemStyle","isDragging","draggableStyle","background","notesArray","selectedIndex","setSelectedIndex","setFilteredArray","onDragEnd","result","destination","items","list","startIndex","endIndex","Array","from","splice","removed","reorder","source","index","droppableId","droppableProvided","RootRef","rootRef","innerRef","List","map","draggableId","toString","draggableProvided","snapshot","ListItem","button","selected","ContainerComponent","ContainerProps","ref","draggableProps","dragHandleProps","ListItemIcon","ListItemText","primary","Grid","container","justify","secondary","stringToFormat","lengthOfPreviewString","substr","ListItemSecondaryAction","placeholder","NOTES","NoteProcessingDialog","dialogTitle","noteTitle","noteContent","isOpen","setOpen","textFieldTitle","textFieldContent","isTitleCorrect","setIsTitleCorrect","isContentCorrect","setIsContentCorrect","Dialog","fullWidth","DialogTitle","DialogContent","direction","multiline","DialogActions","disabled","changeSelectedIndex","setNotesArray","isOnSharedNotes","filteredArray","sortingParameter","isDialogOpen","setDialogState","useEffect","xs","newNote","getDate","getMonth","getFullYear","BodyContainer","children","NoteSharingSnackbar","isSnackbarOpen","setSnackbarState","autoHideDuration","elevation","severity","selectedItem","updateNote","navigator","clipboard","writeText","AddNoteButton","marginTop","SharedNotesContainer","loadedNotesAsString","console","log","selectedNote","setSelectedNote","PreviewSharedNote","sharedNote","setSharedNote","onResponseSuccess","response","onSuccess","useGetNotes","params","noteId","Number","About","centered","Error404","updatedArray","updatedNote","PrivateRoutes","exact","path","component","exect","CommonRoutes","ApplicationRouter","basename","store","createStore","queryClient","QueryClient","App","QueryClientProvider","client","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f1d0e2f.chunk.js","sourcesContent":["export const NOTES_ARRAY_KEY = \"notesArray\";\nexport const SHARED_NOTES_ARRAY_KEY = \"sharedNotesArray\";\nexport const USER_DATA_KEY = \"notesUserData\";\n","const ACTION_TYPES = {\n  AuthChangeEmail: \"AUTH_CHANGE_EMAIL\",\n  AuthChangeFirstName: \"AUTH_CHANGE_FIRST_NAME\",\n  AuthChangeLastName: \"AUTH_CHANGE_LAST_NAME\",\n  AuthChangeDateOfBirth: \"AUTH_CHANGE_DATE_OF_BIRTH\",\n};\n\nexport default ACTION_TYPES;\n","// eslint-disable-next-line import/no-unresolved\nimport { USER_DATA_KEY } from \"@constants/LOCAL_STORAGE_KEYS\";\nimport ACTION_TYPES from \"./ACTION_TYPES\";\n\nconst defaultUserData = {\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  dateOfBirth: \"\",\n};\n\nconst userDataFromLocalstorage = localStorage.getItem(USER_DATA_KEY);\nconst initialState = userDataFromLocalstorage\n  ? JSON.parse(userDataFromLocalstorage)\n  : defaultUserData;\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.AuthChangeEmail:\n      return { ...state, email: action.payload };\n    case ACTION_TYPES.AuthChangeFirstName:\n      return { ...state, firstName: action.payload };\n    case ACTION_TYPES.AuthChangeLastName:\n      return { ...state, lastName: action.payload };\n    case ACTION_TYPES.AuthChangeDateOfBirth:\n      return { ...state, dateOfBirth: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const ACTION_TYPES = {\n  changeSigInState: \"CHANGE_SIGN_IN_STATE\",\n};\n\nexport default ACTION_TYPES;\n","// eslint-disable-next-line import/no-unresolved\nimport { USER_DATA_KEY } from \"@constants/LOCAL_STORAGE_KEYS\";\nimport ACTION_TYPES from \"./ACTION_TYPES\";\n\nconst defaultState = {\n  isSignIn: Boolean(localStorage.getItem(USER_DATA_KEY)),\n};\n\nconst signInReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.changeSigInState:\n      return { ...state, isSignIn: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default signInReducer;\n","import { combineReducers } from \"redux\";\n\nimport authReducer from \"./auth/authReducer\";\nimport signInReducer from \"./signInState/signInReducer\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  signIn: signInReducer,\n});\n\nexport default rootReducer;\n","const ROUTES = {\n  root: \"/\",\n  notes: \"/notes\",\n  sharedNotes: \"/shared-notes\",\n  sharedNotesWithParams: \"/shared-notes/:userEmail/:noteId\",\n  about: \"/about\",\n};\n\nexport default ROUTES;\n","import ACTION_TYPES from \"./ACTION_TYPES\";\n\nconst setSignInState = (isSignIn) => ({\n  type: ACTION_TYPES.changeSigInState,\n  payload: isSignIn,\n});\n\nexport default setSignInState;\n","import ACTION_TYPES from \"./ACTION_TYPES\";\n\nexport const setAuthEmail = (newEmail) => ({\n  type: ACTION_TYPES.AuthChangeEmail,\n  payload: newEmail,\n});\n\nexport const setAuthFirstName = (newFirstName) => ({\n  type: ACTION_TYPES.AuthChangeFirstName,\n  payload: newFirstName,\n});\n\nexport const setAuthLastName = (newLastName) => ({\n  type: ACTION_TYPES.AuthChangeLastName,\n  payload: newLastName,\n});\n\nexport const setAuthBirthDate = (newBirthDate) => ({\n  type: ACTION_TYPES.AuthChangeDateOfBirth,\n  payload: newBirthDate,\n});\n","import { makeStyles } from \"@material-ui/core\";\n\nconst styles = makeStyles(() => ({\n  ActiveNote: {\n    padding: \"50px 50px\",\n    height: \"fit-content\",\n    minHeight: \"100vh\",\n    justifyContent: \"center\",\n    alignItems: \"flex-start\",\n    backgroundColor: \"rgba(255, 255, 255, 0.8)\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  },\n  HeaderItem: {\n    display: \"flex\",\n    flexGrow: \"1\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  NavLink: {\n    textDecoration: \"none\",\n    color: \"white\",\n  },\n  ActiveNavLink: {\n    color: \"yellow\",\n  },\n  SignButtonBox: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignSelf: \"center\",\n  },\n  SignButton: {\n    textDecoration: \"none\",\n    textTransform: \"none\",\n    color: \"white\",\n  },\n  Menu: {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    flexDirection: \"column\",\n    padding: \"0 30px\",\n    maxWidth: \"300px\",\n  },\n  MenuItem: {\n    padding: \"5px 0\",\n    display: \"flex\",\n    width: \"100%\",\n  },\n  CenteredMenuItem: {\n    alignSelf: \"center\",\n    padding: \"5px 0\",\n  },\n  ProfileIcon: {\n    transform: \"scale(2, 2)\",\n    color: \"rgb(196, 116, 69)\",\n  },\n  NotesButtons: {\n    backgroundColor: \"rgba(196, 116, 69, 0.7)\",\n    color: \"white\",\n  },\n  FilterFieldTitle: {\n    paddingRight: \"20px\",\n  },\n  FilterFieldSelect: {\n    paddingRight: \"20px\",\n    flexGrow: \"1\",\n  },\n  HeaderMenuAppBar: {\n    backgroundColor: \"rgb(196, 116, 69)\",\n  },\n  HeaderMenuToolBar: {\n    justifyContent: \"space-around\",\n    height: \"inherit\",\n    alignItems: \"inherit\",\n  },\n  RegistrationMenu: {\n    width: \"300px\",\n  },\n  RegistrationMenuTitle: {\n    color: \"rgb(196, 116, 69)\",\n  },\n  RegistrationMenuForm: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n}));\n\nexport default styles;\n","import React, { useState } from \"react\";\nimport { Menu, Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport Box from \"@material-ui/core/Box\";\nimport PropTypes from \"prop-types\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport {\n  setAuthBirthDate,\n  setAuthEmail,\n  setAuthFirstName,\n  setAuthLastName,\n  // eslint-disable-next-line import/no-unresolved\n} from \"@redux/auth/actions\";\nimport styles from \"../styles\";\n\nconst ProfileInfo = ({\n  email,\n  firstName,\n  lastName,\n  dateOfBirth,\n  setIsAuthorised,\n}) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const classes = styles();\n\n  return (\n    <Box className={classes.SignButtonBox}>\n      <Button onClick={handleClick}>\n        <Typography variant=\"h5\" className={classes.SignButton}>\n          Profile\n        </Typography>\n      </Button>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <Box className={classes.Menu}>\n          <AccountCircleIcon\n            className={`${classes.ProfileIcon} ${classes.MenuItem} ${classes.CenteredMenuItem}`}\n          />\n          <Typography variant=\"h5\" className={classes.MenuItem}>\n            Mail: {email}\n          </Typography>\n          <Typography variant=\"h5\" className={classes.MenuItem}>\n            Name: {firstName}\n          </Typography>\n          <Typography variant=\"h5\" className={classes.MenuItem}>\n            Surname: {lastName}\n          </Typography>\n          <Typography variant=\"h5\" className={classes.MenuItem}>\n            Date of birth: {dateOfBirth}\n          </Typography>\n          <Button\n            className={`${classes.NotesButtons} ${classes.MenuItem} ${classes.CenteredMenuItem}`}\n            variant=\"contained\"\n            onClick={() => setIsAuthorised(false)}\n          >\n            Log out\n          </Button>\n        </Box>\n      </Menu>\n    </Box>\n  );\n};\n\nconst setStateToProps = (state) => ({\n  email: state.auth.email,\n  firstName: state.auth.firstName,\n  lastName: state.auth.lastName,\n  dateOfBirth: state.auth.dateOfBirth,\n});\n\nconst setDispatchToProps = (dispatch) => ({\n  setEmail: bindActionCreators(setAuthEmail, dispatch),\n  setFirstName: bindActionCreators(setAuthFirstName, dispatch),\n  setLastName: bindActionCreators(setAuthLastName, dispatch),\n  setDateOfBirth: bindActionCreators(setAuthBirthDate, dispatch),\n});\n\nProfileInfo.propTypes = {\n  email: PropTypes.string,\n  firstName: PropTypes.string,\n  lastName: PropTypes.string,\n  dateOfBirth: PropTypes.string,\n  setIsAuthorised: PropTypes.func,\n};\n\nProfileInfo.defaultProps = {\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  dateOfBirth: \"\",\n  setIsAuthorised: () => {},\n};\n\nexport default connect(setStateToProps, setDispatchToProps)(ProfileInfo);\n","import ProfileInfo from \"./ProfileInfo\";\n\nexport default ProfileInfo;\n","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { Menu, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"../styles\";\n\nconst RegistrationMenu = ({ formik, setIsOnRegistrationProcess }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const classes = styles();\n\n  return (\n    <div className={classes.SignButtonBox}>\n      <Button onClick={handleClick}>\n        <Typography variant=\"h5\" className={classes.SignButton}>\n          Registration\n        </Typography>\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <div className={`${classes.Menu} ${classes.RegistrationMenu}`}>\n          <h1\n            className={`${classes.CenteredMenuItem} ${classes.RegistrationMenuTitle}`}\n          >\n            Registration\n          </h1>\n          <form\n            onSubmit={formik.handleSubmit}\n            className={classes.RegistrationMenuForm}\n          >\n            <div className={classes.MenuItem}>\n              <TextField\n                id=\"email\"\n                name=\"email\"\n                label=\"Email\"\n                type=\"email\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                error={formik.touched.email && Boolean(formik.errors.email)}\n                helperText={formik.touched.email && formik.errors.email}\n              />\n            </div>\n            <div className={classes.MenuItem}>\n              <TextField\n                name=\"firstName\"\n                label=\"First name\"\n                value={formik.values.firstName}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.firstName && Boolean(formik.errors.firstName)\n                }\n                helperText={formik.touched.firstName && formik.errors.firstName}\n              />\n            </div>\n            <div className={classes.MenuItem}>\n              <TextField\n                name=\"lastName\"\n                label=\"Last name\"\n                value={formik.values.lastName}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.lastName && Boolean(formik.errors.lastName)\n                }\n                helperText={formik.touched.lastName && formik.errors.lastName}\n              />\n            </div>\n            <div className={classes.MenuItem}>\n              <TextField\n                name=\"dateOfBirth\"\n                label=\"Date of birth\"\n                type=\"date\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                value={formik.values.dateOfBirth}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.dateOfBirth &&\n                  Boolean(formik.errors.dateOfBirth)\n                }\n                helperText={\n                  formik.touched.dateOfBirth && formik.errors.dateOfBirth\n                }\n                autoFocus\n              />\n            </div>\n            <div className={classes.MenuItem}>\n              <TextField\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                value={formik.values.password}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.password && Boolean(formik.errors.password)\n                }\n                helperText={formik.touched.password && formik.errors.password}\n              />\n            </div>\n            <div className={classes.MenuItem}>\n              <TextField\n                name=\"confirmPassword\"\n                label=\"Confirm password\"\n                type=\"password\"\n                value={formik.values.confirmPassword}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.confirmPassword &&\n                  Boolean(formik.errors.confirmPassword)\n                }\n                helperText={\n                  formik.touched.confirmPassword &&\n                  formik.errors.confirmPassword\n                }\n              />\n            </div>\n            <div className={classes.CenteredMenuItem}>\n              <Button\n                className={classes.NotesButtons}\n                variant=\"contained\"\n                type=\"submit\"\n              >\n                Submit\n              </Button>\n            </div>\n            <div className={classes.CenteredMenuItem}>\n              <Button\n                className={classes.NotesButtons}\n                variant=\"contained\"\n                onClick={() => setIsOnRegistrationProcess(false)}\n              >\n                Log in\n              </Button>\n            </div>\n          </form>\n        </div>\n      </Menu>\n    </div>\n  );\n};\n\nRegistrationMenu.propTypes = {\n  formik: PropTypes.func,\n  setIsOnRegistrationProcess: PropTypes.func,\n};\n\nRegistrationMenu.defaultProps = {\n  formik: () => {},\n  setIsOnRegistrationProcess: () => {},\n};\n\nexport default RegistrationMenu;\n","// eslint-disable-next-line import/no-unresolved\nimport ROUTES from \"@constants/ROUTES\";\n\nexport const getPreviewString = (stringToFormat, lengthOfPreviewString) =>\n  stringToFormat.length > 20\n    ? `${stringToFormat.substr(0, lengthOfPreviewString)} ...`\n    : stringToFormat;\n\nconst YEAR_STRING_LENGTH = 4;\nexport const getYearFromDate = (date) => date.substring(0, YEAR_STRING_LENGTH);\n\nexport const formatDate = (date) =>\n  `${date.getDate() > 10 ? date.getDate() : `0${date.getDate()}`}.${\n    date.getMonth() > 10 ? date.getMonth() : `0${date.getMonth()}`\n  }.${date.getFullYear()}`;\n\nexport const getSharedNoteLink = (email, id) => {\n  const baseUrl = window.location.href.match(/^.*\\//)[0];\n  return `${\n    baseUrl.substring(0, baseUrl.length - 1) + ROUTES.sharedNotes\n  }/${email}/${id}`;\n};\n","import { getYearFromDate } from \"./textFormatUtils\";\n\nconst currentDate = new Date();\nconst currentYear = currentDate.getUTCFullYear();\nconst MAX_HUMAN_AGE = 120;\nconst isYearValid = (year) =>\n  year > currentYear - MAX_HUMAN_AGE && year < currentYear;\n\nexport const validateRegistrationInfo = (values) => {\n  const errors = {};\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n  if (!values.firstName) {\n    errors.firstName = \"Required\";\n  } else if (!/^[a-zA-Z ]+$/.test(values.firstName)) {\n    errors.firstName = \"Invalid name input\";\n  }\n  if (!values.lastName) {\n    errors.lastName = \"Required\";\n  } else if (!/^[a-zA-Z ]+$/.test(values.lastName)) {\n    errors.lastName = \"Invalid last name input\";\n  }\n  if (!values.dateOfBirth) {\n    errors.dateOfBirth = \"Required\";\n  } else if (!isYearValid(getYearFromDate(values.dateOfBirth))) {\n    errors.dateOfBirth = \"Invalid year input\";\n  }\n  if (!values.password) {\n    errors.password = \"Required\";\n  } else if (\n    !/(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,}/.test(values.password)\n  ) {\n    errors.password =\n      \"Password must contain numbers, \\n\" +\n      \" latin letters (lower- and uppercase) \\n\" +\n      \" and be at least 6 characters long \\n\";\n  }\n  if (!values.confirmPassword) {\n    errors.confirmPassword = \"Required\";\n  } else if (values.password !== values.confirmPassword) {\n    errors.confirmPassword = \"Password confirm is invalid\";\n  }\n  return errors;\n};\n\nexport const validateAuthInfo = (values, data) => {\n  const errors = {};\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n  if (!values.password) {\n    errors.password = \"Required\";\n  }\n  if (\n    !data.data.find(\n      (user) => user.email === values.email && user.password === values.password\n    )\n  ) {\n    errors.email = \"Such user not found\";\n  }\n  return errors;\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useFormik } from \"formik\";\n\n// eslint-disable-next-line import/no-unresolved\nimport { USER_DATA_KEY } from \"@constants/LOCAL_STORAGE_KEYS\";\n// eslint-disable-next-line import/no-unresolved\nimport { validateRegistrationInfo } from \"@utils/validations\";\nimport RegistrationMenu from \"./RegistrationMenu\";\n\nconst RegistrationMenuContainer = ({\n  email,\n  firstName,\n  lastName,\n  dateOfBirth,\n  setEmail,\n  setFirstName,\n  setLastName,\n  setDateOfBirth,\n  setIsAuthorised,\n  setIsOnRegistrationProcess,\n}) => {\n  const formik = useFormik({\n    initialValues: {\n      email,\n      firstName,\n      lastName,\n      dateOfBirth,\n      password: \"\",\n      confirmPassword: \"\",\n    },\n\n    validate: (values) => validateRegistrationInfo(values),\n\n    onSubmit: (values, actions) => {\n      const userData = {\n        email: values.email,\n        firstName: values.firstName,\n        lastName: values.lastName,\n        dateOfBirth: values.dateOfBirth,\n      };\n      setEmail(userData.email);\n      setFirstName(userData.firstName);\n      setLastName(userData.lastName);\n      setDateOfBirth(userData.dateOfBirth);\n\n      localStorage.setItem(USER_DATA_KEY, JSON.stringify(userData));\n\n      actions.setSubmitting(false);\n\n      setIsAuthorised(true);\n      setIsOnRegistrationProcess(false);\n    },\n  });\n\n  return (\n    <RegistrationMenu\n      formik={formik}\n      setIsOnRegistrationProcess={setIsOnRegistrationProcess}\n    />\n  );\n};\n\nRegistrationMenuContainer.propTypes = {\n  email: PropTypes.string,\n  firstName: PropTypes.string,\n  lastName: PropTypes.string,\n  dateOfBirth: PropTypes.string,\n  setEmail: PropTypes.func,\n  setFirstName: PropTypes.func,\n  setLastName: PropTypes.func,\n  setDateOfBirth: PropTypes.func,\n  setIsAuthorised: PropTypes.func,\n  setIsOnRegistrationProcess: PropTypes.func,\n};\n\nRegistrationMenuContainer.defaultProps = {\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  dateOfBirth: \"\",\n  setEmail: () => {},\n  setFirstName: () => {},\n  setLastName: () => {},\n  setDateOfBirth: () => {},\n  setIsAuthorised: () => {},\n  setIsOnRegistrationProcess: () => {},\n};\n\nexport default RegistrationMenuContainer;\n","import RegistrationMenu from \"./RegistrationMenu\";\nimport RegistrationMenuContainer from \"./RegistrationMenuContainer\";\n\nexport { RegistrationMenu };\nexport default RegistrationMenuContainer;\n","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { Menu, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"../styles\";\n\nconst AuthMenu = ({ formik, setIsOnRegistrationProcess }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const classes = styles();\n\n  return (\n    <div className={classes.SignButtonBox}>\n      <Button onClick={handleClick}>\n        <Typography variant=\"h5\" className={classes.SignButton}>\n          Log in\n        </Typography>\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <div className={classes.Menu}>\n          <h1\n            className={classes.CenteredMenuItem}\n            style={{ color: \"rgb(196, 116, 69)\" }}\n          >\n            Sign in\n          </h1>\n          <form\n            onSubmit={formik.handleSubmit}\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              wrap: \"nowrap\",\n            }}\n          >\n            <div className={classes.MenuItem}>\n              <TextField\n                id=\"email\"\n                name=\"email\"\n                label=\"Email\"\n                type=\"email\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                error={formik.touched.email && Boolean(formik.errors.email)}\n                helperText={formik.touched.email && formik.errors.email}\n              />\n            </div>\n            <div className={classes.MenuItem}>\n              <TextField\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                value={formik.values.password}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.password && Boolean(formik.errors.password)\n                }\n                helperText={formik.touched.password && formik.errors.password}\n              />\n            </div>\n            <div className={classes.CenteredMenuItem}>\n              <Button\n                className={classes.NotesButton}\n                variant=\"contained\"\n                type=\"submit\"\n              >\n                Submit\n              </Button>\n            </div>\n            <div className={classes.CenteredMenuItem}>\n              <Button\n                className={classes.NotesButton}\n                variant=\"contained\"\n                onClick={() => setIsOnRegistrationProcess(true)}\n              >\n                Create new account\n              </Button>\n            </div>\n          </form>\n        </div>\n      </Menu>\n    </div>\n  );\n};\n\nAuthMenu.propTypes = {\n  formik: PropTypes.func,\n  setIsOnRegistrationProcess: PropTypes.func,\n};\n\nAuthMenu.defaultProps = {\n  formik: () => {},\n  setIsOnRegistrationProcess: () => {},\n};\n\nexport default AuthMenu;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useFormik } from \"formik\";\n\n// eslint-disable-next-line import/no-unresolved\nimport { USER_DATA_KEY } from \"@constants/LOCAL_STORAGE_KEYS\";\n// eslint-disable-next-line import/no-unresolved\nimport { useGetUser } from \"@constants/API_CONFIG\";\n// eslint-disable-next-line import/no-unresolved\nimport { validateAuthInfo } from \"@utils/validations\";\nimport AuthMenu from \"./AuthMenu\";\n\nconst AuthMenuContainer = ({\n  email,\n  setEmail,\n  setFirstName,\n  setLastName,\n  setDateOfBirth,\n  setIsAuthorised,\n  setIsOnRegistrationProcess,\n}) => {\n  const { data: user } = useGetUser();\n\n  const formik = useFormik({\n    initialValues: {\n      email,\n      password: \"\",\n    },\n\n    validate: (values) => validateAuthInfo(values, user),\n\n    onSubmit: (values, actions) => {\n      const currentUserData = user.data.filter(\n        (userData) =>\n          userData.email === values.email &&\n          userData.password === values.password\n      )[0];\n\n      setEmail(currentUserData.email);\n      setFirstName(currentUserData.firstName);\n      setLastName(currentUserData.lastName);\n      setDateOfBirth(currentUserData.dateOfBirth);\n\n      localStorage.setItem(USER_DATA_KEY, JSON.stringify(currentUserData));\n\n      setIsAuthorised(true);\n      actions.setSubmitting(false);\n    },\n  });\n\n  return (\n    <AuthMenu\n      formik={formik}\n      setIsOnRegistrationProcess={setIsOnRegistrationProcess}\n    />\n  );\n};\n\nAuthMenuContainer.propTypes = {\n  email: PropTypes.string,\n  setEmail: PropTypes.func,\n  setFirstName: PropTypes.func,\n  setLastName: PropTypes.func,\n  setDateOfBirth: PropTypes.func,\n  setIsAuthorised: PropTypes.func,\n  setIsOnRegistrationProcess: PropTypes.func,\n};\n\nAuthMenuContainer.defaultProps = {\n  email: \"\",\n  setEmail: () => {},\n  setFirstName: () => {},\n  setLastName: () => {},\n  setDateOfBirth: () => {},\n  setIsAuthorised: () => {},\n  setIsOnRegistrationProcess: () => {},\n};\n\nexport default AuthMenuContainer;\n","import { useQuery } from \"react-query\";\nimport axios from \"axios\";\n\nconst userApi = \"https://mocki.io/v1/cb356f5f-32cc-48f8-8f05-297ecc66ca90\";\n\nexport const useGetUser = () => {\n  const response = useQuery(\"users\", () => axios(userApi));\n  return response;\n};\n\nconst notesApi = \"https://mocki.io/v1/7f0b81a8-b19d-4301-b353-3c7773d55df9\";\n\nexport const useGetNotes = (onResponseSuccess) => {\n  const response = useQuery(\"notes\", () => axios(notesApi), {\n    onSuccess: () => onResponseSuccess(response.data),\n  });\n  return response;\n};\n","import AuthMenu from \"./AuthMenu\";\nimport AuthMenuContainer from \"./AuthMenuContainer\";\n\nexport { AuthMenu };\nexport default AuthMenuContainer;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport RegistrationMenuContainer from \"../RegistrationMenu\";\nimport AuthMenuContainer from \"../AuthMenu\";\n\nimport {\n  setAuthBirthDate,\n  setAuthEmail,\n  setAuthFirstName,\n  setAuthLastName,\n} from \"../../redux/auth/actions\";\n\nconst SignInMenu = ({\n  email,\n  firstName,\n  lastName,\n  dateOfBirth,\n  setEmail,\n  setFirstName,\n  setLastName,\n  setDateOfBirth,\n  setIsAuthorised,\n}) => {\n  const [isOnRegistrationProcess, setIsOnRegistrationProcess] = useState(false);\n  return isOnRegistrationProcess ? (\n    <RegistrationMenuContainer\n      setIsAuthorised={setIsAuthorised}\n      setIsOnRegistrationProcess={setIsOnRegistrationProcess}\n      email={email}\n      firstName={firstName}\n      lastName={lastName}\n      dateOfBirth={dateOfBirth}\n      setEmail={setEmail}\n      setFirstName={setFirstName}\n      setLastName={setLastName}\n      setDateOfBirth={setDateOfBirth}\n    />\n  ) : (\n    <AuthMenuContainer\n      setIsAuthorised={setIsAuthorised}\n      setIsOnRegistrationProcess={setIsOnRegistrationProcess}\n      setEmail={setEmail}\n      setFirstName={setFirstName}\n      setLastName={setLastName}\n      setDateOfBirth={setDateOfBirth}\n    />\n  );\n};\n\nconst setStateToProps = (state) => ({\n  email: state.auth.email,\n  firstName: state.auth.firstName,\n  lastName: state.auth.lastName,\n  dateOfBirth: state.auth.dateOfBirth,\n});\n\nconst setDispatchToProps = (dispatch) => ({\n  setEmail: bindActionCreators(setAuthEmail, dispatch),\n  setFirstName: bindActionCreators(setAuthFirstName, dispatch),\n  setLastName: bindActionCreators(setAuthLastName, dispatch),\n  setDateOfBirth: bindActionCreators(setAuthBirthDate, dispatch),\n});\n\nSignInMenu.propTypes = {\n  email: PropTypes.string,\n  firstName: PropTypes.string,\n  lastName: PropTypes.string,\n  dateOfBirth: PropTypes.string,\n  setEmail: PropTypes.func,\n  setFirstName: PropTypes.func,\n  setLastName: PropTypes.func,\n  setDateOfBirth: PropTypes.func,\n  setIsAuthorised: PropTypes.func,\n};\n\nSignInMenu.defaultProps = {\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  dateOfBirth: \"\",\n  setEmail: () => {},\n  setFirstName: () => {},\n  setLastName: () => {},\n  setDateOfBirth: () => {},\n  setIsAuthorised: () => {},\n};\n\nexport default connect(setStateToProps, setDispatchToProps)(SignInMenu);\n","import SignInMenu from \"./SignInMenu\";\n\nexport default SignInMenu;\n","import React from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\n// eslint-disable-next-line import/no-unresolved\nimport setSignInState from \"@redux/signInState/actions\";\nimport ProfileInfo from \"../ProfileInfo\";\nimport SignInMenu from \"../SignInMenu\";\n\nconst SignInManager = ({ isSignIn, setIsSignIn }) =>\n  isSignIn ? (\n    <ProfileInfo setIsAuthorised={setIsSignIn} />\n  ) : (\n    <SignInMenu setIsAuthorised={setIsSignIn} />\n  );\n\nconst setStateToProps = (state) => ({\n  isSignIn: state.signIn.isSignIn,\n});\n\nconst setDispatchToProps = (dispatch) => ({\n  setIsSignIn: bindActionCreators(setSignInState, dispatch),\n});\n\nSignInManager.propTypes = {\n  isSignIn: PropTypes.bool,\n  setIsSignIn: PropTypes.func,\n};\n\nSignInManager.defaultProps = {\n  isSignIn: false,\n  setIsSignIn: () => {},\n};\n\nexport default connect(setStateToProps, setDispatchToProps)(SignInManager);\n","import SignInManager from \"./SignInManager\";\n\nexport default SignInManager;\n","import HeaderMenu from \"./HeaderMenu\";\n\nexport default HeaderMenu;\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { Typography } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\n\n// eslint-disable-next-line import/no-unresolved\nimport ROUTES from \"@constants/ROUTES\";\nimport SignInManager from \"../SignInManager\";\nimport styles from \"../styles\";\n\nconst HeaderMenu = () => {\n  const classes = styles();\n  return (\n    <AppBar position=\"static\" className={classes.HeaderMenuAppBar}>\n      <Toolbar className={classes.HeaderMenuToolBar}>\n        <Typography variant=\"h5\" className={classes.HeaderItem}>\n          <NavLink\n            to={ROUTES.notes}\n            activeClassName=\"ActiveNavLink\"\n            className={classes.NavLink}\n          >\n            My notes\n          </NavLink>\n        </Typography>\n        <Typography variant=\"h5\" className={classes.HeaderItem}>\n          <NavLink\n            to={ROUTES.sharedNotes}\n            activeClassName=\"ActiveNavLink\"\n            className={classes.NavLink}\n          >\n            Shared notes\n          </NavLink>\n        </Typography>\n        <Typography variant=\"h5\" className={classes.HeaderItem}>\n          <NavLink\n            to={ROUTES.about}\n            activeClassName=\"ActiveNavLink\"\n            className={classes.NavLink}\n          >\n            About\n          </NavLink>\n        </Typography>\n        <SignInManager />\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default HeaderMenu;\n","import React from \"react\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Input from \"@material-ui/core/Input\";\nimport PropTypes from \"prop-types\";\n\nconst SearchField = ({ array, setArray }) => {\n  const handleInputChange = (event) => {\n    const searchText = event.target.value;\n    setArray(\n      array.filter(\n        (item) =>\n          item.title.toLowerCase().includes(searchText.toLowerCase()) ||\n          item.content.toLowerCase().includes(searchText.toLowerCase())\n      )\n    );\n  };\n\n  return (\n    <Input\n      label=\"Search\"\n      onChange={handleInputChange}\n      startAdornment={\n        <InputAdornment>\n          <SearchIcon />\n        </InputAdornment>\n      }\n    />\n  );\n};\n\nSearchField.propTypes = {\n  array: PropTypes.arrayOf(PropTypes.object),\n  setArray: PropTypes.func,\n};\n\nSearchField.defaultProps = {\n  array: [],\n  setArray: () => {},\n};\n\nexport default SearchField;\n","import SearchField from \"./SearchField\";\n\nexport default SearchField;\n","// eslint-disable-next-line import/no-unresolved\nimport { SHARED_NOTES_ARRAY_KEY } from \"@constants/LOCAL_STORAGE_KEYS\";\n\nexport const SORT_PARAMETERS = {\n  nameAscending: 0,\n  nameDescending: 1,\n  dateAscending: 2,\n  dateDescending: 3,\n  none: 4,\n};\n\nexport const sortNotesArray = (array, sortParameter) => {\n  switch (sortParameter) {\n    case SORT_PARAMETERS.nameAscending:\n      return array.sort((note1, note2) => {\n        if (note1.title > note2.title) return 1;\n        if (note1.title < note2.title) return -1;\n        return 0;\n      });\n    case SORT_PARAMETERS.nameDescending:\n      return array.sort((note1, note2) => {\n        if (note1.title < note2.title) return 1;\n        if (note1.title > note2.title) return -1;\n        return 0;\n      });\n    case SORT_PARAMETERS.dateAscending:\n      return array.sort((note1, note2) => {\n        if (note1.date > note2.date) return 1;\n        if (note1.date < note2.date) return -1;\n        return 0;\n      });\n    case SORT_PARAMETERS.dateDescending:\n      return array.sort((note1, note2) => {\n        if (note1.date < note2.date) return 1;\n        if (note1.date > note2.date) return -1;\n        return 0;\n      });\n    case SORT_PARAMETERS.none:\n      return array;\n    default:\n      return {};\n  }\n};\n\nexport const reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\nexport const updateSharedNotesArray = (noteToUpdate, userWhoShare) => {\n  const currentArrayAsString = localStorage.getItem(SHARED_NOTES_ARRAY_KEY);\n  let currentArray = currentArrayAsString\n    ? JSON.parse(currentArrayAsString)\n    : [];\n  currentArray =\n    currentArray.filter(\n      (data) =>\n        data.userWhoShare === userWhoShare &&\n        noteToUpdate.id === data.note.id &&\n        noteToUpdate.userEmail === data.note.userEmail\n    ).length !== 0\n      ? currentArray\n      : currentArray.concat({\n          userWhoShare,\n          note: noteToUpdate,\n        });\n  localStorage.setItem(SHARED_NOTES_ARRAY_KEY, JSON.stringify(currentArray));\n};\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport PropTypes from \"prop-types\";\n\n// eslint-disable-next-line import/no-unresolved\nimport { SORT_PARAMETERS } from \"@utils/arrayProcessingUtils\";\nimport styles from \"../styles\";\n\nconst FilterField = ({ setSortingParameter }) => {\n  const classes = styles();\n  return (\n    <div style={{ display: \"flex\" }}>\n      <Typography variant=\"h5\" className={classes.FilterFieldTitle}>\n        Sort by\n      </Typography>\n      <Select\n        defaultValue={SORT_PARAMETERS.dateDescending}\n        className={classes.FilterFieldSelect}\n        onChange={(event) => setSortingParameter(event.target.value)}\n      >\n        <MenuItem value={SORT_PARAMETERS.dateAscending}>\n          Date Ascending\n        </MenuItem>\n        <MenuItem value={SORT_PARAMETERS.dateDescending}>\n          Date Descending\n        </MenuItem>\n        <MenuItem value={SORT_PARAMETERS.nameAscending}>\n          Name Ascending\n        </MenuItem>\n        <MenuItem value={SORT_PARAMETERS.nameDescending}>\n          Name Descending\n        </MenuItem>\n      </Select>\n    </div>\n  );\n};\n\nFilterField.propTypes = {\n  setSortingParameter: PropTypes.func,\n};\n\nFilterField.defaultProps = {\n  setSortingParameter: () => {},\n};\n\nexport default FilterField;\n","import FilterField from \"./FilterField\";\n\nexport default FilterField;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst styles = makeStyles(() => ({\n  NotesContainer: {\n    display: \"flex\",\n    width: \"90%\",\n    height: \"100vh\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  },\n  ActiveNoteTitle: {\n    textAlign: \"center\",\n  },\n  ActiveNoteContent: {\n    wordWrap: \"break-word\",\n    textAlign: \"justify\",\n  },\n  NotesListMenu: {\n    height: \"auto\",\n    alignSelf: \"flex-start\",\n    backgroundColor: \"rgba(255, 255, 255, 0.9)\",\n  },\n  DialogInputField: {\n    width: \"100%\",\n  },\n  NotesButtons: {\n    backgroundColor: \"rgba(196, 116, 69, 0.7)\",\n    color: \"white\",\n  },\n  WithMargin: {\n    margin: \"10px 10px\",\n  },\n  NotesList: { maxHeight: \"400px\", overflow: \"auto\" },\n}));\n\nconst DEFAULT_NOTES_COLOR = \"rgba(255, 255, 0, 0.3)\";\nconst CUSTOM_NOTES_COLOR = \"rgba(0, 255, 0, 0.3)\";\n\nexport const setItemStyle = (isDragging, draggableStyle, item) => ({\n  ...draggableStyle,\n  ...((isDragging && {\n    background: \"rgba(0, 0, 255, 0.3)\",\n  }) ||\n    (!isDragging &&\n      (item.userEmail === \"\"\n        ? {\n            background: DEFAULT_NOTES_COLOR,\n          }\n        : {\n            background: CUSTOM_NOTES_COLOR,\n          }))),\n});\n\nexport default styles;\n","import React from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  Grid,\n} from \"@material-ui/core\";\nimport RootRef from \"@material-ui/core/RootRef\";\nimport NoteIcon from \"@material-ui/icons/Note\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport PropTypes from \"prop-types\";\n\n// eslint-disable-next-line import/no-unresolved\nimport { SORT_PARAMETERS, reorder } from \"@utils/arrayProcessingUtils\";\n// eslint-disable-next-line import/no-unresolved\nimport { getPreviewString } from \"@utils/textFormatUtils\";\nimport styles, { setItemStyle } from \"./styles\";\n\nconst LENGTH_OF_NOTE_CONTENT_PREVIEW = 20;\n\nconst NotesList = ({\n  notesArray,\n  selectedIndex,\n  setSelectedIndex,\n  setFilteredArray,\n  setSortingParameter,\n}) => {\n  const onDragEnd = (result) => {\n    if (!result.destination) {\n      return;\n    }\n    const items = reorder(\n      notesArray,\n      result.source.index,\n      result.destination.index\n    );\n\n    setSortingParameter(SORT_PARAMETERS.none);\n    setFilteredArray(items);\n  };\n\n  const classes = styles();\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"droppable\">\n        {(droppableProvided) => (\n          <RootRef rootRef={droppableProvided.innerRef}>\n            <List className={classes.NotesList}>\n              {notesArray.map((item, index) => (\n                <Draggable\n                  key={item.userEmail + item.id}\n                  draggableId={item.id.toString()}\n                  index={index}\n                >\n                  {(draggableProvided, snapshot) => (\n                    <ListItem\n                      button\n                      selected={selectedIndex === item.id}\n                      onClick={() => setSelectedIndex(item.id)}\n                      ContainerComponent=\"li\"\n                      ContainerProps={{ ref: draggableProvided.innerRef }}\n                      /* eslint-disable-next-line react/jsx-props-no-spreading */\n                      {...draggableProvided.draggableProps}\n                      /* eslint-disable-next-line react/jsx-props-no-spreading */\n                      {...draggableProvided.dragHandleProps}\n                      style={setItemStyle(\n                        snapshot.isDragging,\n                        draggableProvided.draggableProps.style,\n                        item\n                      )}\n                    >\n                      <ListItemIcon>\n                        <NoteIcon />\n                      </ListItemIcon>\n                      <ListItemText\n                        primary={\n                          <Grid container justify=\"space-between\">\n                            <span>{item.title}</span>\n                            <span>{item.date}</span>\n                          </Grid>\n                        }\n                        secondary={getPreviewString(\n                          item.content,\n                          LENGTH_OF_NOTE_CONTENT_PREVIEW\n                        )}\n                      />\n                      <ListItemSecondaryAction />\n                    </ListItem>\n                  )}\n                </Draggable>\n              ))}\n              {droppableProvided.placeholder}\n            </List>\n          </RootRef>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nNotesList.propTypes = {\n  notesArray: PropTypes.arrayOf(PropTypes.object),\n  selectedIndex: PropTypes.number,\n  setSelectedIndex: PropTypes.func,\n  setFilteredArray: PropTypes.func,\n  setSortingParameter: PropTypes.func,\n};\n\nNotesList.defaultProps = {\n  notesArray: [],\n  selectedIndex: null,\n  setSelectedIndex() {},\n  setFilteredArray: () => {},\n  setSortingParameter: () => {},\n};\n\nexport default NotesList;\n","export const TITLE_MAX_LENGTH = 35;\nexport const CONTENT_MAX_LENGTH = 2000;\n\nconst NOTES = [\n  {\n    id: 0,\n    title: \"React\",\n    content:\n      \"React — JavaScript-библиотека с открытым исходным кодом для разработки пользовательских интерфейсов.\" +\n      \"React разрабатывается и поддерживается Facebook, Instagram и сообществом отдельных разработчиков и корпораций.\" +\n      \"React может использоваться для разработки одностраничных и мобильных приложений. Его цель — предоставить высокую скорость, простоту и масштабируемость.\" +\n      \" В качестве библиотеки для разработки пользовательских интерфейсов React часто используется с другими библиотеками, такими как MobX, Redux и GraphQL.\",\n    date: \"03.05.2020\",\n    userEmail: \"\",\n  },\n  {\n    id: 1,\n    title: \"Material Design\",\n    content:\n      \"Material Design — стиль графического дизайна интерфейсов программного обеспечения и приложений,\" +\n      \" разработанный компанией Google. Впервые представлен на конференции Google I/O 25 июня 2014 года.\" +\n      \" Стиль расширяет идею «карточек», появившуюся в Google Now, более широким применением строгих макетов,\" +\n      \" анимаций и переходов, отступов и эффектов глубины (света и тени). По идее графических дизайнеров Google,\" +\n      \" у приложений не должно быть острых углов, карточки должны переключаться между собой плавно и практически незаметно.\",\n    date: \"02.05.2020\",\n    userEmail: \"\",\n  },\n  {\n    id: 2,\n    title: \"Использование хука состояния\",\n    content:\n      \"useState — это хук.\" +\n      \" Мы вызываем его, чтобы наделить наш функциональный компонент внутренним состоянием.\" +\n      \" React будет хранить это состояние между рендерами. Вызов useState возвращает массив с двумя элементами,\" +\n      \" который содержит: текущее значение состояния и функцию для его обновления.\" +\n      \" Эту функцию можно использовать где угодно, например, в обработчике событий.\" +\n      \" Она схожа с this.setState в классах, но не сливает новое и старое состояние вместе.\",\n    date: \"02.05.2020\",\n    userEmail: \"\",\n  },\n  {\n    id: 3,\n    title: \"GitHub Pages\",\n    content:\n      \"GitHub Pages are public web pages for users, organizations, and repositories,\" +\n      \" that are freely hosted on GitHub’s github.io domain or on a custom domain name of your choice.\" +\n      \" GitHub Pages are powered by Jekyll behind the scenes,\" +\n      \" so they’re a great way to host your Jekyll-powered website for free.\",\n    date: \"02.05.2020\",\n    userEmail: \"\",\n  },\n];\n\nexport default NOTES;\n","import React, { useState } from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport { Grid } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  TITLE_MAX_LENGTH,\n  CONTENT_MAX_LENGTH,\n  // eslint-disable-next-line import/no-unresolved\n} from \"@constants/NOTES\";\nimport styles from \"./styles\";\n\nconst NoteProcessingDialog = ({\n  dialogTitle,\n  noteTitle,\n  noteContent,\n  isOpen,\n  setOpen,\n  onSubmit,\n}) => {\n  let textFieldTitle = noteTitle;\n  let textFieldContent = noteContent;\n\n  const [isTitleCorrect, setIsTitleCorrect] = useState(true);\n  const [isContentCorrect, setIsContentCorrect] = useState(true);\n\n  const checkIsTitleCorrect = (title) =>\n    title.length > 0 && title.length < TITLE_MAX_LENGTH;\n  const checkIsContentCorrect = (content) =>\n    content.length > 0 && content.length < CONTENT_MAX_LENGTH;\n\n  const handleTitleFieldChange = (event) => {\n    textFieldTitle = event.target.value;\n    setIsTitleCorrect(checkIsTitleCorrect(textFieldTitle));\n  };\n  const handleContentFieldChange = (event) => {\n    textFieldContent = event.target.value;\n    setIsContentCorrect(checkIsContentCorrect(textFieldContent));\n  };\n  const handleSaveBtnClick = () => {\n    onSubmit(textFieldTitle, textFieldContent);\n    setOpen(false);\n  };\n  const classes = styles();\n\n  return (\n    <Dialog open={isOpen} fullWidth=\"true\" maxWidth=\"false\">\n      <DialogTitle>{dialogTitle}</DialogTitle>\n      <DialogContent>\n        <Grid direction=\"column\">\n          <TextField\n            id=\"editTitleField\"\n            error={!isTitleCorrect}\n            style={styles.DialogInputField}\n            label=\"title\"\n            defaultValue={textFieldTitle}\n            onChange={handleTitleFieldChange}\n            helperText={\n              isTitleCorrect\n                ? \"\"\n                : `Title length must be between 1 and ${TITLE_MAX_LENGTH} symbols`\n            }\n          />\n          <TextField\n            error={!isContentCorrect}\n            className={classes.DialogInputField}\n            label=\"content\"\n            defaultValue={textFieldContent}\n            onChange={handleContentFieldChange}\n            helperText={\n              isContentCorrect\n                ? \"\"\n                : `Content length must be between 1 and ${CONTENT_MAX_LENGTH} symbols`\n            }\n            multiline\n          />\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => setOpen(!isOpen)}>Close</Button>\n        <Button\n          disabled={!(isTitleCorrect && isContentCorrect)}\n          onClick={handleSaveBtnClick}\n        >\n          Save\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nNoteProcessingDialog.propTypes = {\n  dialogTitle: PropTypes.string,\n  noteTitle: PropTypes.string,\n  noteContent: PropTypes.string,\n  isOpen: PropTypes.bool,\n  setOpen: PropTypes.func,\n  onSubmit: PropTypes.func,\n};\n\nNoteProcessingDialog.defaultProps = {\n  dialogTitle: \"\",\n  noteTitle: \"\",\n  noteContent: \"\",\n  isOpen: false,\n  setOpen: () => {},\n  onSubmit: () => {},\n};\n\nexport default NoteProcessingDialog;\n","import React, { useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\n// eslint-disable-next-line import/no-unresolved\nimport SearchField from \"@components/SearchField\";\n// eslint-disable-next-line import/no-unresolved\nimport FilterField from \"@components/FilterField\";\n// eslint-disable-next-line import/no-unresolved\nimport { SORT_PARAMETERS, sortNotesArray } from \"@utils/arrayProcessingUtils\";\n// eslint-disable-next-line import/no-unresolved\nimport { formatDate } from \"@utils/textFormatUtils\";\n// eslint-disable-next-line import/no-unresolved\nimport { NOTES_ARRAY_KEY } from \"@constants/LOCAL_STORAGE_KEYS\";\nimport styles from \"./styles\";\nimport NotesList from \"./NotesList\";\nimport NoteProcessingDialog from \"./NoteProcessingDialog\";\n\nconst NotesListMenu = ({\n  userEmail,\n  notesArray,\n  selectedIndex,\n  changeSelectedIndex,\n  setNotesArray,\n  isOnSharedNotes,\n}) => {\n  const [filteredArray, setFilteredArray] = useState(notesArray);\n  const [sortingParameter, setSortingParameter] = useState(\n    SORT_PARAMETERS.dateDescending\n  );\n  const [isDialogOpen, setDialogState] = useState(false);\n\n  useEffect(() => {\n    setFilteredArray(notesArray);\n  }, [notesArray]);\n\n  const addNote = (title, content) => {\n    const newNote = {\n      id: notesArray.length,\n      title,\n      content,\n      date: formatDate(new Date()),\n      userEmail,\n    };\n    localStorage.setItem(\n      NOTES_ARRAY_KEY,\n      JSON.stringify(notesArray.concat(newNote))\n    );\n    setNotesArray(notesArray.concat(newNote));\n  };\n\n  const classes = styles();\n\n  return (\n    <Grid\n      className={classes.NotesListMenu}\n      container\n      item\n      xs={3}\n      direction=\"column\"\n    >\n      <SearchField array={notesArray} setArray={setFilteredArray} />\n      <FilterField setSortingParameter={setSortingParameter} />\n      <NotesList\n        notesArray={sortNotesArray(filteredArray, sortingParameter).filter(\n          !isOnSharedNotes\n            ? (note) => note.userEmail === \"\" || note.userEmail === userEmail\n            : (note) => note.userEmail !== \"\" && note.title !== \"\"\n        )}\n        selectedIndex={selectedIndex}\n        setSelectedIndex={changeSelectedIndex}\n        setFilteredArray={setFilteredArray}\n        setSortingParameter={setSortingParameter}\n      />\n      {!isOnSharedNotes ? (\n        <Button\n          className={classes.NotesButtons}\n          onClick={() => setDialogState(!isDialogOpen)}\n        >\n          <AddIcon />\n        </Button>\n      ) : (\n        <div />\n      )}\n      <NoteProcessingDialog\n        dialogTitle=\"Adding note\"\n        setOpen={setDialogState}\n        isOpen={isDialogOpen}\n        noteTitle=\"Select title\"\n        noteContent=\"Fill your note with some content\"\n        onSubmit={addNote}\n      />\n    </Grid>\n  );\n};\n\nconst setStateToProps = (state) => ({\n  userEmail: state.auth.email,\n});\n\nNotesListMenu.propTypes = {\n  userEmail: PropTypes.string,\n  notesArray: PropTypes.arrayOf(PropTypes.object),\n  selectedIndex: PropTypes.number,\n  changeSelectedIndex: PropTypes.func,\n  setNotesArray: PropTypes.func,\n  isOnSharedNotes: PropTypes.bool,\n};\n\nNotesListMenu.defaultProps = {\n  userEmail: \"\",\n  notesArray: [],\n  selectedIndex: null,\n  changeSelectedIndex: () => {},\n  setNotesArray: () => {},\n  isOnSharedNotes: false,\n};\n\nexport default connect(setStateToProps)(NotesListMenu);\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"../styles\";\n\nconst BodyContainer = ({ children }) => {\n  const classes = styles();\n  return (\n    <Grid className={classes.ActiveNote} container wrap=\"nowrap\">\n      {children}\n    </Grid>\n  );\n};\n\nBodyContainer.propTypes = {\n  children: PropTypes.element,\n};\n\nBodyContainer.defaultProps = {\n  children: <div />,\n};\n\nexport default BodyContainer;\n","import BodyContainer from \"./BodyContainer\";\n\nexport default BodyContainer;\n","import React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert/Alert\";\nimport PropTypes from \"prop-types\";\n\n// eslint-disable-next-line import/no-unresolved\nimport { getSharedNoteLink } from \"@utils/textFormatUtils\";\n\nconst NoteSharingSnackbar = ({\n  isSnackbarOpen,\n  setSnackbarState,\n  userEmail,\n  id,\n}) => (\n  <Snackbar\n    open={isSnackbarOpen}\n    autoHideDuration={3000}\n    onClose={() => setSnackbarState(false)}\n  >\n    <MuiAlert\n      elevation={6}\n      variant=\"filled\"\n      onClose={() => setSnackbarState(false)}\n      severity=\"success\"\n    >\n      Link copied: {getSharedNoteLink(userEmail, id)}\n    </MuiAlert>\n  </Snackbar>\n);\n\nNoteSharingSnackbar.propTypes = {\n  isSnackbarOpen: PropTypes.bool,\n  setSnackbarState: PropTypes.func,\n  userEmail: PropTypes.string,\n  id: PropTypes.string,\n};\n\nNoteSharingSnackbar.defaultProps = {\n  setSnackbarState: () => {},\n  userEmail: \"\",\n  id: \"\",\n  isSnackbarOpen: false,\n};\n\nexport default NoteSharingSnackbar;\n","import React, { useState } from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\n// eslint-disable-next-line import/no-unresolved\nimport BodyContainer from \"@components/BodyContainer\";\n// eslint-disable-next-line import/no-unresolved\nimport { getSharedNoteLink } from \"@utils/textFormatUtils\";\n// eslint-disable-next-line import/no-unresolved\nimport { updateSharedNotesArray } from \"@utils/arrayProcessingUtils\";\nimport styles from \"./styles\";\nimport NoteProcessingDialog from \"./NoteProcessingDialog\";\nimport NoteSharingSnackbar from \"./NoteSharingSnackbar\";\n\nconst ActiveNote = ({\n  selectedItem,\n  updateNote,\n  userEmail,\n  isOnSharedNotes,\n}) => {\n  const [isDialogOpen, setDialogState] = useState(false);\n  const [isSnackbarOpen, setSnackbarState] = useState(false);\n  const classes = styles();\n\n  return selectedItem ? (\n    <BodyContainer>\n      <Grid container direction=\"column\" alignItems=\"center\">\n        <Typography className={classes.ActiveNoteTitle} variant=\"h3\">\n          {selectedItem.title}\n        </Typography>\n        <Typography className={classes.ActiveNoteContent} variant=\"h5\">\n          {selectedItem.content}\n        </Typography>\n      </Grid>\n      {!isOnSharedNotes && selectedItem.userEmail !== \"\" ? (\n        <Grid direction=\"column\">\n          <Button\n            onClick={() => setDialogState(!isDialogOpen)}\n            className={`${classes.ActiveNoteContent} ${classes.NotesButtons} ${classes.WithMargin}`}\n          >\n            Edit\n          </Button>\n          <Button\n            onClick={() => {\n              navigator.clipboard.writeText(\n                getSharedNoteLink(userEmail, selectedItem.id)\n              );\n              updateSharedNotesArray(selectedItem, userEmail);\n              setSnackbarState(true);\n            }}\n            className={`${classes.ActiveNoteContent} ${classes.NotesButtons} ${classes.WithMargin}`}\n          >\n            Share\n          </Button>\n        </Grid>\n      ) : (\n        <div />\n      )}\n\n      <NoteSharingSnackbar\n        isSnackbarOpen={isSnackbarOpen}\n        userEmail={userEmail}\n        id={selectedItem.id}\n        setSnackbarState={setSnackbarState}\n      />\n      <NoteProcessingDialog\n        dialogTitle=\"Editing note\"\n        noteTitle={selectedItem.title}\n        noteContent={selectedItem.content}\n        isOpen={isDialogOpen}\n        setOpen={setDialogState}\n        onSubmit={updateNote}\n      />\n    </BodyContainer>\n  ) : (\n    <BodyContainer>\n      <Typography variant=\"h3\">Select note to display</Typography>\n    </BodyContainer>\n  );\n};\n\nActiveNote.propTypes = {\n  selectedItem: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    content: PropTypes.string,\n    date: PropTypes.string,\n    userEmail: PropTypes.string,\n  }),\n  updateNote: PropTypes.func,\n  userEmail: PropTypes.string,\n  isOnSharedNotes: PropTypes.bool,\n};\n\nActiveNote.defaultProps = {\n  selectedItem: null,\n  updateNote: () => {},\n  userEmail: \"\",\n  isOnSharedNotes: false,\n};\n\nconst setStateToProps = (state) => ({\n  userEmail: state.auth.email,\n});\n\nexport default connect(setStateToProps)(ActiveNote);\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst styles = makeStyles(() => ({\n  AddNoteButton: {\n    marginTop: \"20px\",\n  },\n  NotesContainer: {\n    display: \"flex\",\n    width: \"90%\",\n    height: \"100vh\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  },\n}));\n\nexport default styles;\n","import React, { useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\n// eslint-disable-next-line import/no-unresolved\nimport { SHARED_NOTES_ARRAY_KEY } from \"@constants/LOCAL_STORAGE_KEYS\";\nimport NotesListMenu from \"../notes/NotesListMenu\";\nimport ActiveNote from \"../notes/ActiveNote\";\nimport styles from \"./styles\";\n\nconst SharedNotesContainer = ({ userEmail }) => {\n  const loadedNotesAsString = localStorage.getItem(SHARED_NOTES_ARRAY_KEY);\n\n  const [notesArray, setNotesArray] = useState(\n    loadedNotesAsString\n      ? JSON.parse(loadedNotesAsString)\n          .filter((data) => data.userWhoShare === userEmail)\n          .map((data) => data.note)\n      : []\n  );\n\n  useEffect(() => console.log(notesArray));\n\n  const [selectedNote, setSelectedNote] = useState(null);\n\n  const classes = styles();\n\n  return (\n    <div className={classes.NotesContainer}>\n      <Grid container direction=\"row\" wrap=\"nowrap\" justify=\"space-between\">\n        <NotesListMenu\n          notesArray={notesArray}\n          selectedIndex={selectedNote ? selectedNote.id : null}\n          changeSelectedIndex={(index) =>\n            setSelectedNote(notesArray.find((note) => note.id === index))\n          }\n          setNotesArray={setNotesArray}\n          isOnSharedNotes\n        />\n        <ActiveNote item selectedItem={selectedNote} isOnSharedNotes />\n      </Grid>\n    </div>\n  );\n};\n\nconst setStateToProps = (state) => ({\n  userEmail: state.auth.email,\n});\n\nSharedNotesContainer.propTypes = {\n  userEmail: PropTypes.string,\n};\n\nSharedNotesContainer.defaultProps = {\n  userEmail: \"\",\n};\n\nexport default connect(setStateToProps)(SharedNotesContainer);\n","import React, { useState } from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\n// eslint-disable-next-line import/no-unresolved\nimport BodyContainer from \"@components/BodyContainer\";\n// eslint-disable-next-line import/no-unresolved\nimport { updateSharedNotesArray } from \"@utils/arrayProcessingUtils\";\n// eslint-disable-next-line import/no-unresolved\nimport { useGetNotes } from \"@constants/API_CONFIG\";\nimport styles from \"./styles\";\n\nconst PreviewSharedNote = ({ match, userEmail }) => {\n  const [sharedNote, setSharedNote] = useState({ title: \"\", content: \"\" });\n\n  const onResponseSuccess = (data) => {\n    setSharedNote(() => {\n      const newNote = data.data.filter(\n        (note) =>\n          note.userEmail === match.params.userEmail &&\n          note.id === match.params.noteId\n      )[0];\n      newNote.id = Number(newNote.id);\n      return newNote;\n    });\n  };\n\n  useGetNotes(onResponseSuccess);\n\n  const classes = styles();\n\n  return sharedNote ? (\n    <BodyContainer>\n      <Grid container direction=\"column\" alignItems=\"center\">\n        <Typography variant=\"h3\">{sharedNote.title}</Typography>\n        <Typography variant=\"h5\">{sharedNote.content}</Typography>\n        <Button\n          variant=\"contained\"\n          className={classes.AddNoteButton}\n          onClick={updateSharedNotesArray(sharedNote, userEmail)}\n        >\n          Add to shared notes\n        </Button>\n      </Grid>\n    </BodyContainer>\n  ) : (\n    <BodyContainer>\n      <Typography variant=\"h3\">Link is not valid</Typography>\n    </BodyContainer>\n  );\n};\n\nPreviewSharedNote.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      userEmail: PropTypes.string,\n      noteId: PropTypes.string,\n    }),\n  }),\n  userEmail: PropTypes.string,\n};\n\nPreviewSharedNote.defaultProps = {\n  match: null,\n  userEmail: \"\",\n};\n\nconst setStateToProps = (state) => ({\n  userEmail: state.auth.email,\n});\n\nexport default connect(setStateToProps)(PreviewSharedNote);\n","import SharedNotesContainer from \"./sharedNotesContainer\";\nimport PreviewSharedNote from \"./PreviewSharedNote\";\n\nexport { PreviewSharedNote };\nexport default SharedNotesContainer;\n","import About from \"./About\";\n\nexport default About;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\n// eslint-disable-next-line import/no-unresolved\nimport BodyContainer from \"@components/BodyContainer\";\n\nconst About = () => (\n  <BodyContainer>\n    <Typography variant=\"h1\">Created by A.A.Leonov</Typography>\n  </BodyContainer>\n);\n\nexport default About;\n","import { makeStyles } from \"@material-ui/core\";\n\nconst styles = makeStyles(() => ({\n  centered: {\n    textAlign: \"center\",\n  },\n}));\n\nexport default styles;\n","import Error404 from \"./Error404\";\n\nexport default Error404;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\n// eslint-disable-next-line import/no-unresolved\nimport BodyContainer from \"@components/BodyContainer\";\nimport styles from \"./styles\";\n\nconst Error404 = () => (\n  <BodyContainer>\n    <Typography variant=\"h1\" className={styles().centered}>\n      Error 404 - Page not found\n    </Typography>\n  </BodyContainer>\n);\n\nexport default Error404;\n","import NotesContainer from \"./NotesContainer\";\n\nexport default NotesContainer;\n","import React, { useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\n// eslint-disable-next-line import/no-unresolved\nimport NOTES from \"@constants/NOTES\";\n// eslint-disable-next-line import/no-unresolved\nimport { NOTES_ARRAY_KEY } from \"@constants/LOCAL_STORAGE_KEYS\";\nimport styles from \"./styles\";\nimport NotesListMenu from \"./NotesListMenu\";\nimport ActiveNote from \"./ActiveNote\";\n\nconst NotesContainer = () => {\n  const loadedNotesAsString = localStorage.getItem(NOTES_ARRAY_KEY);\n\n  const [notesArray, setNotesArray] = useState(\n    loadedNotesAsString ? JSON.parse(loadedNotesAsString) : NOTES\n  );\n  const [selectedNote, setSelectedNote] = useState(null);\n\n  const updateNote = (title, content) => {\n    const updatedArray = notesArray.map((note) => {\n      if (note.id === selectedNote.id) {\n        const updatedNote = {\n          id: note.id,\n          title,\n          content,\n          date: note.date,\n        };\n        setSelectedNote(updatedNote);\n        return updatedNote;\n      }\n      return note;\n    });\n    setNotesArray(updatedArray);\n\n    localStorage.setItem(NOTES_ARRAY_KEY, JSON.stringify(updatedArray));\n  };\n\n  const classes = styles();\n\n  return (\n    <div className={classes.NotesContainer}>\n      <Grid container direction=\"row\" wrap=\"nowrap\" justify=\"space-between\">\n        <NotesListMenu\n          notesArray={notesArray}\n          selectedIndex={selectedNote ? selectedNote.id : null}\n          changeSelectedIndex={(index) =>\n            setSelectedNote(notesArray.find((note) => note.id === index))\n          }\n          setNotesArray={setNotesArray}\n        />\n        <ActiveNote\n          item\n          selectedItem={selectedNote}\n          updateNote={updateNote}\n          isOnSharedNotes={false}\n        />\n      </Grid>\n    </div>\n  );\n};\n\nexport default NotesContainer;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\n// eslint-disable-next-line import/no-unresolved\nimport ROUTES from \"@constants/ROUTES\";\n// eslint-disable-next-line import/no-unresolved\nimport SharedNotesContainer, { PreviewSharedNote } from \"@pages/sharedNotes\";\n// eslint-disable-next-line import/no-unresolved\nimport About from \"@pages/about\";\n// eslint-disable-next-line import/no-unresolved\nimport Error404 from \"@pages/errors\";\n// eslint-disable-next-line import/no-unresolved\nimport NotesContainer from \"@pages/notes\";\n\nconst PrivateRoutes = () => (\n  <Switch>\n    <Route exact path={ROUTES.notes} component={NotesContainer} />\n    <Route path={ROUTES.sharedNotesWithParams} component={PreviewSharedNote} />\n    <Route exect path={ROUTES.sharedNotes} component={SharedNotesContainer} />\n    <Route exact path={ROUTES.about} component={About} />\n    <Route component={Error404} />\n  </Switch>\n);\n\nexport default PrivateRoutes;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\n// eslint-disable-next-line import/no-unresolved\nimport ROUTES from \"@constants/ROUTES\";\n// eslint-disable-next-line import/no-unresolved\nimport About from \"@pages/about\";\n// eslint-disable-next-line import/no-unresolved\nimport Error404 from \"@pages/errors\";\n\nconst CommonRoutes = () => (\n  <Switch>\n    <Route exact path={ROUTES.about} component={About} />\n    <Route component={Error404} />\n  </Switch>\n);\n\nexport default CommonRoutes;\n","import React from \"react\";\nimport { HashRouter, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\n// eslint-disable-next-line import/no-unresolved\nimport HeaderMenu from \"@components/HeaderMenu\";\n// eslint-disable-next-line import/no-unresolved\nimport ROUTES from \"@constants/ROUTES\";\nimport PrivateRoutes from \"./PrivateRoutes\";\nimport CommonRoutes from \"./CommonRoutes\";\n\nconst ApplicationRouter = ({ isSignIn }) => (\n  <div>\n    <HashRouter basename=\"/\">\n      <HeaderMenu />\n      {isSignIn ? <PrivateRoutes /> : <CommonRoutes />}\n      <Redirect from={ROUTES.root} to={ROUTES.notes} />\n    </HashRouter>\n  </div>\n);\n\nconst setStateToProps = (state) => ({\n  isSignIn: state.signIn.isSignIn,\n});\n\nApplicationRouter.propTypes = {\n  isSignIn: PropTypes.bool,\n};\n\nApplicationRouter.defaultProps = {\n  isSignIn: false,\n};\n\nexport default connect(setStateToProps)(ApplicationRouter);\n","import ApplicationRouter from \"./ApplicationRouter\";\n\nexport default ApplicationRouter;\n","import React from \"react\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\n// eslint-disable-next-line import/no-unresolved\nimport rootReducer from \"@redux/reducer\";\nimport ApplicationRouter from \"./routing\";\n\nconst store = createStore(rootReducer);\nconst queryClient = new QueryClient();\n\nconst App = () => (\n  <Provider store={store}>\n    <QueryClientProvider client={queryClient}>\n      <ApplicationRouter />\n    </QueryClientProvider>\n  </Provider>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}