{"version":3,"sources":["redux/auth/ACTION_TYPES.js","config/constants/LOCAL_STORAGE_KEYS.js","redux/auth/authReducer.js","redux/signInState/ACTION_TYPES.js","redux/signInState/signInReducer.js","redux/reducer.js","config/constants/ROUTES.js","components/SearchField.js","pages/notes/NotesList.js","utils/textFormatUtils.js","pages/notes/NotesListMenu.js","pages/notes/ActiveNoteEditingDialog.js","components/BodyContainer.js","pages/notes/ActiveNote.js","config/constants/NOTES.js","pages/notes/NotesContainer.js","pages/errors/Error404.js","pages/sharedNotes/sharedNotesContainer.js","pages/about/About.js","redux/auth/actions.js","components/ProfileInfo.js","components/RegistrationMenu.js","components/RegistrationMenuContainer.js","components/AuthMenu.js","components/AuthMenuContainer.js","config/constants/API_CONFIG.js","components/SignInMenu.js","redux/signInState/actions.js","components/SignInManager.js","components/HeaderMenu.js","routing/ApplicationRouter.js","App.js","index.js"],"names":["ACTION_TYPES","AuthChangeEmail","AuthChangeFirstName","AuthChangeLastName","AuthChangeDateOfBirth","NOTES_ARRAY_KEY","USER_DATA_KEY","userDataFromLocalstorage","localStorage","getItem","initialState","JSON","parse","email","firstName","lastName","dateOfBirth","authReducer","state","action","type","payload","changeSigInState","defaultState","isSignIn","Boolean","signInReducer","rootReducer","combineReducers","auth","signIn","ROUTES","notes","sharedNotes","about","SearchField","array","setArray","Input","label","onChange","event","searchText","target","value","filter","item","title","toLowerCase","includes","content","startAdornment","InputAdornment","defaultProps","NotesList","notesArray","selectedIndex","setSelectedIndex","List","map","ListItem","button","selected","id","onClick","ListItemIcon","ListItemText","primary","Grid","container","justify","date","secondary","stringToFormat","lengthOfPreviewString","length","substr","NotesListMenu","changeSelectedIndex","useState","filteredArray","setFilteredArray","className","xs","direction","ActiveNoteEditingDialog","noteTitle","noteContent","isOpen","setOpen","updateNote","textFieldTitle","textFieldContent","isTitleCorrect","setIsTitleCorrect","isContentCorrect","setIsContentCorrect","Dialog","open","fullWidth","maxWidth","DialogTitle","DialogContent","TextField","error","defaultValue","helperText","multiline","DialogActions","Button","disabled","BodyContainer","children","wrap","ActiveNote","selectedItem","isDialogOpen","setDialogState","alignItems","Typography","variant","style","backgroundColor","NOTES","NotesContainer","loadedNotesAsString","setNotesArray","selectedNote","setSelectedNote","index","updatedArray","note","updatedNote","setItem","stringify","Error404","textAlign","SharedNotesContainer","About","setAuthEmail","newEmail","setAuthFirstName","newFirstName","setAuthLastName","newLastName","setAuthBirthDate","newBirthDate","ProfileInfo","setIsAuthorised","anchorEl","setAnchorEl","currentTarget","Menu","keepMounted","onClose","color","connect","dispatch","setEmail","bindActionCreators","setFirstName","setLastName","setDateOfBirth","RegistrationMenu","formik","setIsOnRegistrationProcess","onSubmit","handleSubmit","display","flexDirection","justifyContent","name","values","handleChange","touched","errors","password","confirmPassword","currentYear","Date","getUTCFullYear","RegistrationMenuContainer","useFormik","initialValues","validate","year","test","substring","actions","userData","setSubmitting","AuthMenu","AuthMenuContainer","data","useQuery","axios","user","SignInMenu","isOnRegistrationProcess","setSignInState","SignInManager","setIsSignIn","HeaderMenu","AppBar","position","Toolbar","height","to","activeClassName","ApplicationRouter","basename","exact","path","component","from","store","createStore","queryClient","QueryClient","App","QueryClientProvider","client","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83462c33.chunk.js","sourcesContent":["const ACTION_TYPES = {\n  AuthChangeEmail: \"AUTH_CHANGE_EMAIL\",\n  AuthChangeFirstName: \"AUTH_CHANGE_FIRST_NAME\",\n  AuthChangeLastName: \"AUTH_CHANGE_LAST_NAME\",\n  AuthChangeDateOfBirth: \"AUTH_CHANGE_DATE_OF_BIRTH\",\n};\n\nexport default ACTION_TYPES;\n","export const NOTES_ARRAY_KEY = \"notesArray\";\nexport const USER_DATA_KEY = \"notesUserData\";\n","import ACTION_TYPES from \"./ACTION_TYPES\";\nimport { USER_DATA_KEY } from \"../../config/constants/LOCAL_STORAGE_KEYS\";\n\nconst defaultUserData = {\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  dateOfBirth: \"\",\n};\n\nconst userDataFromLocalstorage = localStorage.getItem(USER_DATA_KEY);\nconst initialState = userDataFromLocalstorage\n  ? JSON.parse(userDataFromLocalstorage)\n  : defaultUserData;\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.AuthChangeEmail:\n      return { ...state, email: action.payload };\n    case ACTION_TYPES.AuthChangeFirstName:\n      return { ...state, firstName: action.payload };\n    case ACTION_TYPES.AuthChangeLastName:\n      return { ...state, lastName: action.payload };\n    case ACTION_TYPES.AuthChangeDateOfBirth:\n      return { ...state, dateOfBirth: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const ACTION_TYPES = {\n  changeSigInState: \"CHANGE_SIGN_IN_STATE\",\n};\n\nexport default ACTION_TYPES;\n","import ACTION_TYPES from \"./ACTION_TYPES\";\nimport { USER_DATA_KEY } from \"../../config/constants/LOCAL_STORAGE_KEYS\";\n\nconst defaultState = {\n  isSignIn: Boolean(localStorage.getItem(USER_DATA_KEY)),\n};\n\nconst signInReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.changeSigInState:\n      return { ...state, isSignIn: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default signInReducer;\n","import { combineReducers } from \"redux\";\n\nimport authReducer from \"./auth/authReducer\";\nimport signInReducer from \"./signInState/signInReducer\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  signIn: signInReducer,\n});\n\nexport default rootReducer;\n","const ROUTES = {\n  notes: \"/notes\",\n  sharedNotes: \"/shared-notes\",\n  about: \"/about\",\n};\n\nexport default ROUTES;\n","import React from \"react\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Input from \"@material-ui/core/Input\";\nimport PropTypes from \"prop-types\";\n\nconst SearchField = ({ array, setArray }) => {\n  const handleInputChange = (event) => {\n    const searchText = event.target.value;\n    setArray(\n      array.filter(\n        (item) =>\n          item.title.toLowerCase().includes(searchText.toLowerCase()) ||\n          item.content.toLowerCase().includes(searchText.toLowerCase())\n      )\n    );\n  };\n\n  return (\n    <Input\n      label=\"Search\"\n      onChange={handleInputChange}\n      startAdornment={\n        <InputAdornment>\n          <SearchIcon />\n        </InputAdornment>\n      }\n    />\n  );\n};\n\nSearchField.propTypes = {\n  array: PropTypes.arrayOf(PropTypes.object),\n  setArray: PropTypes.func,\n};\n\nSearchField.defaultProps = {\n  array: [],\n  setArray: () => {},\n};\n\nexport default SearchField;\n","import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport NoteIcon from \"@material-ui/icons/Note\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { Grid } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport { getPreviewString } from \"../../utils/textFormatUtils\";\n\nconst LENGTH_OF_NOTE_CONTENT_PREVIEW = 20;\n\nconst NotesList = ({ notesArray, selectedIndex, setSelectedIndex }) => (\n  <List>\n    {notesArray.map((item) => (\n      <ListItem\n        button\n        selected={selectedIndex === item.id}\n        onClick={() => setSelectedIndex(item.id)}\n      >\n        <ListItemIcon>\n          <NoteIcon />\n        </ListItemIcon>\n        <ListItemText\n          primary={\n            <Grid container justify=\"space-between\">\n              <span>{item.title}</span>\n              <span>{item.date}</span>\n            </Grid>\n          }\n          secondary={getPreviewString(\n            item.content,\n            LENGTH_OF_NOTE_CONTENT_PREVIEW\n          )}\n        />\n      </ListItem>\n    ))}\n  </List>\n);\n\nNotesList.propTypes = {\n  notesArray: PropTypes.arrayOf(PropTypes.object),\n  selectedIndex: PropTypes.number,\n  setSelectedIndex: PropTypes.func,\n};\n\nNotesList.defaultProps = {\n  notesArray: [],\n  selectedIndex: null,\n  setSelectedIndex() {},\n};\n\nexport default NotesList;\n","export const getPreviewString = (stringToFormat, lengthOfPreviewString) =>\n  stringToFormat.length > 20\n    ? `${stringToFormat.substr(0, lengthOfPreviewString)} ...`\n    : stringToFormat;\n\nconst YEAR_STRING_LENGTH = 4;\nexport const getYearFromDate = (date) => date.substring(0, YEAR_STRING_LENGTH);\n","import React, { useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport \"./styles.css\";\nimport SearchField from \"../../components/SearchField\";\nimport NotesList from \"./NotesList\";\n\nconst NotesListMenu = ({ notesArray, selectedIndex, changeSelectedIndex }) => {\n  const [filteredArray, setFilteredArray] = useState(notesArray);\n\n  return (\n    <Grid className=\"NotesListMenu\" container item xs={3} direction=\"column\">\n      <SearchField array={notesArray} setArray={setFilteredArray} />\n      <NotesList\n        notesArray={filteredArray}\n        selectedIndex={selectedIndex}\n        setSelectedIndex={changeSelectedIndex}\n      />\n    </Grid>\n  );\n};\n\nNotesListMenu.propTypes = {\n  notesArray: PropTypes.arrayOf(PropTypes.object),\n  selectedIndex: PropTypes.number,\n  changeSelectedIndex: PropTypes.func,\n};\n\nNotesListMenu.defaultProps = {\n  notesArray: [],\n  selectedIndex: null,\n  changeSelectedIndex() {},\n};\n\nexport default NotesListMenu;\n","import React, { useState } from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport { Grid } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport PropTypes from \"prop-types\";\n\nimport \"./styles.css\";\n\nconst TITLE_MAX_LENGTH = 35;\nconst CONTENT_MAX_LENGTH = 2000;\n\nconst ActiveNoteEditingDialog = ({\n  noteTitle,\n  noteContent,\n  isOpen,\n  setOpen,\n  updateNote,\n}) => {\n  let textFieldTitle = noteTitle;\n  let textFieldContent = noteContent;\n\n  const [isTitleCorrect, setIsTitleCorrect] = useState(true);\n  const [isContentCorrect, setIsContentCorrect] = useState(true);\n\n  const checkIsTitleCorrect = (title) =>\n    title.length > 0 && title.length < TITLE_MAX_LENGTH;\n  const checkIsContentCorrect = (content) =>\n    content.length > 0 && content.length < CONTENT_MAX_LENGTH;\n\n  const handleTitleFieldChange = (event) => {\n    textFieldTitle = event.target.value;\n    setIsTitleCorrect(checkIsTitleCorrect(textFieldTitle));\n  };\n  const handleContentFieldChange = (event) => {\n    textFieldContent = event.target.value;\n    setIsContentCorrect(checkIsContentCorrect(textFieldContent));\n  };\n  const handleSaveBtnClick = () => {\n    updateNote(textFieldTitle, textFieldContent);\n    setOpen(false);\n  };\n\n  return (\n    <Dialog open={isOpen} fullWidth=\"true\" maxWidth=\"false\">\n      <DialogTitle>Editing note</DialogTitle>\n      <DialogContent>\n        <Grid direction=\"column\">\n          <TextField\n            id=\"editTitleField\"\n            error={!isTitleCorrect}\n            className=\"DialogInputField\"\n            label=\"title\"\n            defaultValue={textFieldTitle}\n            onChange={handleTitleFieldChange}\n            helperText={\n              isTitleCorrect\n                ? \"\"\n                : `Title length must be between 1 and ${TITLE_MAX_LENGTH} symbols`\n            }\n          />\n          <TextField\n            error={!isContentCorrect}\n            className=\"DialogInputField\"\n            label=\"content\"\n            defaultValue={textFieldContent}\n            onChange={handleContentFieldChange}\n            helperText={\n              isContentCorrect\n                ? \"\"\n                : `Content length must be between 1 and ${CONTENT_MAX_LENGTH} symbols`\n            }\n            multiline\n          />\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => setOpen(!isOpen)}>Close</Button>\n        <Button\n          disabled={!(isTitleCorrect && isContentCorrect)}\n          onClick={handleSaveBtnClick}\n        >\n          Save\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nActiveNoteEditingDialog.propTypes = {\n  noteTitle: PropTypes.string,\n  noteContent: PropTypes.string,\n  isOpen: PropTypes.bool,\n  setOpen: PropTypes.func,\n  updateNote: PropTypes.func,\n};\n\nActiveNoteEditingDialog.defaultProps = {\n  noteTitle: \"\",\n  noteContent: \"\",\n  isOpen: false,\n  setOpen: () => {},\n  updateNote: () => {},\n};\n\nexport default ActiveNoteEditingDialog;\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport \"./styles.css\";\n\nconst BodyContainer = ({ children }) => (\n  <Grid className=\"ActiveNote\" container wrap=\"nowrap\">\n    {children}\n  </Grid>\n);\n\nBodyContainer.propTypes = {\n  children: PropTypes.element,\n};\n\nBodyContainer.defaultProps = {\n  children: <div />,\n};\n\nexport default BodyContainer;\n","import React, { useState } from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport PropTypes from \"prop-types\";\n\nimport \"./styles.css\";\nimport ActiveNoteEditingDialog from \"./ActiveNoteEditingDialog\";\nimport BodyContainer from \"../../components/BodyContainer\";\n\nconst ActiveNote = ({ selectedItem, updateNote }) => {\n  const [isDialogOpen, setDialogState] = useState(false);\n\n  return selectedItem ? (\n    <BodyContainer>\n      <Grid container direction=\"column\" alignItems=\"center\">\n        <Typography className=\"ActiveNoteTitle\" variant=\"h3\">\n          {selectedItem.title}\n        </Typography>\n        <Typography className=\"ActiveNoteContent\" variant=\"h5\">\n          {selectedItem.content}\n        </Typography>\n      </Grid>\n      <Button\n        onClick={() => setDialogState(!isDialogOpen)}\n        style={{ backgroundColor: \"rgba(255, 255, 255, 0.7)\" }}\n      >\n        {\" \"}\n        Edit{\" \"}\n      </Button>\n      <ActiveNoteEditingDialog\n        noteTitle={selectedItem.title}\n        noteContent={selectedItem.content}\n        isOpen={isDialogOpen}\n        setOpen={setDialogState}\n        updateNote={updateNote}\n      />\n    </BodyContainer>\n  ) : (\n    <BodyContainer>\n      <Typography variant=\"h3\">Select note to display</Typography>\n    </BodyContainer>\n  );\n};\n\nActiveNote.propTypes = {\n  selectedItem: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    content: PropTypes.string,\n    date: PropTypes.string,\n  }),\n  updateNote: PropTypes.func,\n};\n\nActiveNote.defaultProps = {\n  selectedItem: null,\n  updateNote: () => {},\n};\n\nexport default ActiveNote;\n","const NOTES = [\n  {\n    id: 0,\n    title: \"React\",\n    content:\n      \"React — JavaScript-библиотека с открытым исходным кодом для разработки пользовательских интерфейсов.\" +\n      \"React разрабатывается и поддерживается Facebook, Instagram и сообществом отдельных разработчиков и корпораций.\" +\n      \"React может использоваться для разработки одностраничных и мобильных приложений. Его цель — предоставить высокую скорость, простоту и масштабируемость.\" +\n      \" В качестве библиотеки для разработки пользовательских интерфейсов React часто используется с другими библиотеками, такими как MobX, Redux и GraphQL.\",\n    date: \"03.05.2020\",\n  },\n  {\n    id: 1,\n    title: \"Material Design\",\n    content:\n      \"Material Design — стиль графического дизайна интерфейсов программного обеспечения и приложений,\" +\n      \" разработанный компанией Google. Впервые представлен на конференции Google I/O 25 июня 2014 года.\" +\n      \" Стиль расширяет идею «карточек», появившуюся в Google Now, более широким применением строгих макетов,\" +\n      \" анимаций и переходов, отступов и эффектов глубины (света и тени). По идее графических дизайнеров Google,\" +\n      \" у приложений не должно быть острых углов, карточки должны переключаться между собой плавно и практически незаметно.\",\n    date: \"02.05.2020\",\n  },\n  {\n    id: 2,\n    title: \"Использование хука состояния\",\n    content:\n      \"useState — это хук.\" +\n      \" Мы вызываем его, чтобы наделить наш функциональный компонент внутренним состоянием.\" +\n      \" React будет хранить это состояние между рендерами. Вызов useState возвращает массив с двумя элементами,\" +\n      \" который содержит: текущее значение состояния и функцию для его обновления.\" +\n      \" Эту функцию можно использовать где угодно, например, в обработчике событий.\" +\n      \" Она схожа с this.setState в классах, но не сливает новое и старое состояние вместе.\",\n    date: \"02.05.2020\",\n  },\n  {\n    id: 3,\n    title: \"GitHub Pages\",\n    content:\n      \"GitHub Pages are public web pages for users, organizations, and repositories,\" +\n      \" that are freely hosted on GitHub’s github.io domain or on a custom domain name of your choice.\" +\n      \" GitHub Pages are powered by Jekyll behind the scenes,\" +\n      \" so they’re a great way to host your Jekyll-powered website for free.\",\n    date: \"02.05.2020\",\n  },\n];\n\nexport default NOTES;\n","import React, { useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport NotesListMenu from \"./NotesListMenu\";\nimport ActiveNote from \"./ActiveNote\";\nimport NOTES from \"../../config/constants/NOTES\";\nimport { NOTES_ARRAY_KEY } from \"../../config/constants/LOCAL_STORAGE_KEYS\";\nimport \"./styles.css\";\n\nconst NotesContainer = () => {\n  const loadedNotesAsString = localStorage.getItem(NOTES_ARRAY_KEY);\n\n  const [notesArray, setNotesArray] = useState(\n    loadedNotesAsString ? JSON.parse(loadedNotesAsString) : NOTES\n  );\n  const [selectedNote, setSelectedNote] = useState(null);\n\n  const updateNote = (title, content) => {\n    const updatedArray = notesArray.map((note) => {\n      if (note.id === selectedNote.id) {\n        const updatedNote = {\n          id: note.id,\n          title,\n          content,\n          date: note.date,\n        };\n        setSelectedNote(updatedNote);\n        return updatedNote;\n      }\n      return note;\n    });\n    setNotesArray(updatedArray);\n\n    localStorage.setItem(NOTES_ARRAY_KEY, JSON.stringify(updatedArray));\n  };\n\n  return (\n    <div className=\"NotesContainer\">\n      <Grid container direction=\"row\" wrap=\"nowrap\" justify=\"space-between\">\n        <NotesListMenu\n          notesArray={notesArray}\n          selectedIndex={selectedNote ? selectedNote.id : null}\n          changeSelectedIndex={(index) => setSelectedNote(notesArray[index])}\n        />\n        <ActiveNote item selectedItem={selectedNote} updateNote={updateNote} />\n      </Grid>\n    </div>\n  );\n};\n\nexport default NotesContainer;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nimport BodyContainer from \"../../components/BodyContainer\";\n\nconst Error404 = () => (\n  <BodyContainer>\n    <Typography variant=\"h1\" style={{ textAlign: \"center\" }}>\n      Error 404 - Page not found\n    </Typography>\n  </BodyContainer>\n);\n\nexport default Error404;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nimport BodyContainer from \"../../components/BodyContainer\";\n\nconst SharedNotesContainer = () => (\n  <BodyContainer>\n    <Typography variant=\"h1\">There will be Shared Notes page</Typography>\n  </BodyContainer>\n);\n\nexport default SharedNotesContainer;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nimport BodyContainer from \"../../components/BodyContainer\";\n\nconst About = () => (\n  <BodyContainer>\n    <Typography variant=\"h1\">There will be About page</Typography>\n  </BodyContainer>\n);\n\nexport default About;\n","import ACTION_TYPES from \"./ACTION_TYPES\";\n\nexport const setAuthEmail = (newEmail) => ({\n  type: ACTION_TYPES.AuthChangeEmail,\n  payload: newEmail,\n});\n\nexport const setAuthFirstName = (newFirstName) => ({\n  type: ACTION_TYPES.AuthChangeFirstName,\n  payload: newFirstName,\n});\n\nexport const setAuthLastName = (newLastName) => ({\n  type: ACTION_TYPES.AuthChangeLastName,\n  payload: newLastName,\n});\n\nexport const setAuthBirthDate = (newBirthDate) => ({\n  type: ACTION_TYPES.AuthChangeDateOfBirth,\n  payload: newBirthDate,\n});\n","import React, { useState } from \"react\";\nimport { Menu, Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport PropTypes from \"prop-types\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport {\n  setAuthBirthDate,\n  setAuthEmail,\n  setAuthFirstName,\n  setAuthLastName,\n} from \"../redux/auth/actions\";\n\nconst ProfileInfo = ({\n  email,\n  firstName,\n  lastName,\n  dateOfBirth,\n  setIsAuthorised,\n}) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <Button onClick={handleClick}>Profile</Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <div>\n          <Typography variant=\"h5\">{email}</Typography>\n          <Typography variant=\"h5\">{firstName}</Typography>\n          <Typography variant=\"h5\">{lastName}</Typography>\n          <Typography variant=\"h5\">{dateOfBirth}</Typography>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => setIsAuthorised(false)}\n            fullWidth\n          >\n            Log out\n          </Button>\n        </div>\n      </Menu>\n    </div>\n  );\n};\nconst setStateToProps = (state) => ({\n  email: state.auth.email,\n  firstName: state.auth.firstName,\n  lastName: state.auth.lastName,\n  dateOfBirth: state.auth.dateOfBirth,\n});\n\nconst setDispatchToProps = (dispatch) => ({\n  setEmail: bindActionCreators(setAuthEmail, dispatch),\n  setFirstName: bindActionCreators(setAuthFirstName, dispatch),\n  setLastName: bindActionCreators(setAuthLastName, dispatch),\n  setDateOfBirth: bindActionCreators(setAuthBirthDate, dispatch),\n});\n\nProfileInfo.propTypes = {\n  email: PropTypes.string,\n  firstName: PropTypes.string,\n  lastName: PropTypes.string,\n  dateOfBirth: PropTypes.string,\n  setIsAuthorised: PropTypes.func,\n};\n\nProfileInfo.defaultProps = {\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  dateOfBirth: \"\",\n  setIsAuthorised: () => {},\n};\n\nexport default connect(setStateToProps, setDispatchToProps)(ProfileInfo);\n","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { Menu } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nconst RegistrationMenu = ({ formik, setIsOnRegistrationProcess }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <Button onClick={handleClick}>Registration</Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <h1>Registration</h1>\n        <form\n          onSubmit={formik.handleSubmit}\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            wrap: \"nowrap\",\n          }}\n        >\n          <TextField\n            id=\"email\"\n            name=\"email\"\n            label=\"Email\"\n            type=\"email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n          />\n          <TextField\n            name=\"firstName\"\n            label=\"First name\"\n            value={formik.values.firstName}\n            onChange={formik.handleChange}\n            error={formik.touched.firstName && Boolean(formik.errors.firstName)}\n            helperText={formik.touched.firstName && formik.errors.firstName}\n          />\n          <TextField\n            name=\"lastName\"\n            label=\"Last name\"\n            value={formik.values.lastName}\n            onChange={formik.handleChange}\n            error={formik.touched.lastName && Boolean(formik.errors.lastName)}\n            helperText={formik.touched.lastName && formik.errors.lastName}\n          />\n          <TextField\n            name=\"dateOfBirth\"\n            label=\"Date of birth\"\n            type=\"date\"\n            value={formik.values.dateOfBirth}\n            onChange={formik.handleChange}\n            error={\n              formik.touched.dateOfBirth && Boolean(formik.errors.dateOfBirth)\n            }\n            helperText={formik.touched.dateOfBirth && formik.errors.dateOfBirth}\n          />\n          <TextField\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n          />\n          <TextField\n            name=\"confirmPassword\"\n            label=\"Confirm password\"\n            type=\"password\"\n            value={formik.values.confirmPassword}\n            onChange={formik.handleChange}\n            error={\n              formik.touched.confirmPassword &&\n              Boolean(formik.errors.confirmPassword)\n            }\n            helperText={\n              formik.touched.confirmPassword && formik.errors.confirmPassword\n            }\n          />\n          <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n            Submit\n          </Button>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            fullWidth\n            onClick={() => setIsOnRegistrationProcess(false)}\n          >\n            Log in\n          </Button>\n        </form>\n      </Menu>\n    </div>\n  );\n};\n\nRegistrationMenu.propTypes = {\n  formik: PropTypes.func,\n  setIsOnRegistrationProcess: PropTypes.func,\n};\n\nRegistrationMenu.defaultProps = {\n  formik: () => {},\n  setIsOnRegistrationProcess: () => {},\n};\n\nexport default RegistrationMenu;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useFormik } from \"formik\";\n\nimport RegistrationMenu from \"./RegistrationMenu\";\nimport { USER_DATA_KEY } from \"../config/constants/LOCAL_STORAGE_KEYS\";\nimport { getYearFromDate } from \"../utils/textFormatUtils\";\n\nconst currentDate = new Date();\nconst currentYear = currentDate.getUTCFullYear();\nconst MAX_HUMAN_AGE = 120;\nconst isYearValid = (year) =>\n  year > currentYear - MAX_HUMAN_AGE && year < currentYear;\n\nconst RegistrationMenuContainer = ({\n  email,\n  firstName,\n  lastName,\n  dateOfBirth,\n  setEmail,\n  setFirstName,\n  setLastName,\n  setDateOfBirth,\n  setIsAuthorised,\n  setIsOnRegistrationProcess,\n}) => {\n  const formik = useFormik({\n    initialValues: {\n      email,\n      firstName,\n      lastName,\n      dateOfBirth,\n      password: \"\",\n      confirmPassword: \"\",\n    },\n\n    validate: (values) => {\n      const errors = {};\n      if (!values.email) {\n        errors.email = \"Required\";\n      } else if (\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n      ) {\n        errors.email = \"Invalid email address\";\n      }\n      if (!values.firstName) {\n        errors.firstName = \"Required\";\n      } else if (!/^[a-zA-Z ]+$/.test(values.firstName)) {\n        errors.firstName = \"Invalid name input\";\n      }\n      if (!values.lastName) {\n        errors.lastName = \"Required\";\n      } else if (!/^[a-zA-Z ]+$/.test(values.lastName)) {\n        errors.lastName = \"Invalid last name input\";\n      }\n      if (!values.dateOfBirth) {\n        errors.dateOfBirth = \"Required\";\n      } else if (!isYearValid(getYearFromDate(values.dateOfBirth))) {\n        errors.dateOfBirth = \"Invalid year input\";\n      }\n      if (!values.password) {\n        errors.password = \"Required\";\n      }\n      if (!values.confirmPassword) {\n        errors.confirmPassword = \"Required\";\n      } else if (values.password !== values.confirmPassword) {\n        errors.confirmPassword = \"Password confirm is invalid\";\n      }\n      return errors;\n    },\n\n    onSubmit: (values, actions) => {\n      const userData = {\n        email: values.email,\n        firstName: values.firstName,\n        lastName: values.lastName,\n        dateOfBirth: values.dateOfBirth,\n      };\n      setEmail(userData.email);\n      setFirstName(userData.firstName);\n      setLastName(userData.lastName);\n      setDateOfBirth(userData.dateOfBirth);\n\n      localStorage.setItem(USER_DATA_KEY, JSON.stringify(userData));\n\n      actions.setSubmitting(false);\n\n      setIsAuthorised(true);\n      setIsOnRegistrationProcess(false);\n    },\n  });\n\n  return (\n    <RegistrationMenu\n      formik={formik}\n      setIsOnRegistrationProcess={setIsOnRegistrationProcess}\n    />\n  );\n};\n\nRegistrationMenuContainer.propTypes = {\n  email: PropTypes.string,\n  firstName: PropTypes.string,\n  lastName: PropTypes.string,\n  dateOfBirth: PropTypes.string,\n  setEmail: PropTypes.func,\n  setFirstName: PropTypes.func,\n  setLastName: PropTypes.func,\n  setDateOfBirth: PropTypes.func,\n  setIsAuthorised: PropTypes.func,\n  setIsOnRegistrationProcess: PropTypes.func,\n};\n\nRegistrationMenuContainer.defaultProps = {\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  dateOfBirth: \"\",\n  setEmail: () => {},\n  setFirstName: () => {},\n  setLastName: () => {},\n  setDateOfBirth: () => {},\n  setIsAuthorised: () => {},\n  setIsOnRegistrationProcess: () => {},\n};\n\nexport default RegistrationMenuContainer;\n","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { Menu } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nconst AuthMenu = ({ formik, setIsOnRegistrationProcess }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <Button onClick={handleClick}>Log in</Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <h1>Sign in</h1>\n        <form\n          onSubmit={formik.handleSubmit}\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            wrap: \"nowrap\",\n          }}\n        >\n          <TextField\n            id=\"email\"\n            name=\"email\"\n            label=\"Email\"\n            type=\"email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n          />\n          <TextField\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n          />\n          <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n            Submit\n          </Button>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            fullWidth\n            onClick={() => setIsOnRegistrationProcess(true)}\n          >\n            Create new account\n          </Button>\n        </form>\n      </Menu>\n    </div>\n  );\n};\n\nAuthMenu.propTypes = {\n  formik: PropTypes.func,\n  setIsOnRegistrationProcess: PropTypes.func,\n};\n\nAuthMenu.defaultProps = {\n  formik: () => {},\n  setIsOnRegistrationProcess: () => {},\n};\n\nexport default AuthMenu;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useQuery } from \"react-query\";\nimport axios from \"axios\";\nimport { useFormik } from \"formik\";\n\nimport AuthMenu from \"./AuthMenu\";\nimport { USER_DATA_KEY } from \"../config/constants/LOCAL_STORAGE_KEYS\";\nimport userApi from \"../config/constants/API_CONFIG\";\n\nconst AuthMenuContainer = ({\n  email,\n  setEmail,\n  setFirstName,\n  setLastName,\n  setDateOfBirth,\n  setIsAuthorised,\n  setIsOnRegistrationProcess,\n}) => {\n  const { data } = useQuery(\"users\", () => axios(userApi));\n\n  const formik = useFormik({\n    initialValues: {\n      email,\n      password: \"\",\n    },\n\n    validate: (values) => {\n      const errors = {};\n      if (!values.email) {\n        errors.email = \"Required\";\n      } else if (\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n      ) {\n        errors.email = \"Invalid email address\";\n      }\n      if (!values.password) {\n        errors.password = \"Required\";\n      }\n      if (\n        data.data.filter(\n          (user) =>\n            user.email === values.email && user.password === values.password\n        ).length === 0\n      ) {\n        errors.email = \"Such user not found\";\n      }\n      return errors;\n    },\n\n    onSubmit: (values, actions) => {\n      const userData = data.data.filter(\n        (user) =>\n          user.email === values.email && user.password === values.password\n      )[0];\n\n      setEmail(userData.email);\n      setFirstName(userData.firstName);\n      setLastName(userData.lastName);\n      setDateOfBirth(userData.dateOfBirth);\n\n      localStorage.setItem(USER_DATA_KEY, JSON.stringify(userData));\n\n      setIsAuthorised(true);\n      actions.setSubmitting(false);\n    },\n  });\n\n  return (\n    <AuthMenu\n      formik={formik}\n      setIsOnRegistrationProcess={setIsOnRegistrationProcess}\n    />\n  );\n};\n\nAuthMenuContainer.propTypes = {\n  email: PropTypes.string,\n  setEmail: PropTypes.func,\n  setFirstName: PropTypes.func,\n  setLastName: PropTypes.func,\n  setDateOfBirth: PropTypes.func,\n  setIsAuthorised: PropTypes.func,\n  setIsOnRegistrationProcess: PropTypes.func,\n};\n\nAuthMenuContainer.defaultProps = {\n  email: \"\",\n  setEmail: () => {},\n  setFirstName: () => {},\n  setLastName: () => {},\n  setDateOfBirth: () => {},\n  setIsAuthorised: () => {},\n  setIsOnRegistrationProcess: () => {},\n};\n\nexport default AuthMenuContainer;\n","const userApi = \"https://mocki.io/v1/cb356f5f-32cc-48f8-8f05-297ecc66ca90\";\nexport default userApi;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport RegistrationMenuContainer from \"./RegistrationMenuContainer\";\nimport AuthMenuContainer from \"./AuthMenuContainer\";\n\nimport {\n  setAuthBirthDate,\n  setAuthEmail,\n  setAuthFirstName,\n  setAuthLastName,\n} from \"../redux/auth/actions\";\n\nconst SignInMenu = ({\n  email,\n  firstName,\n  lastName,\n  dateOfBirth,\n  setEmail,\n  setFirstName,\n  setLastName,\n  setDateOfBirth,\n  setIsAuthorised,\n}) => {\n  const [isOnRegistrationProcess, setIsOnRegistrationProcess] = useState(false);\n  return isOnRegistrationProcess ? (\n    <RegistrationMenuContainer\n      setIsAuthorised={setIsAuthorised}\n      setIsOnRegistrationProcess={setIsOnRegistrationProcess}\n      email={email}\n      firstName={firstName}\n      lastName={lastName}\n      dateOfBirth={dateOfBirth}\n      setEmail={setEmail}\n      setFirstName={setFirstName}\n      setLastName={setLastName}\n      setDateOfBirth={setDateOfBirth}\n    />\n  ) : (\n    <AuthMenuContainer\n      setIsAuthorised={setIsAuthorised}\n      setIsOnRegistrationProcess={setIsOnRegistrationProcess}\n      setEmail={setEmail}\n      setFirstName={setFirstName}\n      setLastName={setLastName}\n      setDateOfBirth={setDateOfBirth}\n    />\n  );\n};\n\nconst setStateToProps = (state) => ({\n  email: state.auth.email,\n  firstName: state.auth.firstName,\n  lastName: state.auth.lastName,\n  dateOfBirth: state.auth.dateOfBirth,\n});\n\nconst setDispatchToProps = (dispatch) => ({\n  setEmail: bindActionCreators(setAuthEmail, dispatch),\n  setFirstName: bindActionCreators(setAuthFirstName, dispatch),\n  setLastName: bindActionCreators(setAuthLastName, dispatch),\n  setDateOfBirth: bindActionCreators(setAuthBirthDate, dispatch),\n});\n\nSignInMenu.propTypes = {\n  email: PropTypes.string,\n  firstName: PropTypes.string,\n  lastName: PropTypes.string,\n  dateOfBirth: PropTypes.string,\n  setEmail: PropTypes.func,\n  setFirstName: PropTypes.func,\n  setLastName: PropTypes.func,\n  setDateOfBirth: PropTypes.func,\n  setIsAuthorised: PropTypes.func,\n};\n\nSignInMenu.defaultProps = {\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  dateOfBirth: \"\",\n  setEmail: () => {},\n  setFirstName: () => {},\n  setLastName: () => {},\n  setDateOfBirth: () => {},\n  setIsAuthorised: () => {},\n};\n\nexport default connect(setStateToProps, setDispatchToProps)(SignInMenu);\n","import ACTION_TYPES from \"./ACTION_TYPES\";\n\nconst setSignInState = (isSignIn) => ({\n  type: ACTION_TYPES.changeSigInState,\n  payload: isSignIn,\n});\n\nexport default setSignInState;\n","import React from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport ProfileInfo from \"./ProfileInfo\";\nimport SignInMenu from \"./SignInMenu\";\nimport setSignInState from \"../redux/signInState/actions\";\n\nconst SignInManager = ({ isSignIn, setIsSignIn }) =>\n  isSignIn ? (\n    <ProfileInfo setIsAuthorised={setIsSignIn} />\n  ) : (\n    <SignInMenu setIsAuthorised={setIsSignIn} />\n  );\n\nconst setStateToProps = (state) => ({\n  isSignIn: state.signIn.isSignIn,\n});\n\nconst setDispatchToProps = (dispatch) => ({\n  setIsSignIn: bindActionCreators(setSignInState, dispatch),\n});\n\nSignInManager.propTypes = {\n  isSignIn: PropTypes.bool,\n  setIsSignIn: PropTypes.func,\n};\n\nSignInManager.defaultProps = {\n  isSignIn: false,\n  setIsSignIn: () => {},\n};\n\nexport default connect(setStateToProps, setDispatchToProps)(SignInManager);\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { Typography } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\n\nimport \"./styles.css\";\nimport ROUTES from \"../config/constants/ROUTES\";\nimport SignInManager from \"./SignInManager\";\n\nconst HeaderMenu = () => (\n  <AppBar position=\"static\" style={{ backgroundColor: \"rgb(196, 116, 69)\" }}>\n    <Toolbar\n      style={{\n        justifyContent: \"space-around\",\n        height: \"inherit\",\n        alignItems: \"inherit\",\n      }}\n    >\n      <Typography variant=\"h5\" className=\"HeaderItem\">\n        <NavLink\n          to={ROUTES.notes}\n          activeClassName=\"ActiveNavLink\"\n          className=\"NavLink\"\n        >\n          My notes\n        </NavLink>\n      </Typography>\n      <Typography variant=\"h5\" className=\"HeaderItem\">\n        <NavLink\n          to={ROUTES.sharedNotes}\n          activeClassName=\"ActiveNavLink\"\n          className=\"NavLink\"\n        >\n          Shared notes\n        </NavLink>\n      </Typography>\n      <Typography variant=\"h5\" className=\"HeaderItem\">\n        <NavLink\n          to={ROUTES.about}\n          activeClassName=\"ActiveNavLink\"\n          className=\"NavLink\"\n        >\n          About\n        </NavLink>\n      </Typography>\n      <SignInManager />\n    </Toolbar>\n  </AppBar>\n);\n\nexport default HeaderMenu;\n","import React from \"react\";\nimport { HashRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport ROUTES from \"../config/constants/ROUTES\";\nimport NotesContainer from \"../pages/notes/NotesContainer\";\nimport Error404 from \"../pages/errors/Error404\";\nimport SharedNotesContainer from \"../pages/sharedNotes/sharedNotesContainer\";\nimport About from \"../pages/about/About\";\nimport HeaderMenu from \"../components/HeaderMenu\";\n\nconst ApplicationRouter = ({ isSignIn }) => (\n  <div>\n    <HashRouter basename=\"/\">\n      <HeaderMenu />\n      <Switch>\n        <Route\n          exact\n          path={ROUTES.notes}\n          component={isSignIn ? NotesContainer : Error404}\n        />\n        <Route\n          exact\n          path={ROUTES.sharedNotes}\n          component={isSignIn ? SharedNotesContainer : Error404}\n        />\n        <Route exact path={ROUTES.about} component={About} />\n        <Route component={Error404} />\n      </Switch>\n      <Redirect from=\"/\" to=\"/notes\" />\n    </HashRouter>\n  </div>\n);\n\nconst setStateToProps = (state) => ({\n  isSignIn: state.signIn.isSignIn,\n});\n\nApplicationRouter.propTypes = {\n  isSignIn: PropTypes.bool,\n};\n\nApplicationRouter.defaultProps = {\n  isSignIn: false,\n};\n\nexport default connect(setStateToProps)(ApplicationRouter);\n","import React from \"react\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nimport rootReducer from \"./redux/reducer\";\nimport ApplicationRouter from \"./routing/ApplicationRouter\";\n\nconst store = createStore(rootReducer);\nconst queryClient = new QueryClient();\n\nconst App = () => (\n  <Provider store={store}>\n    <QueryClientProvider client={queryClient}>\n      <ApplicationRouter />\n    </QueryClientProvider>\n  </Provider>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}