{"version":3,"sources":["redux/auth/ACTION_TYPES.js","config/constants/LOCAL_STORAGE_KEYS.js","redux/auth/authReducer.js","redux/signInState/ACTION_TYPES.js","redux/signInState/signInReducer.js","redux/reducer.js","config/constants/ROUTES.js","redux/auth/actions.js","components/ProfileInfo/ProfileInfo.js","components/ProfileInfo/index.js","components/RegistrationMenu/RegistrationMenu.js","utils/validations.js","utils/textFormatUtils.js","components/RegistrationMenu/RegistrationMenuContainer.js","components/RegistrationMenu/index.js","components/AuthMenu/AuthMenu.js","components/AuthMenu/AuthMenuContainer.js","config/constants/API_CONFIG.js","components/AuthMenu/index.js","components/SignInMenu/SignInMenu.js","components/SignInMenu/index.js","redux/signInState/actions.js","components/SignInManager/SignInManager.js","components/SignInManager/index.js","components/HeaderMenu/index.js","components/HeaderMenu/HeaderMenu.js","components/SearchField/SearchField.js","components/SearchField/index.js","pages/notes/NotesList.js","pages/notes/NotesListMenu.js","pages/notes/ActiveNoteEditingDialog.js","components/BodyContainer/BodyContainer.js","components/BodyContainer/index.js","pages/notes/ActiveNote.js","config/constants/NOTES.js","pages/notes/index.js","pages/notes/NotesContainer.js","pages/sharedNotes/index.js","pages/sharedNotes/sharedNotesContainer.js","pages/about/index.js","pages/about/About.js","pages/errors/index.js","pages/errors/Error404.js","routing/PrivateRoutes.js","routing/CommonRoutes.js","routing/ApplicationRouter.js","routing/index.js","App.js","index.js"],"names":["ACTION_TYPES","AuthChangeEmail","AuthChangeFirstName","AuthChangeLastName","AuthChangeDateOfBirth","NOTES_ARRAY_KEY","USER_DATA_KEY","userDataFromLocalstorage","localStorage","getItem","initialState","JSON","parse","email","firstName","lastName","dateOfBirth","authReducer","state","action","type","payload","changeSigInState","defaultState","isSignIn","Boolean","signInReducer","rootReducer","combineReducers","auth","signIn","ROUTES","root","notes","sharedNotes","about","setAuthEmail","newEmail","setAuthFirstName","newFirstName","setAuthLastName","newLastName","setAuthBirthDate","newBirthDate","ProfileInfo","setIsAuthorised","useState","anchorEl","setAnchorEl","Box","className","Button","onClick","event","currentTarget","Typography","variant","Menu","keepMounted","open","onClose","style","backgroundColor","color","defaultProps","connect","dispatch","setEmail","bindActionCreators","setFirstName","setLastName","setDateOfBirth","RegistrationMenu","formik","setIsOnRegistrationProcess","id","width","onSubmit","handleSubmit","display","flexDirection","alignItems","TextField","name","label","value","values","onChange","handleChange","error","touched","errors","helperText","InputLabelProps","shrink","autoFocus","password","confirmPassword","padding","currentYear","Date","getUTCFullYear","validateRegistrationInfo","year","date","test","substring","RegistrationMenuContainer","useFormik","initialValues","validate","actions","userData","setItem","stringify","setSubmitting","AuthMenu","wrap","AuthMenuContainer","data","useQuery","axios","find","user","validateAuthInfo","filter","SignInMenu","isOnRegistrationProcess","setSignInState","SignInManager","setIsSignIn","HeaderMenu","AppBar","position","Toolbar","justifyContent","height","to","activeClassName","SearchField","array","setArray","Input","searchText","target","item","title","toLowerCase","includes","content","startAdornment","InputAdornment","NotesList","notesArray","selectedIndex","setSelectedIndex","List","map","ListItem","button","selected","ListItemIcon","ListItemText","primary","Grid","container","justify","secondary","stringToFormat","lengthOfPreviewString","length","substr","NotesListMenu","changeSelectedIndex","filteredArray","setFilteredArray","xs","direction","ActiveNoteEditingDialog","noteTitle","noteContent","isOpen","setOpen","updateNote","textFieldTitle","textFieldContent","isTitleCorrect","setIsTitleCorrect","isContentCorrect","setIsContentCorrect","Dialog","fullWidth","maxWidth","DialogTitle","DialogContent","defaultValue","multiline","DialogActions","disabled","BodyContainer","children","ActiveNote","selectedItem","isDialogOpen","setDialogState","NOTES","NotesContainer","loadedNotesAsString","setNotesArray","selectedNote","setSelectedNote","index","updatedArray","note","updatedNote","SharedNotesContainer","About","Error404","textAlign","PrivateRoutes","exact","path","component","CommonRoutes","ApplicationRouter","basename","from","store","createStore","queryClient","QueryClient","App","QueryClientProvider","client","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.413bfcd8.chunk.js","sourcesContent":["const ACTION_TYPES = {\n  AuthChangeEmail: \"AUTH_CHANGE_EMAIL\",\n  AuthChangeFirstName: \"AUTH_CHANGE_FIRST_NAME\",\n  AuthChangeLastName: \"AUTH_CHANGE_LAST_NAME\",\n  AuthChangeDateOfBirth: \"AUTH_CHANGE_DATE_OF_BIRTH\",\n};\n\nexport default ACTION_TYPES;\n","export const NOTES_ARRAY_KEY = \"notesArray\";\nexport const USER_DATA_KEY = \"notesUserData\";\n","import ACTION_TYPES from \"./ACTION_TYPES\";\nimport { USER_DATA_KEY } from \"../../config/constants/LOCAL_STORAGE_KEYS\";\n\nconst defaultUserData = {\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  dateOfBirth: \"\",\n};\n\nconst userDataFromLocalstorage = localStorage.getItem(USER_DATA_KEY);\nconst initialState = userDataFromLocalstorage\n  ? JSON.parse(userDataFromLocalstorage)\n  : defaultUserData;\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.AuthChangeEmail:\n      return { ...state, email: action.payload };\n    case ACTION_TYPES.AuthChangeFirstName:\n      return { ...state, firstName: action.payload };\n    case ACTION_TYPES.AuthChangeLastName:\n      return { ...state, lastName: action.payload };\n    case ACTION_TYPES.AuthChangeDateOfBirth:\n      return { ...state, dateOfBirth: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const ACTION_TYPES = {\n  changeSigInState: \"CHANGE_SIGN_IN_STATE\",\n};\n\nexport default ACTION_TYPES;\n","import ACTION_TYPES from \"./ACTION_TYPES\";\nimport { USER_DATA_KEY } from \"../../config/constants/LOCAL_STORAGE_KEYS\";\n\nconst defaultState = {\n  isSignIn: Boolean(localStorage.getItem(USER_DATA_KEY)),\n};\n\nconst signInReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.changeSigInState:\n      return { ...state, isSignIn: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default signInReducer;\n","import { combineReducers } from \"redux\";\n\nimport authReducer from \"./auth/authReducer\";\nimport signInReducer from \"./signInState/signInReducer\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  signIn: signInReducer,\n});\n\nexport default rootReducer;\n","const ROUTES = {\n  root: \"/\",\n  notes: \"/notes\",\n  sharedNotes: \"/shared-notes\",\n  about: \"/about\",\n};\n\nexport default ROUTES;\n","import ACTION_TYPES from \"./ACTION_TYPES\";\n\nexport const setAuthEmail = (newEmail) => ({\n  type: ACTION_TYPES.AuthChangeEmail,\n  payload: newEmail,\n});\n\nexport const setAuthFirstName = (newFirstName) => ({\n  type: ACTION_TYPES.AuthChangeFirstName,\n  payload: newFirstName,\n});\n\nexport const setAuthLastName = (newLastName) => ({\n  type: ACTION_TYPES.AuthChangeLastName,\n  payload: newLastName,\n});\n\nexport const setAuthBirthDate = (newBirthDate) => ({\n  type: ACTION_TYPES.AuthChangeDateOfBirth,\n  payload: newBirthDate,\n});\n","import React, { useState } from \"react\";\nimport { Menu, Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport Box from \"@material-ui/core/Box\";\nimport PropTypes from \"prop-types\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport \"../styles.css\";\n\nimport {\n  setAuthBirthDate,\n  setAuthEmail,\n  setAuthFirstName,\n  setAuthLastName,\n} from \"../../redux/auth/actions\";\n\nconst ProfileInfo = ({\n  email,\n  firstName,\n  lastName,\n  dateOfBirth,\n  setIsAuthorised,\n}) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <Box className=\"SignButtonBox\">\n      <Button onClick={handleClick}>\n        <Typography variant=\"h5\" className=\"SignButton\">\n          Profile\n        </Typography>\n      </Button>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <Box className=\"Menu\">\n          <AccountCircleIcon className=\"ProfileIcon MenuItem CenteredMenuItem\" />\n          <Typography variant=\"h5\" className=\"MenuItem\">\n            Mail: {email}\n          </Typography>\n          <Typography variant=\"h5\" className=\"MenuItem\">\n            Name: {firstName}\n          </Typography>\n          <Typography variant=\"h5\" className=\"MenuItem\">\n            Surname: {lastName}\n          </Typography>\n          <Typography variant=\"h5\" className=\"MenuItem\">\n            Date of birth: {dateOfBirth}\n          </Typography>\n          <Button\n            className=\"MenuItem CenteredMenuItem\"\n            style={{\n              backgroundColor: \"rgba(196, 116, 69, 0.7)\",\n              color: \"white\",\n            }}\n            variant=\"contained\"\n            onClick={() => setIsAuthorised(false)}\n          >\n            Log out\n          </Button>\n        </Box>\n      </Menu>\n    </Box>\n  );\n};\nconst setStateToProps = (state) => ({\n  email: state.auth.email,\n  firstName: state.auth.firstName,\n  lastName: state.auth.lastName,\n  dateOfBirth: state.auth.dateOfBirth,\n});\n\nconst setDispatchToProps = (dispatch) => ({\n  setEmail: bindActionCreators(setAuthEmail, dispatch),\n  setFirstName: bindActionCreators(setAuthFirstName, dispatch),\n  setLastName: bindActionCreators(setAuthLastName, dispatch),\n  setDateOfBirth: bindActionCreators(setAuthBirthDate, dispatch),\n});\n\nProfileInfo.propTypes = {\n  email: PropTypes.string,\n  firstName: PropTypes.string,\n  lastName: PropTypes.string,\n  dateOfBirth: PropTypes.string,\n  setIsAuthorised: PropTypes.func,\n};\n\nProfileInfo.defaultProps = {\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  dateOfBirth: \"\",\n  setIsAuthorised: () => {},\n};\n\nexport default connect(setStateToProps, setDispatchToProps)(ProfileInfo);\n","import ProfileInfo from \"./ProfileInfo\";\n\nexport default ProfileInfo;\n","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { Menu, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport \"../styles.css\";\n\nconst RegistrationMenu = ({ formik, setIsOnRegistrationProcess }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className=\"SignButtonBox\">\n      <Button onClick={handleClick}>\n        <Typography variant=\"h5\" className=\"SignButton\">\n          Registration\n        </Typography>\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <div className=\"Menu\" style={{ width: \"300px\" }}>\n          <h1\n            className=\"CenteredMenuItem\"\n            style={{ color: \"rgb(196, 116, 69)\" }}\n          >\n            Registration\n          </h1>\n          <form\n            onSubmit={formik.handleSubmit}\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              width: \"100%\",\n            }}\n          >\n            <div className=\"MenuItem\">\n              <TextField\n                id=\"email\"\n                name=\"email\"\n                label=\"Email\"\n                type=\"email\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                error={formik.touched.email && Boolean(formik.errors.email)}\n                helperText={formik.touched.email && formik.errors.email}\n                style={{ width: \"100%\" }}\n              />\n            </div>\n            <div className=\"MenuItem\">\n              <TextField\n                name=\"firstName\"\n                label=\"First name\"\n                value={formik.values.firstName}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.firstName && Boolean(formik.errors.firstName)\n                }\n                helperText={formik.touched.firstName && formik.errors.firstName}\n                style={{ width: \"100%\" }}\n              />\n            </div>\n            <div className=\"MenuItem\">\n              <TextField\n                name=\"lastName\"\n                label=\"Last name\"\n                value={formik.values.lastName}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.lastName && Boolean(formik.errors.lastName)\n                }\n                helperText={formik.touched.lastName && formik.errors.lastName}\n                style={{ width: \"100%\" }}\n              />\n            </div>\n            <div className=\"MenuItem\" style={{ width: \"100%\" }}>\n              <TextField\n                name=\"dateOfBirth\"\n                label=\"Date of birth\"\n                type=\"date\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                value={formik.values.dateOfBirth}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.dateOfBirth &&\n                  Boolean(formik.errors.dateOfBirth)\n                }\n                helperText={\n                  formik.touched.dateOfBirth && formik.errors.dateOfBirth\n                }\n                style={{ width: \"100%\" }}\n                autoFocus\n              />\n            </div>\n            <div className=\"MenuItem\">\n              <TextField\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                value={formik.values.password}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.password && Boolean(formik.errors.password)\n                }\n                helperText={formik.touched.password && formik.errors.password}\n                style={{ width: \"100%\" }}\n              />\n            </div>\n            <div className=\"MenuItem\">\n              <TextField\n                name=\"confirmPassword\"\n                label=\"Confirm password\"\n                type=\"password\"\n                value={formik.values.confirmPassword}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.confirmPassword &&\n                  Boolean(formik.errors.confirmPassword)\n                }\n                helperText={\n                  formik.touched.confirmPassword &&\n                  formik.errors.confirmPassword\n                }\n                style={{ width: \"100%\" }}\n              />\n            </div>\n            <div className=\"CenteredMenuItem\" style={{ padding: \"5px 0\" }}>\n              <Button\n                style={{\n                  backgroundColor: \"rgba(196, 116, 69, 0.7)\",\n                  color: \"white\",\n                }}\n                variant=\"contained\"\n                type=\"submit\"\n              >\n                Submit\n              </Button>\n            </div>\n            <div className=\"CenteredMenuItem\" style={{ padding: \"5px 0\" }}>\n              <Button\n                style={{\n                  backgroundColor: \"rgba(196, 116, 69, 0.7)\",\n                  color: \"white\",\n                }}\n                variant=\"contained\"\n                onClick={() => setIsOnRegistrationProcess(false)}\n              >\n                Log in\n              </Button>\n            </div>\n          </form>\n        </div>\n      </Menu>\n    </div>\n  );\n};\n\nRegistrationMenu.propTypes = {\n  formik: PropTypes.func,\n  setIsOnRegistrationProcess: PropTypes.func,\n};\n\nRegistrationMenu.defaultProps = {\n  formik: () => {},\n  setIsOnRegistrationProcess: () => {},\n};\n\nexport default RegistrationMenu;\n","import { getYearFromDate } from \"./textFormatUtils\";\n\nconst currentDate = new Date();\nconst currentYear = currentDate.getUTCFullYear();\nconst MAX_HUMAN_AGE = 120;\nconst isYearValid = (year) =>\n  year > currentYear - MAX_HUMAN_AGE && year < currentYear;\n\nexport const validateRegistrationInfo = (values) => {\n  const errors = {};\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n  if (!values.firstName) {\n    errors.firstName = \"Required\";\n  } else if (!/^[a-zA-Z ]+$/.test(values.firstName)) {\n    errors.firstName = \"Invalid name input\";\n  }\n  if (!values.lastName) {\n    errors.lastName = \"Required\";\n  } else if (!/^[a-zA-Z ]+$/.test(values.lastName)) {\n    errors.lastName = \"Invalid last name input\";\n  }\n  if (!values.dateOfBirth) {\n    errors.dateOfBirth = \"Required\";\n  } else if (!isYearValid(getYearFromDate(values.dateOfBirth))) {\n    errors.dateOfBirth = \"Invalid year input\";\n  }\n  if (!values.password) {\n    errors.password = \"Required\";\n  } else if (\n    !/(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,}/.test(values.password)\n  ) {\n    errors.password =\n      \"Password must contain numbers, \\n\" +\n      \" latin letters (lower- and uppercase) \\n\" +\n      \" and be at least 6 characters long \\n\";\n  }\n  if (!values.confirmPassword) {\n    errors.confirmPassword = \"Required\";\n  } else if (values.password !== values.confirmPassword) {\n    errors.confirmPassword = \"Password confirm is invalid\";\n  }\n  return errors;\n};\n\nexport const validateAuthInfo = (values, data) => {\n  const errors = {};\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n  if (!values.password) {\n    errors.password = \"Required\";\n  }\n  if (\n    !data.data.find(\n      (user) => user.email === values.email && user.password === values.password\n    )\n  ) {\n    errors.email = \"Such user not found\";\n  }\n  return errors;\n};\n","export const getPreviewString = (stringToFormat, lengthOfPreviewString) =>\n  stringToFormat.length > 20\n    ? `${stringToFormat.substr(0, lengthOfPreviewString)} ...`\n    : stringToFormat;\n\nconst YEAR_STRING_LENGTH = 4;\nexport const getYearFromDate = (date) => date.substring(0, YEAR_STRING_LENGTH);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useFormik } from \"formik\";\n\nimport RegistrationMenu from \"./RegistrationMenu\";\nimport { USER_DATA_KEY } from \"../../config/constants/LOCAL_STORAGE_KEYS\";\nimport { validateRegistrationInfo } from \"../../utils/validations\";\n\nconst RegistrationMenuContainer = ({\n  email,\n  firstName,\n  lastName,\n  dateOfBirth,\n  setEmail,\n  setFirstName,\n  setLastName,\n  setDateOfBirth,\n  setIsAuthorised,\n  setIsOnRegistrationProcess,\n}) => {\n  const formik = useFormik({\n    initialValues: {\n      email,\n      firstName,\n      lastName,\n      dateOfBirth,\n      password: \"\",\n      confirmPassword: \"\",\n    },\n\n    validate: (values) => validateRegistrationInfo(values),\n\n    onSubmit: (values, actions) => {\n      const userData = {\n        email: values.email,\n        firstName: values.firstName,\n        lastName: values.lastName,\n        dateOfBirth: values.dateOfBirth,\n      };\n      setEmail(userData.email);\n      setFirstName(userData.firstName);\n      setLastName(userData.lastName);\n      setDateOfBirth(userData.dateOfBirth);\n\n      localStorage.setItem(USER_DATA_KEY, JSON.stringify(userData));\n\n      actions.setSubmitting(false);\n\n      setIsAuthorised(true);\n      setIsOnRegistrationProcess(false);\n    },\n  });\n\n  return (\n    <RegistrationMenu\n      formik={formik}\n      setIsOnRegistrationProcess={setIsOnRegistrationProcess}\n    />\n  );\n};\n\nRegistrationMenuContainer.propTypes = {\n  email: PropTypes.string,\n  firstName: PropTypes.string,\n  lastName: PropTypes.string,\n  dateOfBirth: PropTypes.string,\n  setEmail: PropTypes.func,\n  setFirstName: PropTypes.func,\n  setLastName: PropTypes.func,\n  setDateOfBirth: PropTypes.func,\n  setIsAuthorised: PropTypes.func,\n  setIsOnRegistrationProcess: PropTypes.func,\n};\n\nRegistrationMenuContainer.defaultProps = {\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  dateOfBirth: \"\",\n  setEmail: () => {},\n  setFirstName: () => {},\n  setLastName: () => {},\n  setDateOfBirth: () => {},\n  setIsAuthorised: () => {},\n  setIsOnRegistrationProcess: () => {},\n};\n\nexport default RegistrationMenuContainer;\n","import RegistrationMenu from \"./RegistrationMenu\";\nimport RegistrationMenuContainer from \"./RegistrationMenuContainer\";\n\nexport { RegistrationMenu };\nexport default RegistrationMenuContainer;\n","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { Menu, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport \"../styles.css\";\n\nconst AuthMenu = ({ formik, setIsOnRegistrationProcess }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className=\"SignButtonBox\">\n      <Button onClick={handleClick}>\n        <Typography variant=\"h5\" className=\"SignButton\">\n          Log in\n        </Typography>\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <div className=\"Menu\">\n          <h1\n            className=\"CenteredMenuItem\"\n            style={{ color: \"rgb(196, 116, 69)\" }}\n          >\n            Sign in\n          </h1>\n          <form\n            onSubmit={formik.handleSubmit}\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              wrap: \"nowrap\",\n            }}\n          >\n            <div className=\"MenuItem\">\n              <TextField\n                id=\"email\"\n                name=\"email\"\n                label=\"Email\"\n                type=\"email\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                error={formik.touched.email && Boolean(formik.errors.email)}\n                helperText={formik.touched.email && formik.errors.email}\n              />\n            </div>\n            <div className=\"MenuItem\">\n              <TextField\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                value={formik.values.password}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.password && Boolean(formik.errors.password)\n                }\n                helperText={formik.touched.password && formik.errors.password}\n              />\n            </div>\n            <div className=\"CenteredMenuItem\" style={{ padding: \"5px 0\" }}>\n              <Button\n                style={{\n                  backgroundColor: \"rgba(196, 116, 69, 0.7)\",\n                  color: \"white\",\n                }}\n                variant=\"contained\"\n                type=\"submit\"\n              >\n                Submit\n              </Button>\n            </div>\n            <div className=\"CenteredMenuItem\" style={{ padding: \"5px 0\" }}>\n              <Button\n                style={{\n                  backgroundColor: \"rgba(196, 116, 69, 0.7)\",\n                  color: \"white\",\n                }}\n                variant=\"contained\"\n                onClick={() => setIsOnRegistrationProcess(true)}\n              >\n                Create new account\n              </Button>\n            </div>\n          </form>\n        </div>\n      </Menu>\n    </div>\n  );\n};\n\nAuthMenu.propTypes = {\n  formik: PropTypes.func,\n  setIsOnRegistrationProcess: PropTypes.func,\n};\n\nAuthMenu.defaultProps = {\n  formik: () => {},\n  setIsOnRegistrationProcess: () => {},\n};\n\nexport default AuthMenu;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useQuery } from \"react-query\";\nimport axios from \"axios\";\nimport { useFormik } from \"formik\";\n\nimport AuthMenu from \"./AuthMenu\";\nimport { USER_DATA_KEY } from \"../../config/constants/LOCAL_STORAGE_KEYS\";\nimport userApi from \"../../config/constants/API_CONFIG\";\nimport { validateAuthInfo } from \"../../utils/validations\";\n\nconst AuthMenuContainer = ({\n  email,\n  setEmail,\n  setFirstName,\n  setLastName,\n  setDateOfBirth,\n  setIsAuthorised,\n  setIsOnRegistrationProcess,\n}) => {\n  const { data } = useQuery(\"users\", () => axios(userApi));\n\n  const formik = useFormik({\n    initialValues: {\n      email,\n      password: \"\",\n    },\n\n    validate: (values) => validateAuthInfo(values, data),\n\n    onSubmit: (values, actions) => {\n      const userData = data.data.filter(\n        (user) =>\n          user.email === values.email && user.password === values.password\n      )[0];\n\n      setEmail(userData.email);\n      setFirstName(userData.firstName);\n      setLastName(userData.lastName);\n      setDateOfBirth(userData.dateOfBirth);\n\n      localStorage.setItem(USER_DATA_KEY, JSON.stringify(userData));\n\n      setIsAuthorised(true);\n      actions.setSubmitting(false);\n    },\n  });\n\n  return (\n    <AuthMenu\n      formik={formik}\n      setIsOnRegistrationProcess={setIsOnRegistrationProcess}\n    />\n  );\n};\n\nAuthMenuContainer.propTypes = {\n  email: PropTypes.string,\n  setEmail: PropTypes.func,\n  setFirstName: PropTypes.func,\n  setLastName: PropTypes.func,\n  setDateOfBirth: PropTypes.func,\n  setIsAuthorised: PropTypes.func,\n  setIsOnRegistrationProcess: PropTypes.func,\n};\n\nAuthMenuContainer.defaultProps = {\n  email: \"\",\n  setEmail: () => {},\n  setFirstName: () => {},\n  setLastName: () => {},\n  setDateOfBirth: () => {},\n  setIsAuthorised: () => {},\n  setIsOnRegistrationProcess: () => {},\n};\n\nexport default AuthMenuContainer;\n","const userApi = \"https://mocki.io/v1/cb356f5f-32cc-48f8-8f05-297ecc66ca90\";\n\nexport default userApi;\n","import AuthMenu from \"./AuthMenu\";\nimport AuthMenuContainer from \"./AuthMenuContainer\";\n\nexport { AuthMenu };\nexport default AuthMenuContainer;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport RegistrationMenuContainer from \"../RegistrationMenu\";\nimport AuthMenuContainer from \"../AuthMenu\";\n\nimport {\n  setAuthBirthDate,\n  setAuthEmail,\n  setAuthFirstName,\n  setAuthLastName,\n} from \"../../redux/auth/actions\";\n\nconst SignInMenu = ({\n  email,\n  firstName,\n  lastName,\n  dateOfBirth,\n  setEmail,\n  setFirstName,\n  setLastName,\n  setDateOfBirth,\n  setIsAuthorised,\n}) => {\n  const [isOnRegistrationProcess, setIsOnRegistrationProcess] = useState(false);\n  return isOnRegistrationProcess ? (\n    <RegistrationMenuContainer\n      setIsAuthorised={setIsAuthorised}\n      setIsOnRegistrationProcess={setIsOnRegistrationProcess}\n      email={email}\n      firstName={firstName}\n      lastName={lastName}\n      dateOfBirth={dateOfBirth}\n      setEmail={setEmail}\n      setFirstName={setFirstName}\n      setLastName={setLastName}\n      setDateOfBirth={setDateOfBirth}\n    />\n  ) : (\n    <AuthMenuContainer\n      setIsAuthorised={setIsAuthorised}\n      setIsOnRegistrationProcess={setIsOnRegistrationProcess}\n      setEmail={setEmail}\n      setFirstName={setFirstName}\n      setLastName={setLastName}\n      setDateOfBirth={setDateOfBirth}\n    />\n  );\n};\n\nconst setStateToProps = (state) => ({\n  email: state.auth.email,\n  firstName: state.auth.firstName,\n  lastName: state.auth.lastName,\n  dateOfBirth: state.auth.dateOfBirth,\n});\n\nconst setDispatchToProps = (dispatch) => ({\n  setEmail: bindActionCreators(setAuthEmail, dispatch),\n  setFirstName: bindActionCreators(setAuthFirstName, dispatch),\n  setLastName: bindActionCreators(setAuthLastName, dispatch),\n  setDateOfBirth: bindActionCreators(setAuthBirthDate, dispatch),\n});\n\nSignInMenu.propTypes = {\n  email: PropTypes.string,\n  firstName: PropTypes.string,\n  lastName: PropTypes.string,\n  dateOfBirth: PropTypes.string,\n  setEmail: PropTypes.func,\n  setFirstName: PropTypes.func,\n  setLastName: PropTypes.func,\n  setDateOfBirth: PropTypes.func,\n  setIsAuthorised: PropTypes.func,\n};\n\nSignInMenu.defaultProps = {\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  dateOfBirth: \"\",\n  setEmail: () => {},\n  setFirstName: () => {},\n  setLastName: () => {},\n  setDateOfBirth: () => {},\n  setIsAuthorised: () => {},\n};\n\nexport default connect(setStateToProps, setDispatchToProps)(SignInMenu);\n","import SignInMenu from \"./SignInMenu\";\n\nexport default SignInMenu;\n","import ACTION_TYPES from \"./ACTION_TYPES\";\n\nconst setSignInState = (isSignIn) => ({\n  type: ACTION_TYPES.changeSigInState,\n  payload: isSignIn,\n});\n\nexport default setSignInState;\n","import React from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport ProfileInfo from \"../ProfileInfo\";\nimport SignInMenu from \"../SignInMenu\";\nimport setSignInState from \"../../redux/signInState/actions\";\n\nconst SignInManager = ({ isSignIn, setIsSignIn }) =>\n  isSignIn ? (\n    <ProfileInfo setIsAuthorised={setIsSignIn} />\n  ) : (\n    <SignInMenu setIsAuthorised={setIsSignIn} />\n  );\n\nconst setStateToProps = (state) => ({\n  isSignIn: state.signIn.isSignIn,\n});\n\nconst setDispatchToProps = (dispatch) => ({\n  setIsSignIn: bindActionCreators(setSignInState, dispatch),\n});\n\nSignInManager.propTypes = {\n  isSignIn: PropTypes.bool,\n  setIsSignIn: PropTypes.func,\n};\n\nSignInManager.defaultProps = {\n  isSignIn: false,\n  setIsSignIn: () => {},\n};\n\nexport default connect(setStateToProps, setDispatchToProps)(SignInManager);\n","import SignInManager from \"./SignInManager\";\n\nexport default SignInManager;\n","import HeaderMenu from \"./HeaderMenu\";\n\nexport default HeaderMenu;\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { Typography } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\n\nimport \"../styles.css\";\nimport ROUTES from \"../../config/constants/ROUTES\";\nimport SignInManager from \"../SignInManager\";\n\nconst HeaderMenu = () => (\n  <AppBar position=\"static\" style={{ backgroundColor: \"rgb(196, 116, 69)\" }}>\n    <Toolbar\n      style={{\n        justifyContent: \"space-around\",\n        height: \"inherit\",\n        alignItems: \"inherit\",\n      }}\n    >\n      <Typography variant=\"h5\" className=\"HeaderItem\">\n        <NavLink\n          to={ROUTES.notes}\n          activeClassName=\"ActiveNavLink\"\n          className=\"NavLink\"\n        >\n          My notes\n        </NavLink>\n      </Typography>\n      <Typography variant=\"h5\" className=\"HeaderItem\">\n        <NavLink\n          to={ROUTES.sharedNotes}\n          activeClassName=\"ActiveNavLink\"\n          className=\"NavLink\"\n        >\n          Shared notes\n        </NavLink>\n      </Typography>\n      <Typography variant=\"h5\" className=\"HeaderItem\">\n        <NavLink\n          to={ROUTES.about}\n          activeClassName=\"ActiveNavLink\"\n          className=\"NavLink\"\n        >\n          About\n        </NavLink>\n      </Typography>\n      <SignInManager />\n    </Toolbar>\n  </AppBar>\n);\n\nexport default HeaderMenu;\n","import React from \"react\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Input from \"@material-ui/core/Input\";\nimport PropTypes from \"prop-types\";\n\nconst SearchField = ({ array, setArray }) => {\n  const handleInputChange = (event) => {\n    const searchText = event.target.value;\n    setArray(\n      array.filter(\n        (item) =>\n          item.title.toLowerCase().includes(searchText.toLowerCase()) ||\n          item.content.toLowerCase().includes(searchText.toLowerCase())\n      )\n    );\n  };\n\n  return (\n    <Input\n      label=\"Search\"\n      onChange={handleInputChange}\n      startAdornment={\n        <InputAdornment>\n          <SearchIcon />\n        </InputAdornment>\n      }\n    />\n  );\n};\n\nSearchField.propTypes = {\n  array: PropTypes.arrayOf(PropTypes.object),\n  setArray: PropTypes.func,\n};\n\nSearchField.defaultProps = {\n  array: [],\n  setArray: () => {},\n};\n\nexport default SearchField;\n","import SearchField from \"./SearchField\";\n\nexport default SearchField;\n","import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport NoteIcon from \"@material-ui/icons/Note\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { Grid } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport { getPreviewString } from \"../../utils/textFormatUtils\";\n\nconst LENGTH_OF_NOTE_CONTENT_PREVIEW = 20;\n\nconst NotesList = ({ notesArray, selectedIndex, setSelectedIndex }) => (\n  <List>\n    {notesArray.map((item) => (\n      <ListItem\n        button\n        selected={selectedIndex === item.id}\n        onClick={() => setSelectedIndex(item.id)}\n      >\n        <ListItemIcon>\n          <NoteIcon />\n        </ListItemIcon>\n        <ListItemText\n          primary={\n            <Grid container justify=\"space-between\">\n              <span>{item.title}</span>\n              <span>{item.date}</span>\n            </Grid>\n          }\n          secondary={getPreviewString(\n            item.content,\n            LENGTH_OF_NOTE_CONTENT_PREVIEW\n          )}\n        />\n      </ListItem>\n    ))}\n  </List>\n);\n\nNotesList.propTypes = {\n  notesArray: PropTypes.arrayOf(PropTypes.object),\n  selectedIndex: PropTypes.number,\n  setSelectedIndex: PropTypes.func,\n};\n\nNotesList.defaultProps = {\n  notesArray: [],\n  selectedIndex: null,\n  setSelectedIndex() {},\n};\n\nexport default NotesList;\n","import React, { useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport \"./styles.css\";\nimport SearchField from \"../../components/SearchField\";\nimport NotesList from \"./NotesList\";\n\nconst NotesListMenu = ({ notesArray, selectedIndex, changeSelectedIndex }) => {\n  const [filteredArray, setFilteredArray] = useState(notesArray);\n\n  return (\n    <Grid className=\"NotesListMenu\" container item xs={3} direction=\"column\">\n      <SearchField array={notesArray} setArray={setFilteredArray} />\n      <NotesList\n        notesArray={filteredArray}\n        selectedIndex={selectedIndex}\n        setSelectedIndex={changeSelectedIndex}\n      />\n    </Grid>\n  );\n};\n\nNotesListMenu.propTypes = {\n  notesArray: PropTypes.arrayOf(PropTypes.object),\n  selectedIndex: PropTypes.number,\n  changeSelectedIndex: PropTypes.func,\n};\n\nNotesListMenu.defaultProps = {\n  notesArray: [],\n  selectedIndex: null,\n  changeSelectedIndex() {},\n};\n\nexport default NotesListMenu;\n","import React, { useState } from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport { Grid } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport PropTypes from \"prop-types\";\n\nimport \"./styles.css\";\n\nconst TITLE_MAX_LENGTH = 35;\nconst CONTENT_MAX_LENGTH = 2000;\n\nconst ActiveNoteEditingDialog = ({\n  noteTitle,\n  noteContent,\n  isOpen,\n  setOpen,\n  updateNote,\n}) => {\n  let textFieldTitle = noteTitle;\n  let textFieldContent = noteContent;\n\n  const [isTitleCorrect, setIsTitleCorrect] = useState(true);\n  const [isContentCorrect, setIsContentCorrect] = useState(true);\n\n  const checkIsTitleCorrect = (title) =>\n    title.length > 0 && title.length < TITLE_MAX_LENGTH;\n  const checkIsContentCorrect = (content) =>\n    content.length > 0 && content.length < CONTENT_MAX_LENGTH;\n\n  const handleTitleFieldChange = (event) => {\n    textFieldTitle = event.target.value;\n    setIsTitleCorrect(checkIsTitleCorrect(textFieldTitle));\n  };\n  const handleContentFieldChange = (event) => {\n    textFieldContent = event.target.value;\n    setIsContentCorrect(checkIsContentCorrect(textFieldContent));\n  };\n  const handleSaveBtnClick = () => {\n    updateNote(textFieldTitle, textFieldContent);\n    setOpen(false);\n  };\n\n  return (\n    <Dialog open={isOpen} fullWidth=\"true\" maxWidth=\"false\">\n      <DialogTitle>Editing note</DialogTitle>\n      <DialogContent>\n        <Grid direction=\"column\">\n          <TextField\n            id=\"editTitleField\"\n            error={!isTitleCorrect}\n            className=\"DialogInputField\"\n            label=\"title\"\n            defaultValue={textFieldTitle}\n            onChange={handleTitleFieldChange}\n            helperText={\n              isTitleCorrect\n                ? \"\"\n                : `Title length must be between 1 and ${TITLE_MAX_LENGTH} symbols`\n            }\n          />\n          <TextField\n            error={!isContentCorrect}\n            className=\"DialogInputField\"\n            label=\"content\"\n            defaultValue={textFieldContent}\n            onChange={handleContentFieldChange}\n            helperText={\n              isContentCorrect\n                ? \"\"\n                : `Content length must be between 1 and ${CONTENT_MAX_LENGTH} symbols`\n            }\n            multiline\n          />\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => setOpen(!isOpen)}>Close</Button>\n        <Button\n          disabled={!(isTitleCorrect && isContentCorrect)}\n          onClick={handleSaveBtnClick}\n        >\n          Save\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nActiveNoteEditingDialog.propTypes = {\n  noteTitle: PropTypes.string,\n  noteContent: PropTypes.string,\n  isOpen: PropTypes.bool,\n  setOpen: PropTypes.func,\n  updateNote: PropTypes.func,\n};\n\nActiveNoteEditingDialog.defaultProps = {\n  noteTitle: \"\",\n  noteContent: \"\",\n  isOpen: false,\n  setOpen: () => {},\n  updateNote: () => {},\n};\n\nexport default ActiveNoteEditingDialog;\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport \"../styles.css\";\n\nconst BodyContainer = ({ children }) => (\n  <Grid className=\"ActiveNote\" container wrap=\"nowrap\">\n    {children}\n  </Grid>\n);\n\nBodyContainer.propTypes = {\n  children: PropTypes.element,\n};\n\nBodyContainer.defaultProps = {\n  children: <div />,\n};\n\nexport default BodyContainer;\n","import BodyContainer from \"./BodyContainer\";\n\nexport default BodyContainer;\n","import React, { useState } from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport PropTypes from \"prop-types\";\n\nimport \"./styles.css\";\nimport ActiveNoteEditingDialog from \"./ActiveNoteEditingDialog\";\nimport BodyContainer from \"../../components/BodyContainer\";\n\nconst ActiveNote = ({ selectedItem, updateNote }) => {\n  const [isDialogOpen, setDialogState] = useState(false);\n\n  return selectedItem ? (\n    <BodyContainer>\n      <Grid container direction=\"column\" alignItems=\"center\">\n        <Typography className=\"ActiveNoteTitle\" variant=\"h3\">\n          {selectedItem.title}\n        </Typography>\n        <Typography className=\"ActiveNoteContent\" variant=\"h5\">\n          {selectedItem.content}\n        </Typography>\n      </Grid>\n      <Button\n        onClick={() => setDialogState(!isDialogOpen)}\n        style={{ backgroundColor: \"rgba(255, 255, 255, 0.7)\" }}\n      >\n        {\" \"}\n        Edit{\" \"}\n      </Button>\n      <ActiveNoteEditingDialog\n        noteTitle={selectedItem.title}\n        noteContent={selectedItem.content}\n        isOpen={isDialogOpen}\n        setOpen={setDialogState}\n        updateNote={updateNote}\n      />\n    </BodyContainer>\n  ) : (\n    <BodyContainer>\n      <Typography variant=\"h3\">Select note to display</Typography>\n    </BodyContainer>\n  );\n};\n\nActiveNote.propTypes = {\n  selectedItem: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    content: PropTypes.string,\n    date: PropTypes.string,\n  }),\n  updateNote: PropTypes.func,\n};\n\nActiveNote.defaultProps = {\n  selectedItem: null,\n  updateNote: () => {},\n};\n\nexport default ActiveNote;\n","const NOTES = [\n  {\n    id: 0,\n    title: \"React\",\n    content:\n      \"React — JavaScript-библиотека с открытым исходным кодом для разработки пользовательских интерфейсов.\" +\n      \"React разрабатывается и поддерживается Facebook, Instagram и сообществом отдельных разработчиков и корпораций.\" +\n      \"React может использоваться для разработки одностраничных и мобильных приложений. Его цель — предоставить высокую скорость, простоту и масштабируемость.\" +\n      \" В качестве библиотеки для разработки пользовательских интерфейсов React часто используется с другими библиотеками, такими как MobX, Redux и GraphQL.\",\n    date: \"03.05.2020\",\n  },\n  {\n    id: 1,\n    title: \"Material Design\",\n    content:\n      \"Material Design — стиль графического дизайна интерфейсов программного обеспечения и приложений,\" +\n      \" разработанный компанией Google. Впервые представлен на конференции Google I/O 25 июня 2014 года.\" +\n      \" Стиль расширяет идею «карточек», появившуюся в Google Now, более широким применением строгих макетов,\" +\n      \" анимаций и переходов, отступов и эффектов глубины (света и тени). По идее графических дизайнеров Google,\" +\n      \" у приложений не должно быть острых углов, карточки должны переключаться между собой плавно и практически незаметно.\",\n    date: \"02.05.2020\",\n  },\n  {\n    id: 2,\n    title: \"Использование хука состояния\",\n    content:\n      \"useState — это хук.\" +\n      \" Мы вызываем его, чтобы наделить наш функциональный компонент внутренним состоянием.\" +\n      \" React будет хранить это состояние между рендерами. Вызов useState возвращает массив с двумя элементами,\" +\n      \" который содержит: текущее значение состояния и функцию для его обновления.\" +\n      \" Эту функцию можно использовать где угодно, например, в обработчике событий.\" +\n      \" Она схожа с this.setState в классах, но не сливает новое и старое состояние вместе.\",\n    date: \"02.05.2020\",\n  },\n  {\n    id: 3,\n    title: \"GitHub Pages\",\n    content:\n      \"GitHub Pages are public web pages for users, organizations, and repositories,\" +\n      \" that are freely hosted on GitHub’s github.io domain or on a custom domain name of your choice.\" +\n      \" GitHub Pages are powered by Jekyll behind the scenes,\" +\n      \" so they’re a great way to host your Jekyll-powered website for free.\",\n    date: \"02.05.2020\",\n  },\n];\n\nexport default NOTES;\n","import NotesContainer from \"./NotesContainer\";\n\nexport default NotesContainer;\n","import React, { useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport NotesListMenu from \"./NotesListMenu\";\nimport ActiveNote from \"./ActiveNote\";\nimport NOTES from \"../../config/constants/NOTES\";\nimport { NOTES_ARRAY_KEY } from \"../../config/constants/LOCAL_STORAGE_KEYS\";\nimport \"./styles.css\";\n\nconst NotesContainer = () => {\n  const loadedNotesAsString = localStorage.getItem(NOTES_ARRAY_KEY);\n\n  const [notesArray, setNotesArray] = useState(\n    loadedNotesAsString ? JSON.parse(loadedNotesAsString) : NOTES\n  );\n  const [selectedNote, setSelectedNote] = useState(null);\n\n  const updateNote = (title, content) => {\n    const updatedArray = notesArray.map((note) => {\n      if (note.id === selectedNote.id) {\n        const updatedNote = {\n          id: note.id,\n          title,\n          content,\n          date: note.date,\n        };\n        setSelectedNote(updatedNote);\n        return updatedNote;\n      }\n      return note;\n    });\n    setNotesArray(updatedArray);\n\n    localStorage.setItem(NOTES_ARRAY_KEY, JSON.stringify(updatedArray));\n  };\n\n  return (\n    <div className=\"NotesContainer\">\n      <Grid container direction=\"row\" wrap=\"nowrap\" justify=\"space-between\">\n        <NotesListMenu\n          notesArray={notesArray}\n          selectedIndex={selectedNote ? selectedNote.id : null}\n          changeSelectedIndex={(index) => setSelectedNote(notesArray[index])}\n        />\n        <ActiveNote item selectedItem={selectedNote} updateNote={updateNote} />\n      </Grid>\n    </div>\n  );\n};\n\nexport default NotesContainer;\n","import SharedNotesContainer from \"./sharedNotesContainer\";\n\nexport default SharedNotesContainer;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nimport BodyContainer from \"../../components/BodyContainer\";\n\nconst SharedNotesContainer = () => (\n  <BodyContainer>\n    <Typography variant=\"h1\">There will be Shared Notes page</Typography>\n  </BodyContainer>\n);\n\nexport default SharedNotesContainer;\n","import About from \"./About\";\n\nexport default About;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nimport BodyContainer from \"../../components/BodyContainer\";\n\nconst About = () => (\n  <BodyContainer>\n    <Typography variant=\"h1\">There will be About page</Typography>\n  </BodyContainer>\n);\n\nexport default About;\n","import Error404 from \"./Error404\";\n\nexport default Error404;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nimport BodyContainer from \"../../components/BodyContainer\";\n\nconst Error404 = () => (\n  <BodyContainer>\n    <Typography variant=\"h1\" style={{ textAlign: \"center\" }}>\n      Error 404 - Page not found\n    </Typography>\n  </BodyContainer>\n);\n\nexport default Error404;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport NotesContainer from \"../pages/notes\";\nimport ROUTES from \"../config/constants/ROUTES\";\nimport SharedNotesContainer from \"../pages/sharedNotes\";\nimport About from \"../pages/about\";\nimport Error404 from \"../pages/errors\";\n\nconst PrivateRoutes = () => (\n  <Switch>\n    <Route exact path={ROUTES.notes} component={NotesContainer} />\n    <Route exact path={ROUTES.sharedNotes} component={SharedNotesContainer} />\n    <Route exact path={ROUTES.about} component={About} />\n    <Route component={Error404} />\n  </Switch>\n);\n\nexport default PrivateRoutes;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport ROUTES from \"../config/constants/ROUTES\";\nimport About from \"../pages/about\";\nimport Error404 from \"../pages/errors\";\n\nconst CommonRoutes = () => (\n  <Switch>\n    <Route exact path={ROUTES.about} component={About} />\n    <Route component={Error404} />\n  </Switch>\n);\n\nexport default CommonRoutes;\n","import React from \"react\";\nimport { HashRouter, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport HeaderMenu from \"../components/HeaderMenu\";\nimport ROUTES from \"../config/constants/ROUTES\";\nimport PrivateRoutes from \"./PrivateRoutes\";\nimport CommonRoutes from \"./CommonRoutes\";\n\nconst ApplicationRouter = ({ isSignIn }) => (\n  <div>\n    <HashRouter basename=\"/\">\n      <HeaderMenu />\n      {isSignIn ? <PrivateRoutes /> : <CommonRoutes />}\n      <Redirect from={ROUTES.root} to={ROUTES.notes} />\n    </HashRouter>\n  </div>\n);\n\nconst setStateToProps = (state) => ({\n  isSignIn: state.signIn.isSignIn,\n});\n\nApplicationRouter.propTypes = {\n  isSignIn: PropTypes.bool,\n};\n\nApplicationRouter.defaultProps = {\n  isSignIn: false,\n};\n\nexport default connect(setStateToProps)(ApplicationRouter);\n","import ApplicationRouter from \"./ApplicationRouter\";\n\nexport default ApplicationRouter;\n","import React from \"react\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nimport rootReducer from \"./redux/reducer\";\nimport ApplicationRouter from \"./routing\";\n\nconst store = createStore(rootReducer);\nconst queryClient = new QueryClient();\n\nconst App = () => (\n  <Provider store={store}>\n    <QueryClientProvider client={queryClient}>\n      <ApplicationRouter />\n    </QueryClientProvider>\n  </Provider>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}