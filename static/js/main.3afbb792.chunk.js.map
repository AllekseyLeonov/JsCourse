{"version":3,"sources":["config/constants/LOCAL_STORAGE_KEYS.js","redux/auth/ACTION_TYPES.js","redux/auth/authReducer.js","redux/signInState/ACTION_TYPES.js","redux/signInState/signInReducer.js","redux/reducer.js","config/constants/ROUTES.js","redux/signInState/actions.js","components/styles.js","components/ProfileInfo/ProfileInfo.js","components/ProfileInfo/ProfileInfoContainer.js","components/ProfileInfo/index.js","redux/auth/actions.js","components/RegistrationMenu/RegistrationMenu.js","config/constants/NOTES.js","utils/textFormatUtils.js","utils/validations.js","components/RegistrationMenu/RegistrationMenuContainer.js","components/RegistrationMenu/index.js","components/AuthMenu/AuthMenu.js","components/AuthMenu/AuthMenuContainer.js","config/constants/API_CONFIG.js","components/AuthMenu/index.js","components/SignInMenu/SignInMenu.js","components/SignInMenu/index.js","components/SignInManager/SignInManager.js","components/SignInManager/index.js","components/HeaderMenu/index.js","components/HeaderMenu/HeaderMenu.js","pages/sharedNotes/styles.js","utils/arrayProcessingUtils.js","components/BodyContainer/BodyContainer.js","components/BodyContainer/index.js","pages/notes/styles.js","pages/notes/NoteProcessingDialog.js","pages/notes/NoteProcessingDialogContainer.js","pages/notes/NoteSharingSnackbar.js","pages/notes/ActiveNote.js","pages/notes/ActiveNoteContainer.js","components/SearchField/SearchField.js","components/SearchField/index.js","components/FilterField/FilterField.js","components/FilterField/index.js","pages/notes/NotesList.js","pages/notes/NotesListMenu.js","pages/notes/NotesListMenuContainer.js","pages/sharedNotes/sharedNotesContainer.js","pages/sharedNotes/PreviewSharedNote.js","pages/sharedNotes/index.js","pages/about/index.js","pages/about/About.js","pages/errors/styles.js","pages/errors/index.js","pages/errors/Error404.js","pages/notes/NotesContainer.js","pages/notes/index.js","routing/PrivateRoutes.js","routing/CommonRoutes.js","routing/ApplicationRouter.js","routing/index.js","App.js","index.js"],"names":["NOTES_ARRAY_KEY","SHARED_NOTES_ARRAY_KEY","USER_DATA_KEY","ACTION_TYPES","AuthChangeEmail","AuthChangeFirstName","AuthChangeLastName","AuthChangeDateOfBirth","userDataFromLocalstorage","localStorage","getItem","initialState","JSON","parse","email","firstName","lastName","dateOfBirth","authReducer","state","action","type","payload","changeSigInState","defaultState","isSignIn","Boolean","signInReducer","rootReducer","combineReducers","auth","signIn","ROUTES","root","notes","sharedNotes","sharedNotesWithParams","about","setSignInState","styles","makeStyles","ActiveNote","padding","height","minHeight","justifyContent","alignItems","backgroundColor","marginLeft","marginRight","HeaderItem","display","flexGrow","NavLink","textDecoration","color","ActiveNavLink","SignButtonBox","alignSelf","SignButton","textTransform","Menu","flexDirection","maxWidth","MenuItem","width","CenteredMenuItem","ProfileIcon","transform","NotesButtons","FilterFieldTitle","paddingRight","FilterFieldSelect","HeaderMenuAppBar","HeaderMenuToolBar","RegistrationMenu","RegistrationMenuTitle","RegistrationMenuForm","ProfileInfo","setIsAuthorised","anchorEl","setAnchorEl","classes","Box","className","Button","onClick","event","currentTarget","Typography","variant","keepMounted","open","onClose","defaultProps","ProfileInfoContainer","useState","connect","setAuthEmail","newEmail","setAuthFirstName","newFirstName","setAuthLastName","newLastName","setAuthBirthDate","newBirthDate","formik","setIsOnRegistrationProcess","id","onSubmit","handleSubmit","TextField","name","label","value","values","onChange","handleChange","error","touched","errors","helperText","InputLabelProps","shrink","autoFocus","password","confirmPassword","NOTES","title","content","date","userEmail","getSharedNoteLink","baseUrl","window","location","href","match","substring","length","currentYear","Date","getUTCFullYear","validateRegistrationInfo","year","test","RegistrationMenuContainer","setEmail","setFirstName","setLastName","setDateOfBirth","useFormik","initialValues","validate","actions","userData","setItem","stringify","setSubmitting","AuthMenu","style","wrap","NotesButton","AuthMenuContainer","user","useQuery","axios","data","find","validateAuthInfo","currentUserData","filter","SignInMenu","isOnRegistrationProcess","dispatch","bindActionCreators","SignInManager","setIsSignIn","HeaderMenu","AppBar","position","Toolbar","to","activeClassName","AddNoteButton","marginTop","NotesContainer","SORT_PARAMETERS","sortNotesArray","array","sortParameter","sort","note1","note2","updateSharedNotesArray","noteToUpdate","userWhoShare","currentArrayAsString","currentArray","note","concat","BodyContainer","children","Grid","container","ActiveNoteTitle","textAlign","ActiveNoteContent","wordWrap","NotesListMenu","DialogInputField","WithMargin","margin","NotesList","maxHeight","overflow","setItemStyle","isDragging","draggableStyle","item","background","NoteProcessingDialog","dialogTitle","noteTitle","noteContent","isOpen","setOpen","isTitleCorrect","setIsTitleCorrect","isContentCorrect","setIsContentCorrect","textFieldTitle","textFieldContent","Dialog","fullWidth","DialogTitle","DialogContent","direction","defaultValue","target","multiline","DialogActions","disabled","NoteProcessingDialogContainer","NoteSharingSnackbar","isSnackbarOpen","setSnackbarState","autoHideDuration","elevation","severity","selectedItem","updateNote","isOnSharedNotes","isDialogOpen","setDialogState","handleShareBtnClick","ActiveNoteContainer","navigator","clipboard","writeText","SearchField","setArray","Input","searchText","toLowerCase","includes","startAdornment","InputAdornment","FilterField","setSortingParameter","Select","notesArray","selectedIndex","setSelectedIndex","setFilteredArray","onDragEnd","result","destination","items","list","startIndex","endIndex","Array","from","splice","removed","reorder","source","index","droppableId","droppableProvided","RootRef","rootRef","innerRef","List","map","draggableId","toString","draggableProvided","snapshot","ListItem","button","selected","ContainerComponent","ContainerProps","ref","draggableProps","dragHandleProps","ListItemIcon","ListItemText","primary","justify","secondary","stringToFormat","lengthOfPreviewString","substr","ListItemSecondaryAction","placeholder","changeSelectedIndex","filteredArray","sortingParameter","addNote","xs","NotesListMenuContainer","setNotesArray","useEffect","newNote","getDate","getMonth","getFullYear","SharedNotesContainer","loadedNotesAsString","selectedNote","setSelectedNote","PreviewSharedNote","sharedNote","setSharedNote","onResponseSuccess","response","onSuccess","useGetNotes","params","noteId","Number","About","centered","Error404","updatedArray","updatedNote","PrivateRoutes","exact","path","component","exect","CommonRoutes","ApplicationRouter","basename","store","createStore","queryClient","QueryClient","App","QueryClientProvider","client","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3afbb792.chunk.js","sourcesContent":["export const NOTES_ARRAY_KEY = \"notesArray\";\nexport const SHARED_NOTES_ARRAY_KEY = \"sharedNotesArray\";\nexport const USER_DATA_KEY = \"notesUserData\";\n","const ACTION_TYPES = {\n  AuthChangeEmail: \"AUTH_CHANGE_EMAIL\",\n  AuthChangeFirstName: \"AUTH_CHANGE_FIRST_NAME\",\n  AuthChangeLastName: \"AUTH_CHANGE_LAST_NAME\",\n  AuthChangeDateOfBirth: \"AUTH_CHANGE_DATE_OF_BIRTH\",\n};\n\nexport default ACTION_TYPES;\n","// eslint-disable-next-line import/no-unresolved\nimport { USER_DATA_KEY } from \"@constants/LOCAL_STORAGE_KEYS\";\nimport ACTION_TYPES from \"./ACTION_TYPES\";\n\nconst defaultUserData = {\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  dateOfBirth: \"\",\n};\n\nconst userDataFromLocalstorage = localStorage.getItem(USER_DATA_KEY);\nconst initialState = userDataFromLocalstorage\n  ? JSON.parse(userDataFromLocalstorage)\n  : defaultUserData;\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.AuthChangeEmail:\n      return { ...state, email: action.payload };\n    case ACTION_TYPES.AuthChangeFirstName:\n      return { ...state, firstName: action.payload };\n    case ACTION_TYPES.AuthChangeLastName:\n      return { ...state, lastName: action.payload };\n    case ACTION_TYPES.AuthChangeDateOfBirth:\n      return { ...state, dateOfBirth: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const ACTION_TYPES = {\n  changeSigInState: \"CHANGE_SIGN_IN_STATE\",\n};\n\nexport default ACTION_TYPES;\n","// eslint-disable-next-line import/no-unresolved\nimport { USER_DATA_KEY } from \"@constants/LOCAL_STORAGE_KEYS\";\nimport ACTION_TYPES from \"./ACTION_TYPES\";\n\nconst defaultState = {\n  isSignIn: Boolean(localStorage.getItem(USER_DATA_KEY)),\n};\n\nconst signInReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.changeSigInState:\n      return { ...state, isSignIn: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default signInReducer;\n","import { combineReducers } from \"redux\";\n\nimport authReducer from \"./auth/authReducer\";\nimport signInReducer from \"./signInState/signInReducer\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  signIn: signInReducer,\n});\n\nexport default rootReducer;\n","const ROUTES = {\n  root: \"/\",\n  notes: \"/notes\",\n  sharedNotes: \"/shared-notes\",\n  sharedNotesWithParams: \"/shared-notes/:userEmail/:noteId\",\n  about: \"/about\",\n};\n\nexport default ROUTES;\n","import ACTION_TYPES from \"./ACTION_TYPES\";\n\nconst setSignInState = (isSignIn) => ({\n  type: ACTION_TYPES.changeSigInState,\n  payload: isSignIn,\n});\n\nexport default setSignInState;\n","import { makeStyles } from \"@material-ui/core\";\n\nconst styles = makeStyles(() => ({\n  ActiveNote: {\n    padding: \"50px 50px\",\n    height: \"fit-content\",\n    minHeight: \"100vh\",\n    justifyContent: \"center\",\n    alignItems: \"flex-start\",\n    backgroundColor: \"rgba(255, 255, 255, 0.8)\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  },\n  HeaderItem: {\n    display: \"flex\",\n    flexGrow: \"1\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  NavLink: {\n    textDecoration: \"none\",\n    color: \"white\",\n  },\n  ActiveNavLink: {\n    color: \"yellow\",\n  },\n  SignButtonBox: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignSelf: \"center\",\n  },\n  SignButton: {\n    textDecoration: \"none\",\n    textTransform: \"none\",\n    color: \"white\",\n  },\n  Menu: {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    flexDirection: \"column\",\n    padding: \"0 30px\",\n    maxWidth: \"300px\",\n  },\n  MenuItem: {\n    padding: \"5px 0\",\n    display: \"flex\",\n    width: \"100%\",\n  },\n  CenteredMenuItem: {\n    alignSelf: \"center\",\n    padding: \"5px 0\",\n  },\n  ProfileIcon: {\n    transform: \"scale(2, 2)\",\n    color: \"rgb(196, 116, 69)\",\n  },\n  NotesButtons: {\n    backgroundColor: \"rgba(196, 116, 69, 0.7)\",\n    color: \"white\",\n  },\n  FilterFieldTitle: {\n    paddingRight: \"20px\",\n  },\n  FilterFieldSelect: {\n    paddingRight: \"20px\",\n    flexGrow: \"1\",\n  },\n  HeaderMenuAppBar: {\n    backgroundColor: \"rgb(196, 116, 69)\",\n  },\n  HeaderMenuToolBar: {\n    justifyContent: \"space-around\",\n    height: \"inherit\",\n    alignItems: \"inherit\",\n  },\n  RegistrationMenu: {\n    width: \"300px\",\n  },\n  RegistrationMenuTitle: {\n    color: \"rgb(196, 116, 69)\",\n  },\n  RegistrationMenuForm: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n}));\n\nexport default styles;\n","import React from \"react\";\nimport { Menu, Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport Box from \"@material-ui/core/Box\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"../styles\";\n\nconst ProfileInfo = ({\n  email,\n  firstName,\n  lastName,\n  dateOfBirth,\n  setIsAuthorised,\n  anchorEl,\n  setAnchorEl,\n}) => {\n  const classes = styles();\n\n  return (\n    <Box className={classes.SignButtonBox}>\n      <Button\n        onClick={(event) => {\n          setAnchorEl(event.currentTarget);\n        }}\n      >\n        <Typography variant=\"h5\" className={classes.SignButton}>\n          Profile\n        </Typography>\n      </Button>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={() => {\n          setAnchorEl(null);\n        }}\n      >\n        <Box className={classes.Menu}>\n          <AccountCircleIcon\n            className={`${classes.ProfileIcon} ${classes.MenuItem} ${classes.CenteredMenuItem}`}\n          />\n          <Typography variant=\"h5\" className={classes.MenuItem}>\n            Mail: {email}\n          </Typography>\n          <Typography variant=\"h5\" className={classes.MenuItem}>\n            Name: {firstName}\n          </Typography>\n          <Typography variant=\"h5\" className={classes.MenuItem}>\n            Surname: {lastName}\n          </Typography>\n          <Typography variant=\"h5\" className={classes.MenuItem}>\n            Date of birth: {dateOfBirth}\n          </Typography>\n          <Button\n            className={`${classes.NotesButtons} ${classes.MenuItem} ${classes.CenteredMenuItem}`}\n            variant=\"contained\"\n            onClick={() => setIsAuthorised(false)}\n          >\n            Log out\n          </Button>\n        </Box>\n      </Menu>\n    </Box>\n  );\n};\n\nProfileInfo.propTypes = {\n  email: PropTypes.string,\n  firstName: PropTypes.string,\n  lastName: PropTypes.string,\n  dateOfBirth: PropTypes.string,\n  setIsAuthorised: PropTypes.func,\n  anchorEl: PropTypes.element,\n  setAnchorEl: PropTypes.func,\n};\n\nProfileInfo.defaultProps = {\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  dateOfBirth: \"\",\n  setIsAuthorised: () => {},\n  anchorEl: <div />,\n  setAnchorEl: () => {},\n};\n\nexport default ProfileInfo;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport ProfileInfo from \"./ProfileInfo\";\n\nconst ProfileInfoContainer = ({\n  email,\n  firstName,\n  lastName,\n  dateOfBirth,\n  setIsAuthorised,\n}) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  return (\n    <ProfileInfo\n      email={email}\n      firstName={firstName}\n      lastName={lastName}\n      dateOfBirth={dateOfBirth}\n      setIsAuthorised={setIsAuthorised}\n      anchorEl={anchorEl}\n      setAnchorEl={setAnchorEl}\n    />\n  );\n};\n\nconst setStateToProps = (state) => ({\n  email: state.auth.email,\n  firstName: state.auth.firstName,\n  lastName: state.auth.lastName,\n  dateOfBirth: state.auth.dateOfBirth,\n});\n\nProfileInfoContainer.propTypes = {\n  email: PropTypes.string,\n  firstName: PropTypes.string,\n  lastName: PropTypes.string,\n  dateOfBirth: PropTypes.string,\n  setIsAuthorised: PropTypes.func,\n};\n\nProfileInfoContainer.defaultProps = {\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  dateOfBirth: \"\",\n  setIsAuthorised: () => {},\n};\n\nexport default connect(setStateToProps)(ProfileInfoContainer);\n","import ProfileInfo from \"./ProfileInfo\";\nimport ProfileInfoContainer from \"./ProfileInfoContainer\";\n\nexport { ProfileInfo };\nexport default ProfileInfoContainer;\n","import ACTION_TYPES from \"./ACTION_TYPES\";\n\nexport const setAuthEmail = (newEmail) => ({\n  type: ACTION_TYPES.AuthChangeEmail,\n  payload: newEmail,\n});\n\nexport const setAuthFirstName = (newFirstName) => ({\n  type: ACTION_TYPES.AuthChangeFirstName,\n  payload: newFirstName,\n});\n\nexport const setAuthLastName = (newLastName) => ({\n  type: ACTION_TYPES.AuthChangeLastName,\n  payload: newLastName,\n});\n\nexport const setAuthBirthDate = (newBirthDate) => ({\n  type: ACTION_TYPES.AuthChangeDateOfBirth,\n  payload: newBirthDate,\n});\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { Menu, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"../styles\";\n\nconst RegistrationMenu = ({\n  formik,\n  setIsOnRegistrationProcess,\n  anchorEl,\n  setAnchorEl,\n}) => {\n  const classes = styles();\n\n  return (\n    <div className={classes.SignButtonBox}>\n      <Button\n        onClick={(event) => {\n          setAnchorEl(event.currentTarget);\n        }}\n      >\n        <Typography variant=\"h5\" className={classes.SignButton}>\n          Registration\n        </Typography>\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={() => {\n          setAnchorEl(null);\n        }}\n      >\n        <div className={`${classes.Menu} ${classes.RegistrationMenu}`}>\n          <h1\n            className={`${classes.CenteredMenuItem} ${classes.RegistrationMenuTitle}`}\n          >\n            Registration\n          </h1>\n          <form\n            onSubmit={formik.handleSubmit}\n            className={classes.RegistrationMenuForm}\n          >\n            <div className={classes.MenuItem}>\n              <TextField\n                id=\"email\"\n                name=\"email\"\n                label=\"Email\"\n                type=\"email\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                error={formik.touched.email && Boolean(formik.errors.email)}\n                helperText={formik.touched.email && formik.errors.email}\n              />\n            </div>\n            <div className={classes.MenuItem}>\n              <TextField\n                name=\"firstName\"\n                label=\"First name\"\n                value={formik.values.firstName}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.firstName && Boolean(formik.errors.firstName)\n                }\n                helperText={formik.touched.firstName && formik.errors.firstName}\n              />\n            </div>\n            <div className={classes.MenuItem}>\n              <TextField\n                name=\"lastName\"\n                label=\"Last name\"\n                value={formik.values.lastName}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.lastName && Boolean(formik.errors.lastName)\n                }\n                helperText={formik.touched.lastName && formik.errors.lastName}\n              />\n            </div>\n            <div className={classes.MenuItem}>\n              <TextField\n                name=\"dateOfBirth\"\n                label=\"Date of birth\"\n                type=\"date\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                value={formik.values.dateOfBirth}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.dateOfBirth &&\n                  Boolean(formik.errors.dateOfBirth)\n                }\n                helperText={\n                  formik.touched.dateOfBirth && formik.errors.dateOfBirth\n                }\n                autoFocus\n              />\n            </div>\n            <div className={classes.MenuItem}>\n              <TextField\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                value={formik.values.password}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.password && Boolean(formik.errors.password)\n                }\n                helperText={formik.touched.password && formik.errors.password}\n              />\n            </div>\n            <div className={classes.MenuItem}>\n              <TextField\n                name=\"confirmPassword\"\n                label=\"Confirm password\"\n                type=\"password\"\n                value={formik.values.confirmPassword}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.confirmPassword &&\n                  Boolean(formik.errors.confirmPassword)\n                }\n                helperText={\n                  formik.touched.confirmPassword &&\n                  formik.errors.confirmPassword\n                }\n              />\n            </div>\n            <div className={classes.CenteredMenuItem}>\n              <Button\n                className={classes.NotesButtons}\n                variant=\"contained\"\n                type=\"submit\"\n              >\n                Submit\n              </Button>\n            </div>\n            <div className={classes.CenteredMenuItem}>\n              <Button\n                className={classes.NotesButtons}\n                variant=\"contained\"\n                onClick={() => setIsOnRegistrationProcess(false)}\n              >\n                Log in\n              </Button>\n            </div>\n          </form>\n        </div>\n      </Menu>\n    </div>\n  );\n};\n\nRegistrationMenu.propTypes = {\n  formik: PropTypes.func,\n  setIsOnRegistrationProcess: PropTypes.func,\n  anchorEl: PropTypes.element,\n  setAnchorEl: PropTypes.func,\n};\n\nRegistrationMenu.defaultProps = {\n  formik: () => {},\n  setIsOnRegistrationProcess: () => {},\n  anchorEl: <div />,\n  setAnchorEl: () => {},\n};\n\nexport default RegistrationMenu;\n","export const TITLE_MAX_LENGTH = 35;\nexport const CONTENT_MAX_LENGTH = 2000;\n\nconst NOTES = [\n  {\n    id: 0,\n    title: \"React\",\n    content:\n      \"React — JavaScript-библиотека с открытым исходным кодом для разработки пользовательских интерфейсов.\" +\n      \"React разрабатывается и поддерживается Facebook, Instagram и сообществом отдельных разработчиков и корпораций.\" +\n      \"React может использоваться для разработки одностраничных и мобильных приложений. Его цель — предоставить высокую скорость, простоту и масштабируемость.\" +\n      \" В качестве библиотеки для разработки пользовательских интерфейсов React часто используется с другими библиотеками, такими как MobX, Redux и GraphQL.\",\n    date: \"03.05.2020\",\n    userEmail: \"\",\n  },\n  {\n    id: 1,\n    title: \"Material Design\",\n    content:\n      \"Material Design — стиль графического дизайна интерфейсов программного обеспечения и приложений,\" +\n      \" разработанный компанией Google. Впервые представлен на конференции Google I/O 25 июня 2014 года.\" +\n      \" Стиль расширяет идею «карточек», появившуюся в Google Now, более широким применением строгих макетов,\" +\n      \" анимаций и переходов, отступов и эффектов глубины (света и тени). По идее графических дизайнеров Google,\" +\n      \" у приложений не должно быть острых углов, карточки должны переключаться между собой плавно и практически незаметно.\",\n    date: \"02.05.2020\",\n    userEmail: \"\",\n  },\n  {\n    id: 2,\n    title: \"Использование хука состояния\",\n    content:\n      \"useState — это хук.\" +\n      \" Мы вызываем его, чтобы наделить наш функциональный компонент внутренним состоянием.\" +\n      \" React будет хранить это состояние между рендерами. Вызов useState возвращает массив с двумя элементами,\" +\n      \" который содержит: текущее значение состояния и функцию для его обновления.\" +\n      \" Эту функцию можно использовать где угодно, например, в обработчике событий.\" +\n      \" Она схожа с this.setState в классах, но не сливает новое и старое состояние вместе.\",\n    date: \"02.05.2020\",\n    userEmail: \"\",\n  },\n  {\n    id: 3,\n    title: \"GitHub Pages\",\n    content:\n      \"GitHub Pages are public web pages for users, organizations, and repositories,\" +\n      \" that are freely hosted on GitHub’s github.io domain or on a custom domain name of your choice.\" +\n      \" GitHub Pages are powered by Jekyll behind the scenes,\" +\n      \" so they’re a great way to host your Jekyll-powered website for free.\",\n    date: \"02.05.2020\",\n    userEmail: \"\",\n  },\n];\n\nexport default NOTES;\n","// eslint-disable-next-line import/no-unresolved\nimport ROUTES from \"@constants/ROUTES\";\nimport {\n  TITLE_MAX_LENGTH,\n  CONTENT_MAX_LENGTH,\n  // eslint-disable-next-line import/no-unresolved\n} from \"@constants/NOTES\";\n\nexport const getPreviewString = (stringToFormat, lengthOfPreviewString) =>\n  stringToFormat.length > 20\n    ? `${stringToFormat.substr(0, lengthOfPreviewString)} ...`\n    : stringToFormat;\n\nconst YEAR_STRING_LENGTH = 4;\nexport const getYearFromDate = (date) => date.substring(0, YEAR_STRING_LENGTH);\n\nexport const formatDate = (date) =>\n  `${date.getDate() > 10 ? date.getDate() : `0${date.getDate()}`}.${\n    date.getMonth() > 10 ? date.getMonth() : `0${date.getMonth()}`\n  }.${date.getFullYear()}`;\n\nexport const getSharedNoteLink = (email, id) => {\n  const baseUrl = window.location.href.match(/^.*\\//)[0];\n  return `${\n    baseUrl.substring(0, baseUrl.length - 1) + ROUTES.sharedNotes\n  }/${email}/${id}`;\n};\n\nexport const checkIsTitleCorrect = (title) =>\n  title.length > 0 && title.length < TITLE_MAX_LENGTH;\nexport const checkIsContentCorrect = (content) =>\n  content.length > 0 && content.length < CONTENT_MAX_LENGTH;\n","import { getYearFromDate } from \"./textFormatUtils\";\n\nconst currentDate = new Date();\nconst currentYear = currentDate.getUTCFullYear();\nconst MAX_HUMAN_AGE = 120;\nconst isYearValid = (year) =>\n  year > currentYear - MAX_HUMAN_AGE && year < currentYear;\n\nexport const validateRegistrationInfo = (values) => {\n  const errors = {};\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n  if (!values.firstName) {\n    errors.firstName = \"Required\";\n  } else if (!/^[a-zA-Z ]+$/.test(values.firstName)) {\n    errors.firstName = \"Invalid name input\";\n  }\n  if (!values.lastName) {\n    errors.lastName = \"Required\";\n  } else if (!/^[a-zA-Z ]+$/.test(values.lastName)) {\n    errors.lastName = \"Invalid last name input\";\n  }\n  if (!values.dateOfBirth) {\n    errors.dateOfBirth = \"Required\";\n  } else if (!isYearValid(getYearFromDate(values.dateOfBirth))) {\n    errors.dateOfBirth = \"Invalid year input\";\n  }\n  if (!values.password) {\n    errors.password = \"Required\";\n  } else if (\n    !/(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,}/.test(values.password)\n  ) {\n    errors.password =\n      \"Password must contain numbers, \\n\" +\n      \" latin letters (lower- and uppercase) \\n\" +\n      \" and be at least 6 characters long \\n\";\n  }\n  if (!values.confirmPassword) {\n    errors.confirmPassword = \"Required\";\n  } else if (values.password !== values.confirmPassword) {\n    errors.confirmPassword = \"Password confirm is invalid\";\n  }\n  return errors;\n};\n\nexport const validateAuthInfo = (values, data) => {\n  const errors = {};\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n  if (!values.password) {\n    errors.password = \"Required\";\n  }\n  if (\n    !data.data.find(\n      (user) => user.email === values.email && user.password === values.password\n    )\n  ) {\n    errors.email = \"Such user not found\";\n  }\n  return errors;\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useFormik } from \"formik\";\n\n// eslint-disable-next-line import/no-unresolved\nimport { USER_DATA_KEY } from \"@constants/LOCAL_STORAGE_KEYS\";\n// eslint-disable-next-line import/no-unresolved\nimport { validateRegistrationInfo } from \"@utils/validations\";\nimport RegistrationMenu from \"./RegistrationMenu\";\n\nconst RegistrationMenuContainer = ({\n  email,\n  firstName,\n  lastName,\n  dateOfBirth,\n  setEmail,\n  setFirstName,\n  setLastName,\n  setDateOfBirth,\n  setIsAuthorised,\n  setIsOnRegistrationProcess,\n}) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const formik = useFormik({\n    initialValues: {\n      email,\n      firstName,\n      lastName,\n      dateOfBirth,\n      password: \"\",\n      confirmPassword: \"\",\n    },\n\n    validate: (values) => validateRegistrationInfo(values),\n\n    onSubmit: (values, actions) => {\n      const userData = {\n        email: values.email,\n        firstName: values.firstName,\n        lastName: values.lastName,\n        dateOfBirth: values.dateOfBirth,\n      };\n      setEmail(userData.email);\n      setFirstName(userData.firstName);\n      setLastName(userData.lastName);\n      setDateOfBirth(userData.dateOfBirth);\n\n      localStorage.setItem(USER_DATA_KEY, JSON.stringify(userData));\n\n      actions.setSubmitting(false);\n\n      setIsAuthorised(true);\n      setIsOnRegistrationProcess(false);\n    },\n  });\n\n  return (\n    <RegistrationMenu\n      formik={formik}\n      setIsOnRegistrationProcess={setIsOnRegistrationProcess}\n      setAnchorEl={setAnchorEl}\n      anchorEl={anchorEl}\n    />\n  );\n};\n\nRegistrationMenuContainer.propTypes = {\n  email: PropTypes.string,\n  firstName: PropTypes.string,\n  lastName: PropTypes.string,\n  dateOfBirth: PropTypes.string,\n  setEmail: PropTypes.func,\n  setFirstName: PropTypes.func,\n  setLastName: PropTypes.func,\n  setDateOfBirth: PropTypes.func,\n  setIsAuthorised: PropTypes.func,\n  setIsOnRegistrationProcess: PropTypes.func,\n};\n\nRegistrationMenuContainer.defaultProps = {\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  dateOfBirth: \"\",\n  setEmail: () => {},\n  setFirstName: () => {},\n  setLastName: () => {},\n  setDateOfBirth: () => {},\n  setIsAuthorised: () => {},\n  setIsOnRegistrationProcess: () => {},\n};\n\nexport default RegistrationMenuContainer;\n","import RegistrationMenu from \"./RegistrationMenu\";\nimport RegistrationMenuContainer from \"./RegistrationMenuContainer\";\n\nexport { RegistrationMenu };\nexport default RegistrationMenuContainer;\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { Menu, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"../styles\";\n\nconst AuthMenu = ({\n  formik,\n  setIsOnRegistrationProcess,\n  anchorEl,\n  setAnchorEl,\n}) => {\n  const classes = styles();\n\n  return (\n    <div className={classes.SignButtonBox}>\n      <Button\n        onClick={(event) => {\n          setAnchorEl(event.currentTarget);\n        }}\n      >\n        <Typography variant=\"h5\" className={classes.SignButton}>\n          Log in\n        </Typography>\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={() => {\n          setAnchorEl(null);\n        }}\n      >\n        <div className={classes.Menu}>\n          <h1\n            className={classes.CenteredMenuItem}\n            style={{ color: \"rgb(196, 116, 69)\" }}\n          >\n            Sign in\n          </h1>\n          <form\n            onSubmit={formik.handleSubmit}\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              wrap: \"nowrap\",\n            }}\n          >\n            <div className={classes.MenuItem}>\n              <TextField\n                id=\"email\"\n                name=\"email\"\n                label=\"Email\"\n                type=\"email\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                error={formik.touched.email && Boolean(formik.errors.email)}\n                helperText={formik.touched.email && formik.errors.email}\n              />\n            </div>\n            <div className={classes.MenuItem}>\n              <TextField\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                value={formik.values.password}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.password && Boolean(formik.errors.password)\n                }\n                helperText={formik.touched.password && formik.errors.password}\n              />\n            </div>\n            <div className={classes.CenteredMenuItem}>\n              <Button\n                className={classes.NotesButton}\n                variant=\"contained\"\n                type=\"submit\"\n              >\n                Submit\n              </Button>\n            </div>\n            <div className={classes.CenteredMenuItem}>\n              <Button\n                className={classes.NotesButton}\n                variant=\"contained\"\n                onClick={() => setIsOnRegistrationProcess(true)}\n              >\n                Create new account\n              </Button>\n            </div>\n          </form>\n        </div>\n      </Menu>\n    </div>\n  );\n};\n\nAuthMenu.propTypes = {\n  formik: PropTypes.func,\n  setIsOnRegistrationProcess: PropTypes.func,\n  anchorEl: PropTypes.element,\n  setAnchorEl: PropTypes.func,\n};\n\nAuthMenu.defaultProps = {\n  formik: () => {},\n  setIsOnRegistrationProcess: () => {},\n  anchorEl: <div />,\n  setAnchorEl: () => {},\n};\n\nexport default AuthMenu;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useFormik } from \"formik\";\n\n// eslint-disable-next-line import/no-unresolved\nimport { USER_DATA_KEY } from \"@constants/LOCAL_STORAGE_KEYS\";\n// eslint-disable-next-line import/no-unresolved\nimport { useGetUser } from \"@constants/API_CONFIG\";\n// eslint-disable-next-line import/no-unresolved\nimport { validateAuthInfo } from \"@utils/validations\";\nimport AuthMenu from \"./AuthMenu\";\n\nconst AuthMenuContainer = ({\n  email,\n  setEmail,\n  setFirstName,\n  setLastName,\n  setDateOfBirth,\n  setIsAuthorised,\n  setIsOnRegistrationProcess,\n}) => {\n  const { data: user } = useGetUser();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const formik = useFormik({\n    initialValues: {\n      email,\n      password: \"\",\n    },\n\n    validate: (values) => validateAuthInfo(values, user),\n\n    onSubmit: (values, actions) => {\n      const currentUserData = user.data.filter(\n        (userData) =>\n          userData.email === values.email &&\n          userData.password === values.password\n      )[0];\n\n      setEmail(currentUserData.email);\n      setFirstName(currentUserData.firstName);\n      setLastName(currentUserData.lastName);\n      setDateOfBirth(currentUserData.dateOfBirth);\n\n      localStorage.setItem(USER_DATA_KEY, JSON.stringify(currentUserData));\n\n      setIsAuthorised(true);\n      actions.setSubmitting(false);\n    },\n  });\n\n  return (\n    <AuthMenu\n      formik={formik}\n      setIsOnRegistrationProcess={setIsOnRegistrationProcess}\n      anchorEl={anchorEl}\n      setAnchorEl={setAnchorEl}\n    />\n  );\n};\n\nAuthMenuContainer.propTypes = {\n  email: PropTypes.string,\n  setEmail: PropTypes.func,\n  setFirstName: PropTypes.func,\n  setLastName: PropTypes.func,\n  setDateOfBirth: PropTypes.func,\n  setIsAuthorised: PropTypes.func,\n  setIsOnRegistrationProcess: PropTypes.func,\n};\n\nAuthMenuContainer.defaultProps = {\n  email: \"\",\n  setEmail: () => {},\n  setFirstName: () => {},\n  setLastName: () => {},\n  setDateOfBirth: () => {},\n  setIsAuthorised: () => {},\n  setIsOnRegistrationProcess: () => {},\n};\n\nexport default AuthMenuContainer;\n","import { useQuery } from \"react-query\";\nimport axios from \"axios\";\n\nconst userApi = \"https://mocki.io/v1/cb356f5f-32cc-48f8-8f05-297ecc66ca90\";\n\nexport const useGetUser = () => {\n  const response = useQuery(\"users\", () => axios(userApi));\n  return response;\n};\n\nconst notesApi = \"https://mocki.io/v1/7f0b81a8-b19d-4301-b353-3c7773d55df9\";\n\nexport const useGetNotes = (onResponseSuccess) => {\n  const response = useQuery(\"notes\", () => axios(notesApi), {\n    onSuccess: () => onResponseSuccess(response.data),\n  });\n  return response;\n};\n","import AuthMenu from \"./AuthMenu\";\nimport AuthMenuContainer from \"./AuthMenuContainer\";\n\nexport { AuthMenu };\nexport default AuthMenuContainer;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport {\n  setAuthBirthDate,\n  setAuthEmail,\n  setAuthFirstName,\n  setAuthLastName,\n  // eslint-disable-next-line import/no-unresolved\n} from \"@redux/auth/actions\";\nimport RegistrationMenuContainer from \"../RegistrationMenu\";\nimport AuthMenuContainer from \"../AuthMenu\";\n\nconst SignInMenu = ({\n  email,\n  firstName,\n  lastName,\n  dateOfBirth,\n  setEmail,\n  setFirstName,\n  setLastName,\n  setDateOfBirth,\n  setIsAuthorised,\n}) => {\n  const [isOnRegistrationProcess, setIsOnRegistrationProcess] = useState(false);\n  return isOnRegistrationProcess ? (\n    <RegistrationMenuContainer\n      setIsAuthorised={setIsAuthorised}\n      setIsOnRegistrationProcess={setIsOnRegistrationProcess}\n      email={email}\n      firstName={firstName}\n      lastName={lastName}\n      dateOfBirth={dateOfBirth}\n      setEmail={setEmail}\n      setFirstName={setFirstName}\n      setLastName={setLastName}\n      setDateOfBirth={setDateOfBirth}\n    />\n  ) : (\n    <AuthMenuContainer\n      setIsAuthorised={setIsAuthorised}\n      setIsOnRegistrationProcess={setIsOnRegistrationProcess}\n      setEmail={setEmail}\n      setFirstName={setFirstName}\n      setLastName={setLastName}\n      setDateOfBirth={setDateOfBirth}\n    />\n  );\n};\n\nconst setStateToProps = (state) => ({\n  email: state.auth.email,\n  firstName: state.auth.firstName,\n  lastName: state.auth.lastName,\n  dateOfBirth: state.auth.dateOfBirth,\n});\n\nconst setDispatchToProps = (dispatch) => ({\n  setEmail: bindActionCreators(setAuthEmail, dispatch),\n  setFirstName: bindActionCreators(setAuthFirstName, dispatch),\n  setLastName: bindActionCreators(setAuthLastName, dispatch),\n  setDateOfBirth: bindActionCreators(setAuthBirthDate, dispatch),\n});\n\nSignInMenu.propTypes = {\n  email: PropTypes.string,\n  firstName: PropTypes.string,\n  lastName: PropTypes.string,\n  dateOfBirth: PropTypes.string,\n  setEmail: PropTypes.func,\n  setFirstName: PropTypes.func,\n  setLastName: PropTypes.func,\n  setDateOfBirth: PropTypes.func,\n  setIsAuthorised: PropTypes.func,\n};\n\nSignInMenu.defaultProps = {\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  dateOfBirth: \"\",\n  setEmail: () => {},\n  setFirstName: () => {},\n  setLastName: () => {},\n  setDateOfBirth: () => {},\n  setIsAuthorised: () => {},\n};\n\nexport default connect(setStateToProps, setDispatchToProps)(SignInMenu);\n","import SignInMenu from \"./SignInMenu\";\n\nexport default SignInMenu;\n","import React from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\n// eslint-disable-next-line import/no-unresolved\nimport setSignInState from \"@redux/signInState/actions\";\nimport ProfileInfo from \"../ProfileInfo\";\nimport SignInMenu from \"../SignInMenu\";\n\nconst SignInManager = ({ isSignIn, setIsSignIn }) =>\n  isSignIn ? (\n    <ProfileInfo setIsAuthorised={setIsSignIn} />\n  ) : (\n    <SignInMenu setIsAuthorised={setIsSignIn} />\n  );\n\nconst setStateToProps = (state) => ({\n  isSignIn: state.signIn.isSignIn,\n});\n\nconst setDispatchToProps = (dispatch) => ({\n  setIsSignIn: bindActionCreators(setSignInState, dispatch),\n});\n\nSignInManager.propTypes = {\n  isSignIn: PropTypes.bool,\n  setIsSignIn: PropTypes.func,\n};\n\nSignInManager.defaultProps = {\n  isSignIn: false,\n  setIsSignIn: () => {},\n};\n\nexport default connect(setStateToProps, setDispatchToProps)(SignInManager);\n","import SignInManager from \"./SignInManager\";\n\nexport default SignInManager;\n","import HeaderMenu from \"./HeaderMenu\";\n\nexport default HeaderMenu;\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { Typography } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\n\n// eslint-disable-next-line import/no-unresolved\nimport ROUTES from \"@constants/ROUTES\";\nimport SignInManager from \"../SignInManager\";\nimport styles from \"../styles\";\n\nconst HeaderMenu = () => {\n  const classes = styles();\n  return (\n    <AppBar position=\"static\" className={classes.HeaderMenuAppBar}>\n      <Toolbar className={classes.HeaderMenuToolBar}>\n        <Typography variant=\"h5\" className={classes.HeaderItem}>\n          <NavLink\n            to={ROUTES.notes}\n            activeClassName={classes.ActiveNavLink}\n            className={classes.NavLink}\n          >\n            My notes\n          </NavLink>\n        </Typography>\n        <Typography variant=\"h5\" className={classes.HeaderItem}>\n          <NavLink\n            to={ROUTES.sharedNotes}\n            activeClassName={classes.ActiveNavLink}\n            className={classes.NavLink}\n          >\n            Shared notes\n          </NavLink>\n        </Typography>\n        <Typography variant=\"h5\" className={classes.HeaderItem}>\n          <NavLink\n            to={ROUTES.about}\n            activeClassName={classes.ActiveNavLink}\n            className={classes.NavLink}\n          >\n            About\n          </NavLink>\n        </Typography>\n        <SignInManager />\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default HeaderMenu;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst styles = makeStyles(() => ({\n  AddNoteButton: {\n    marginTop: \"20px\",\n  },\n  NotesContainer: {\n    display: \"flex\",\n    width: \"90%\",\n    height: \"100vh\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  },\n}));\n\nexport default styles;\n","// eslint-disable-next-line import/no-unresolved\nimport { SHARED_NOTES_ARRAY_KEY } from \"@constants/LOCAL_STORAGE_KEYS\";\n\nexport const SORT_PARAMETERS = {\n  nameAscending: 0,\n  nameDescending: 1,\n  dateAscending: 2,\n  dateDescending: 3,\n  none: 4,\n};\n\nexport const sortNotesArray = (array, sortParameter) => {\n  switch (sortParameter) {\n    case SORT_PARAMETERS.nameAscending:\n      return array.sort((note1, note2) => {\n        if (note1.title > note2.title) return 1;\n        if (note1.title < note2.title) return -1;\n        return 0;\n      });\n    case SORT_PARAMETERS.nameDescending:\n      return array.sort((note1, note2) => {\n        if (note1.title < note2.title) return 1;\n        if (note1.title > note2.title) return -1;\n        return 0;\n      });\n    case SORT_PARAMETERS.dateAscending:\n      return array.sort((note1, note2) => {\n        if (note1.date > note2.date) return 1;\n        if (note1.date < note2.date) return -1;\n        return 0;\n      });\n    case SORT_PARAMETERS.dateDescending:\n      return array.sort((note1, note2) => {\n        if (note1.date < note2.date) return 1;\n        if (note1.date > note2.date) return -1;\n        return 0;\n      });\n    case SORT_PARAMETERS.none:\n      return array;\n    default:\n      return {};\n  }\n};\n\nexport const reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\nexport const updateSharedNotesArray = (noteToUpdate, userWhoShare) => {\n  const currentArrayAsString = localStorage.getItem(SHARED_NOTES_ARRAY_KEY);\n  let currentArray = currentArrayAsString\n    ? JSON.parse(currentArrayAsString)\n    : [];\n  currentArray =\n    currentArray.filter(\n      (data) =>\n        data.userWhoShare === userWhoShare &&\n        noteToUpdate.id === data.note.id &&\n        noteToUpdate.userEmail === data.note.userEmail\n    ).length !== 0\n      ? currentArray\n      : currentArray.concat({\n          userWhoShare,\n          note: noteToUpdate,\n        });\n  localStorage.setItem(SHARED_NOTES_ARRAY_KEY, JSON.stringify(currentArray));\n};\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"../styles\";\n\nconst BodyContainer = ({ children }) => {\n  const classes = styles();\n  return (\n    <Grid className={classes.ActiveNote} container wrap=\"nowrap\">\n      {children}\n    </Grid>\n  );\n};\n\nBodyContainer.propTypes = {\n  children: PropTypes.element,\n};\n\nBodyContainer.defaultProps = {\n  children: <div />,\n};\n\nexport default BodyContainer;\n","import BodyContainer from \"./BodyContainer\";\n\nexport default BodyContainer;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst styles = makeStyles(() => ({\n  NotesContainer: {\n    display: \"flex\",\n    width: \"90%\",\n    height: \"100vh\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  },\n  ActiveNoteTitle: {\n    textAlign: \"center\",\n  },\n  ActiveNoteContent: {\n    wordWrap: \"break-word\",\n    textAlign: \"justify\",\n  },\n  NotesListMenu: {\n    height: \"auto\",\n    alignSelf: \"flex-start\",\n    backgroundColor: \"rgba(255, 255, 255, 0.9)\",\n  },\n  DialogInputField: {\n    width: \"100%\",\n  },\n  NotesButtons: {\n    backgroundColor: \"rgba(196, 116, 69, 0.7)\",\n    color: \"white\",\n  },\n  WithMargin: {\n    margin: \"10px 10px\",\n  },\n  NotesList: { maxHeight: \"400px\", overflow: \"auto\" },\n}));\n\nconst DEFAULT_NOTES_COLOR = \"rgba(255, 255, 0, 0.3)\";\nconst CUSTOM_NOTES_COLOR = \"rgba(0, 255, 0, 0.3)\";\n\nexport const setItemStyle = (isDragging, draggableStyle, item) => ({\n  ...draggableStyle,\n  ...((isDragging && {\n    background: \"rgba(0, 0, 255, 0.3)\",\n  }) ||\n    (!isDragging &&\n      (item.userEmail === \"\"\n        ? {\n            background: DEFAULT_NOTES_COLOR,\n          }\n        : {\n            background: CUSTOM_NOTES_COLOR,\n          }))),\n});\n\nexport default styles;\n","import React from \"react\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport { Grid } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  TITLE_MAX_LENGTH,\n  CONTENT_MAX_LENGTH,\n  // eslint-disable-next-line import/no-unresolved\n} from \"@constants/NOTES\";\nimport {\n  checkIsContentCorrect,\n  checkIsTitleCorrect,\n  // eslint-disable-next-line import/no-unresolved\n} from \"@utils/textFormatUtils\";\nimport styles from \"./styles\";\n\nconst NoteProcessingDialog = ({\n  dialogTitle,\n  noteTitle,\n  noteContent,\n  isOpen,\n  setOpen,\n  onSubmit,\n  isTitleCorrect,\n  setIsTitleCorrect,\n  isContentCorrect,\n  setIsContentCorrect,\n}) => {\n  let textFieldTitle = noteTitle;\n  let textFieldContent = noteContent;\n\n  const handleTitleFieldChange = (event) => {\n    textFieldTitle = event.target.value;\n    setIsTitleCorrect(checkIsTitleCorrect(textFieldTitle));\n  };\n  const handleContentFieldChange = (event) => {\n    textFieldContent = event.target.value;\n    setIsContentCorrect(checkIsContentCorrect(textFieldContent));\n  };\n  const handleSaveBtnClick = () => {\n    onSubmit(textFieldTitle, textFieldContent);\n    setOpen(false);\n  };\n  const classes = styles();\n\n  return (\n    <Dialog open={isOpen} fullWidth=\"true\" maxWidth=\"false\">\n      <DialogTitle>{dialogTitle}</DialogTitle>\n      <DialogContent>\n        <Grid direction=\"column\">\n          <TextField\n            id=\"editTitleField\"\n            error={!isTitleCorrect}\n            style={styles.DialogInputField}\n            label=\"title\"\n            defaultValue={textFieldTitle}\n            onChange={handleTitleFieldChange}\n            helperText={\n              isTitleCorrect\n                ? \"\"\n                : `Title length must be between 1 and ${TITLE_MAX_LENGTH} symbols`\n            }\n          />\n          <TextField\n            error={!isContentCorrect}\n            className={classes.DialogInputField}\n            label=\"content\"\n            defaultValue={textFieldContent}\n            onChange={handleContentFieldChange}\n            helperText={\n              isContentCorrect\n                ? \"\"\n                : `Content length must be between 1 and ${CONTENT_MAX_LENGTH} symbols`\n            }\n            multiline\n          />\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => setOpen(!isOpen)}>Close</Button>\n        <Button\n          disabled={!(isTitleCorrect && isContentCorrect)}\n          onClick={handleSaveBtnClick}\n        >\n          Save\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nNoteProcessingDialog.propTypes = {\n  dialogTitle: PropTypes.string,\n  noteTitle: PropTypes.string,\n  noteContent: PropTypes.string,\n  isOpen: PropTypes.bool,\n  setOpen: PropTypes.func,\n  onSubmit: PropTypes.func,\n  isTitleCorrect: PropTypes.bool,\n  setIsTitleCorrect: PropTypes.func,\n  isContentCorrect: PropTypes.bool,\n  setIsContentCorrect: PropTypes.func,\n};\n\nNoteProcessingDialog.defaultProps = {\n  dialogTitle: \"\",\n  noteTitle: \"\",\n  noteContent: \"\",\n  isOpen: false,\n  setOpen: () => {},\n  onSubmit: () => {},\n  isTitleCorrect: false,\n  setIsTitleCorrect: () => {},\n  isContentCorrect: false,\n  setIsContentCorrect: () => {},\n};\n\nexport default NoteProcessingDialog;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport NoteProcessingDialog from \"./NoteProcessingDialog\";\n\nconst NoteProcessingDialogContainer = ({\n  dialogTitle,\n  noteTitle,\n  noteContent,\n  isOpen,\n  setOpen,\n  onSubmit,\n}) => {\n  const [isTitleCorrect, setIsTitleCorrect] = useState(true);\n  const [isContentCorrect, setIsContentCorrect] = useState(true);\n\n  return (\n    <NoteProcessingDialog\n      dialogTitle={dialogTitle}\n      noteTitle={noteTitle}\n      noteContent={noteContent}\n      isOpen={isOpen}\n      setOpen={setOpen}\n      onSubmit={onSubmit}\n      isTitleCorrect={isTitleCorrect}\n      setIsTitleCorrect={setIsTitleCorrect}\n      isContentCorrect={isContentCorrect}\n      setIsContentCorrect={setIsContentCorrect}\n    />\n  );\n};\nNoteProcessingDialogContainer.propTypes = {\n  dialogTitle: PropTypes.string,\n  noteTitle: PropTypes.string,\n  noteContent: PropTypes.string,\n  isOpen: PropTypes.bool,\n  setOpen: PropTypes.func,\n  onSubmit: PropTypes.func,\n};\n\nNoteProcessingDialogContainer.defaultProps = {\n  dialogTitle: \"\",\n  noteTitle: \"\",\n  noteContent: \"\",\n  isOpen: false,\n  setOpen: () => {},\n  onSubmit: () => {},\n};\n\nexport default NoteProcessingDialogContainer;\n","import React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert/Alert\";\nimport PropTypes from \"prop-types\";\n\n// eslint-disable-next-line import/no-unresolved\nimport { getSharedNoteLink } from \"@utils/textFormatUtils\";\n\nconst NoteSharingSnackbar = ({\n  isSnackbarOpen,\n  setSnackbarState,\n  userEmail,\n  id,\n}) => (\n  <Snackbar\n    open={isSnackbarOpen}\n    autoHideDuration={3000}\n    onClose={() => setSnackbarState(false)}\n  >\n    <MuiAlert\n      elevation={6}\n      variant=\"filled\"\n      onClose={() => setSnackbarState(false)}\n      severity=\"success\"\n    >\n      Link copied: {getSharedNoteLink(userEmail, id)}\n    </MuiAlert>\n  </Snackbar>\n);\n\nNoteSharingSnackbar.propTypes = {\n  isSnackbarOpen: PropTypes.bool,\n  setSnackbarState: PropTypes.func,\n  userEmail: PropTypes.string,\n  id: PropTypes.string,\n};\n\nNoteSharingSnackbar.defaultProps = {\n  setSnackbarState: () => {},\n  userEmail: \"\",\n  id: \"\",\n  isSnackbarOpen: false,\n};\n\nexport default NoteSharingSnackbar;\n","import React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport PropTypes from \"prop-types\";\n\n// eslint-disable-next-line import/no-unresolved\nimport BodyContainer from \"@components/BodyContainer\";\nimport styles from \"./styles\";\nimport NoteProcessingDialogContainer from \"./NoteProcessingDialogContainer\";\nimport NoteSharingSnackbar from \"./NoteSharingSnackbar\";\n\nconst ActiveNote = ({\n  selectedItem,\n  updateNote,\n  userEmail,\n  isOnSharedNotes,\n  isDialogOpen,\n  setDialogState,\n  isSnackbarOpen,\n  setSnackbarState,\n  handleShareBtnClick,\n}) => {\n  const classes = styles();\n\n  return selectedItem ? (\n    <BodyContainer>\n      <Grid container direction=\"column\" alignItems=\"center\">\n        <Typography className={classes.ActiveNoteTitle} variant=\"h3\">\n          {selectedItem.title}\n        </Typography>\n        <Typography className={classes.ActiveNoteContent} variant=\"h5\">\n          {selectedItem.content}\n        </Typography>\n      </Grid>\n      {!isOnSharedNotes && selectedItem.userEmail !== \"\" ? (\n        <Grid direction=\"column\">\n          <Button\n            onClick={() => setDialogState(!isDialogOpen)}\n            className={`${classes.ActiveNoteContent} ${classes.NotesButtons} ${classes.WithMargin}`}\n          >\n            Edit\n          </Button>\n          <Button\n            onClick={() => handleShareBtnClick(userEmail, selectedItem)}\n            className={`${classes.ActiveNoteContent} ${classes.NotesButtons} ${classes.WithMargin}`}\n          >\n            Share\n          </Button>\n        </Grid>\n      ) : (\n        <div />\n      )}\n\n      <NoteSharingSnackbar\n        isSnackbarOpen={isSnackbarOpen}\n        userEmail={userEmail}\n        id={selectedItem.id}\n        setSnackbarState={setSnackbarState}\n      />\n      <NoteProcessingDialogContainer\n        dialogTitle=\"Editing note\"\n        noteTitle={selectedItem.title}\n        noteContent={selectedItem.content}\n        isOpen={isDialogOpen}\n        setOpen={setDialogState}\n        onSubmit={updateNote}\n      />\n    </BodyContainer>\n  ) : (\n    <BodyContainer>\n      <Typography variant=\"h3\">Select note to display</Typography>\n    </BodyContainer>\n  );\n};\n\nActiveNote.propTypes = {\n  selectedItem: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    content: PropTypes.string,\n    date: PropTypes.string,\n    userEmail: PropTypes.string,\n  }),\n  updateNote: PropTypes.func,\n  userEmail: PropTypes.string,\n  isOnSharedNotes: PropTypes.bool,\n  isDialogOpen: PropTypes.bool,\n  setDialogState: PropTypes.func,\n  isSnackbarOpen: PropTypes.bool,\n  setSnackbarState: PropTypes.func,\n  handleShareBtnClick: PropTypes.func,\n};\n\nActiveNote.defaultProps = {\n  selectedItem: null,\n  updateNote: () => {},\n  userEmail: \"\",\n  isOnSharedNotes: false,\n  isDialogOpen: false,\n  setDialogState: () => {},\n  isSnackbarOpen: false,\n  setSnackbarState: () => {},\n  handleShareBtnClick: () => {},\n};\n\nexport default ActiveNote;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\n// eslint-disable-next-line import/no-unresolved\nimport { getSharedNoteLink } from \"@utils/textFormatUtils\";\n// eslint-disable-next-line import/no-unresolved\nimport { updateSharedNotesArray } from \"@utils/arrayProcessingUtils\";\nimport PropTypes from \"prop-types\";\nimport ActiveNote from \"./ActiveNote\";\n\nconst ActiveNoteContainer = ({\n  selectedItem,\n  updateNote,\n  userEmail,\n  isOnSharedNotes,\n}) => {\n  const [isDialogOpen, setDialogState] = useState(false);\n  const [isSnackbarOpen, setSnackbarState] = useState(false);\n\n  const handleShareBtnClick = (email, note) => {\n    navigator.clipboard.writeText(getSharedNoteLink(email, note.id));\n    updateSharedNotesArray(note, email);\n    setSnackbarState(true);\n  };\n\n  return (\n    <ActiveNote\n      selectedItem={selectedItem}\n      updateNote={updateNote}\n      userEmail={userEmail}\n      isOnSharedNotes={isOnSharedNotes}\n      isDialogOpen={isDialogOpen}\n      setSnackbarState={setSnackbarState}\n      isSnackbarOpen={isSnackbarOpen}\n      setDialogState={setDialogState}\n      handleShareBtnClick={handleShareBtnClick}\n    />\n  );\n};\n\nActiveNoteContainer.propTypes = {\n  selectedItem: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    content: PropTypes.string,\n    date: PropTypes.string,\n    userEmail: PropTypes.string,\n  }),\n  updateNote: PropTypes.func,\n  userEmail: PropTypes.string,\n  isOnSharedNotes: PropTypes.bool,\n};\n\nActiveNoteContainer.defaultProps = {\n  selectedItem: null,\n  updateNote: () => {},\n  userEmail: \"\",\n  isOnSharedNotes: false,\n};\n\nconst setStateToProps = (state) => ({\n  userEmail: state.auth.email,\n});\n\nexport default connect(setStateToProps)(ActiveNoteContainer);\n","import React from \"react\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Input from \"@material-ui/core/Input\";\nimport PropTypes from \"prop-types\";\n\nconst SearchField = ({ array, setArray }) => {\n  const handleInputChange = (event) => {\n    const searchText = event.target.value;\n    setArray(\n      array.filter(\n        (item) =>\n          item.title.toLowerCase().includes(searchText.toLowerCase()) ||\n          item.content.toLowerCase().includes(searchText.toLowerCase())\n      )\n    );\n  };\n\n  return (\n    <Input\n      label=\"Search\"\n      onChange={handleInputChange}\n      startAdornment={\n        <InputAdornment>\n          <SearchIcon />\n        </InputAdornment>\n      }\n    />\n  );\n};\n\nSearchField.propTypes = {\n  array: PropTypes.arrayOf(PropTypes.object),\n  setArray: PropTypes.func,\n};\n\nSearchField.defaultProps = {\n  array: [],\n  setArray: () => {},\n};\n\nexport default SearchField;\n","import SearchField from \"./SearchField\";\n\nexport default SearchField;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport PropTypes from \"prop-types\";\n\n// eslint-disable-next-line import/no-unresolved\nimport { SORT_PARAMETERS } from \"@utils/arrayProcessingUtils\";\nimport styles from \"../styles\";\n\nconst FilterField = ({ setSortingParameter }) => {\n  const classes = styles();\n  return (\n    <div style={{ display: \"flex\" }}>\n      <Typography variant=\"h5\" className={classes.FilterFieldTitle}>\n        Sort by\n      </Typography>\n      <Select\n        defaultValue={SORT_PARAMETERS.dateDescending}\n        className={classes.FilterFieldSelect}\n        onChange={(event) => setSortingParameter(event.target.value)}\n      >\n        <MenuItem value={SORT_PARAMETERS.dateAscending}>\n          Date Ascending\n        </MenuItem>\n        <MenuItem value={SORT_PARAMETERS.dateDescending}>\n          Date Descending\n        </MenuItem>\n        <MenuItem value={SORT_PARAMETERS.nameAscending}>\n          Name Ascending\n        </MenuItem>\n        <MenuItem value={SORT_PARAMETERS.nameDescending}>\n          Name Descending\n        </MenuItem>\n      </Select>\n    </div>\n  );\n};\n\nFilterField.propTypes = {\n  setSortingParameter: PropTypes.func,\n};\n\nFilterField.defaultProps = {\n  setSortingParameter: () => {},\n};\n\nexport default FilterField;\n","import FilterField from \"./FilterField\";\n\nexport default FilterField;\n","import React from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  Grid,\n} from \"@material-ui/core\";\nimport RootRef from \"@material-ui/core/RootRef\";\nimport NoteIcon from \"@material-ui/icons/Note\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport PropTypes from \"prop-types\";\n\n// eslint-disable-next-line import/no-unresolved\nimport { SORT_PARAMETERS, reorder } from \"@utils/arrayProcessingUtils\";\n// eslint-disable-next-line import/no-unresolved\nimport { getPreviewString } from \"@utils/textFormatUtils\";\nimport styles, { setItemStyle } from \"./styles\";\n\nconst LENGTH_OF_NOTE_CONTENT_PREVIEW = 20;\n\nconst NotesList = ({\n  notesArray,\n  selectedIndex,\n  setSelectedIndex,\n  setFilteredArray,\n  setSortingParameter,\n}) => {\n  const onDragEnd = (result) => {\n    if (!result.destination) {\n      return;\n    }\n    const items = reorder(\n      notesArray,\n      result.source.index,\n      result.destination.index\n    );\n\n    setSortingParameter(SORT_PARAMETERS.none);\n    setFilteredArray(items);\n  };\n\n  const classes = styles();\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"droppable\">\n        {(droppableProvided) => (\n          <RootRef rootRef={droppableProvided.innerRef}>\n            <List className={classes.NotesList}>\n              {notesArray.map((item, index) => (\n                <Draggable\n                  key={item.userEmail + item.id}\n                  draggableId={item.id.toString()}\n                  index={index}\n                >\n                  {(draggableProvided, snapshot) => (\n                    <ListItem\n                      button\n                      selected={selectedIndex === item.id}\n                      onClick={() => setSelectedIndex(item.id)}\n                      ContainerComponent=\"li\"\n                      ContainerProps={{ ref: draggableProvided.innerRef }}\n                      /* eslint-disable-next-line react/jsx-props-no-spreading */\n                      {...draggableProvided.draggableProps}\n                      /* eslint-disable-next-line react/jsx-props-no-spreading */\n                      {...draggableProvided.dragHandleProps}\n                      style={setItemStyle(\n                        snapshot.isDragging,\n                        draggableProvided.draggableProps.style,\n                        item\n                      )}\n                    >\n                      <ListItemIcon>\n                        <NoteIcon />\n                      </ListItemIcon>\n                      <ListItemText\n                        primary={\n                          <Grid container justify=\"space-between\">\n                            <span>{item.title}</span>\n                            <span>{item.date}</span>\n                          </Grid>\n                        }\n                        secondary={getPreviewString(\n                          item.content,\n                          LENGTH_OF_NOTE_CONTENT_PREVIEW\n                        )}\n                      />\n                      <ListItemSecondaryAction />\n                    </ListItem>\n                  )}\n                </Draggable>\n              ))}\n              {droppableProvided.placeholder}\n            </List>\n          </RootRef>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nNotesList.propTypes = {\n  notesArray: PropTypes.arrayOf(PropTypes.object),\n  selectedIndex: PropTypes.number,\n  setSelectedIndex: PropTypes.func,\n  setFilteredArray: PropTypes.func,\n  setSortingParameter: PropTypes.func,\n};\n\nNotesList.defaultProps = {\n  notesArray: [],\n  selectedIndex: null,\n  setSelectedIndex() {},\n  setFilteredArray: () => {},\n  setSortingParameter: () => {},\n};\n\nexport default NotesList;\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport PropTypes from \"prop-types\";\n\n// eslint-disable-next-line import/no-unresolved\nimport SearchField from \"@components/SearchField\";\n// eslint-disable-next-line import/no-unresolved\nimport FilterField from \"@components/FilterField\";\n// eslint-disable-next-line import/no-unresolved\nimport { sortNotesArray } from \"@utils/arrayProcessingUtils\";\nimport styles from \"./styles\";\nimport NotesList from \"./NotesList\";\nimport NoteProcessingDialogContainer from \"./NoteProcessingDialogContainer\";\n\nconst NotesListMenu = ({\n  userEmail,\n  notesArray,\n  selectedIndex,\n  changeSelectedIndex,\n  isOnSharedNotes,\n  filteredArray,\n  setFilteredArray,\n  sortingParameter,\n  setSortingParameter,\n  isDialogOpen,\n  setDialogState,\n  addNote,\n}) => {\n  const classes = styles();\n\n  return (\n    <Grid\n      className={classes.NotesListMenu}\n      container\n      item\n      xs={3}\n      direction=\"column\"\n    >\n      <SearchField array={notesArray} setArray={setFilteredArray} />\n      <FilterField setSortingParameter={setSortingParameter} />\n      <NotesList\n        notesArray={sortNotesArray(filteredArray, sortingParameter).filter(\n          !isOnSharedNotes\n            ? (note) => note.userEmail === \"\" || note.userEmail === userEmail\n            : (note) => note.userEmail !== \"\" && note.title !== \"\"\n        )}\n        selectedIndex={selectedIndex}\n        setSelectedIndex={changeSelectedIndex}\n        setFilteredArray={setFilteredArray}\n        setSortingParameter={setSortingParameter}\n      />\n      {!isOnSharedNotes ? (\n        <Button\n          className={classes.NotesButtons}\n          onClick={() => setDialogState(!isDialogOpen)}\n        >\n          <AddIcon />\n        </Button>\n      ) : (\n        <div />\n      )}\n      <NoteProcessingDialogContainer\n        dialogTitle=\"Adding note\"\n        setOpen={setDialogState}\n        isOpen={isDialogOpen}\n        noteTitle=\"Select title\"\n        noteContent=\"Fill your note with some content\"\n        onSubmit={addNote}\n      />\n    </Grid>\n  );\n};\n\nNotesListMenu.propTypes = {\n  userEmail: PropTypes.string,\n  notesArray: PropTypes.arrayOf(PropTypes.object),\n  selectedIndex: PropTypes.number,\n  changeSelectedIndex: PropTypes.func,\n  isOnSharedNotes: PropTypes.bool,\n  filteredArray: PropTypes.arrayOf(PropTypes.object),\n  setFilteredArray: PropTypes.func,\n  sortingParameter: PropTypes.bool,\n  setSortingParameter: PropTypes.func,\n  isDialogOpen: PropTypes.bool,\n  setDialogState: PropTypes.func,\n  addNote: PropTypes.func,\n};\n\nNotesListMenu.defaultProps = {\n  userEmail: \"\",\n  notesArray: [],\n  selectedIndex: null,\n  changeSelectedIndex: () => {},\n  isOnSharedNotes: false,\n  filteredArray: [],\n  setFilteredArray: () => {},\n  sortingParameter: false,\n  setSortingParameter: () => {},\n  isDialogOpen: false,\n  setDialogState: () => {},\n  addNote: () => {},\n};\n\nexport default NotesListMenu;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\n// eslint-disable-next-line import/no-unresolved\nimport { NOTES_ARRAY_KEY } from \"@constants/LOCAL_STORAGE_KEYS\";\n// eslint-disable-next-line import/no-unresolved\nimport { formatDate } from \"@utils/textFormatUtils\";\n// eslint-disable-next-line import/no-unresolved\nimport { SORT_PARAMETERS } from \"@utils/arrayProcessingUtils\";\nimport NotesListMenu from \"./NotesListMenu\";\n\nconst NotesListMenuContainer = ({\n  userEmail,\n  notesArray,\n  selectedIndex,\n  changeSelectedIndex,\n  setNotesArray,\n  isOnSharedNotes,\n}) => {\n  const [filteredArray, setFilteredArray] = useState(notesArray);\n  const [sortingParameter, setSortingParameter] = useState(\n    SORT_PARAMETERS.dateDescending\n  );\n  const [isDialogOpen, setDialogState] = useState(false);\n\n  useEffect(() => {\n    setFilteredArray(notesArray);\n  }, [notesArray]);\n\n  const addNote = (title, content) => {\n    const newNote = {\n      id: notesArray.length,\n      title,\n      content,\n      date: formatDate(new Date()),\n      userEmail,\n    };\n    localStorage.setItem(\n      NOTES_ARRAY_KEY,\n      JSON.stringify(notesArray.concat(newNote))\n    );\n    setNotesArray(notesArray.concat(newNote));\n  };\n\n  return (\n    <NotesListMenu\n      userEmail={userEmail}\n      notesArray={notesArray}\n      selectedIndex={selectedIndex}\n      changeSelectedIndex={changeSelectedIndex}\n      isOnSharedNotes={isOnSharedNotes}\n      filteredArray={filteredArray}\n      setFilteredArray={setFilteredArray}\n      sortingParameter={sortingParameter}\n      setSortingParameter={setSortingParameter}\n      isDialogOpen={isDialogOpen}\n      setDialogState={setDialogState}\n      addNote={addNote}\n    />\n  );\n};\n\nNotesListMenuContainer.propTypes = {\n  userEmail: PropTypes.string,\n  notesArray: PropTypes.arrayOf(PropTypes.object),\n  selectedIndex: PropTypes.number,\n  changeSelectedIndex: PropTypes.func,\n  setNotesArray: PropTypes.func,\n  isOnSharedNotes: PropTypes.bool,\n};\n\nNotesListMenuContainer.defaultProps = {\n  userEmail: \"\",\n  notesArray: [],\n  selectedIndex: null,\n  changeSelectedIndex: () => {},\n  setNotesArray: () => {},\n  isOnSharedNotes: false,\n};\n\nconst setStateToProps = (state) => ({\n  userEmail: state.auth.email,\n});\n\nexport default connect(setStateToProps)(NotesListMenuContainer);\n","import React, { useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\n// eslint-disable-next-line import/no-unresolved\nimport { SHARED_NOTES_ARRAY_KEY } from \"@constants/LOCAL_STORAGE_KEYS\";\nimport styles from \"./styles\";\nimport ActiveNoteContainer from \"../notes/ActiveNoteContainer\";\nimport NotesListMenuContainer from \"../notes/NotesListMenuContainer\";\n\nconst SharedNotesContainer = ({ userEmail }) => {\n  const loadedNotesAsString = localStorage.getItem(SHARED_NOTES_ARRAY_KEY);\n\n  const [notesArray, setNotesArray] = useState(\n    loadedNotesAsString\n      ? JSON.parse(loadedNotesAsString)\n          .filter((data) => data.userWhoShare === userEmail)\n          .map((data) => data.note)\n      : []\n  );\n\n  const [selectedNote, setSelectedNote] = useState(null);\n\n  const classes = styles();\n\n  return (\n    <div className={classes.NotesContainer}>\n      <Grid container direction=\"row\" wrap=\"nowrap\" justify=\"space-between\">\n        <NotesListMenuContainer\n          notesArray={notesArray}\n          selectedIndex={selectedNote ? selectedNote.id : null}\n          changeSelectedIndex={(index) =>\n            setSelectedNote(notesArray.find((note) => note.id === index))\n          }\n          setNotesArray={setNotesArray}\n          isOnSharedNotes\n        />\n        <ActiveNoteContainer item selectedItem={selectedNote} isOnSharedNotes />\n      </Grid>\n    </div>\n  );\n};\n\nconst setStateToProps = (state) => ({\n  userEmail: state.auth.email,\n});\n\nSharedNotesContainer.propTypes = {\n  userEmail: PropTypes.string,\n};\n\nSharedNotesContainer.defaultProps = {\n  userEmail: \"\",\n};\n\nexport default connect(setStateToProps)(SharedNotesContainer);\n","import React, { useState } from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\n// eslint-disable-next-line import/no-unresolved\nimport BodyContainer from \"@components/BodyContainer\";\n// eslint-disable-next-line import/no-unresolved\nimport { updateSharedNotesArray } from \"@utils/arrayProcessingUtils\";\n// eslint-disable-next-line import/no-unresolved\nimport { useGetNotes } from \"@constants/API_CONFIG\";\nimport styles from \"./styles\";\n\nconst PreviewSharedNote = ({ match, userEmail }) => {\n  const [sharedNote, setSharedNote] = useState({ title: \"\", content: \"\" });\n\n  const onResponseSuccess = (data) => {\n    setSharedNote(() => {\n      const newNote = data.data.filter(\n        (note) =>\n          note.userEmail === match.params.userEmail &&\n          note.id === match.params.noteId\n      )[0];\n      newNote.id = Number(newNote.id);\n      return newNote;\n    });\n  };\n\n  useGetNotes(onResponseSuccess);\n\n  const classes = styles();\n\n  return sharedNote ? (\n    <BodyContainer>\n      <Grid container direction=\"column\" alignItems=\"center\">\n        <Typography variant=\"h3\">{sharedNote.title}</Typography>\n        <Typography variant=\"h5\">{sharedNote.content}</Typography>\n        <Button\n          variant=\"contained\"\n          className={classes.AddNoteButton}\n          onClick={updateSharedNotesArray(sharedNote, userEmail)}\n        >\n          Add to shared notes\n        </Button>\n      </Grid>\n    </BodyContainer>\n  ) : (\n    <BodyContainer>\n      <Typography variant=\"h3\">Link is not valid</Typography>\n    </BodyContainer>\n  );\n};\n\nPreviewSharedNote.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      userEmail: PropTypes.string,\n      noteId: PropTypes.string,\n    }),\n  }),\n  userEmail: PropTypes.string,\n};\n\nPreviewSharedNote.defaultProps = {\n  match: null,\n  userEmail: \"\",\n};\n\nconst setStateToProps = (state) => ({\n  userEmail: state.auth.email,\n});\n\nexport default connect(setStateToProps)(PreviewSharedNote);\n","import SharedNotesContainer from \"./sharedNotesContainer\";\nimport PreviewSharedNote from \"./PreviewSharedNote\";\n\nexport { PreviewSharedNote };\nexport default SharedNotesContainer;\n","import About from \"./About\";\n\nexport default About;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\n// eslint-disable-next-line import/no-unresolved\nimport BodyContainer from \"@components/BodyContainer\";\n\nconst About = () => (\n  <BodyContainer>\n    <Typography variant=\"h1\">Created by A.A.Leonov</Typography>\n  </BodyContainer>\n);\n\nexport default About;\n","import { makeStyles } from \"@material-ui/core\";\n\nconst styles = makeStyles(() => ({\n  centered: {\n    textAlign: \"center\",\n  },\n}));\n\nexport default styles;\n","import Error404 from \"./Error404\";\n\nexport default Error404;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\n// eslint-disable-next-line import/no-unresolved\nimport BodyContainer from \"@components/BodyContainer\";\nimport styles from \"./styles\";\n\nconst Error404 = () => (\n  <BodyContainer>\n    <Typography variant=\"h1\" className={styles().centered}>\n      Error 404 - Page not found\n    </Typography>\n  </BodyContainer>\n);\n\nexport default Error404;\n","import React, { useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\n// eslint-disable-next-line import/no-unresolved\nimport NOTES from \"@constants/NOTES\";\n// eslint-disable-next-line import/no-unresolved\nimport { NOTES_ARRAY_KEY } from \"@constants/LOCAL_STORAGE_KEYS\";\nimport styles from \"./styles\";\nimport NotesListMenuContainer from \"./NotesListMenuContainer\";\nimport ActiveNoteContainer from \"./ActiveNoteContainer\";\n\nconst NotesContainer = ({ userEmail }) => {\n  const loadedNotesAsString = localStorage.getItem(NOTES_ARRAY_KEY);\n\n  const [notesArray, setNotesArray] = useState(\n    loadedNotesAsString ? JSON.parse(loadedNotesAsString) : NOTES\n  );\n  const [selectedNote, setSelectedNote] = useState(null);\n\n  const updateNote = (title, content) => {\n    const updatedArray = notesArray.map((note) => {\n      if (note.id === selectedNote.id) {\n        const updatedNote = {\n          id: note.id,\n          title,\n          content,\n          date: note.date,\n          userEmail,\n        };\n        setSelectedNote(updatedNote);\n        return updatedNote;\n      }\n      return note;\n    });\n    setNotesArray(updatedArray);\n\n    localStorage.setItem(NOTES_ARRAY_KEY, JSON.stringify(updatedArray));\n  };\n\n  const classes = styles();\n\n  return (\n    <div className={classes.NotesContainer}>\n      <Grid container direction=\"row\" wrap=\"nowrap\" justify=\"space-between\">\n        <NotesListMenuContainer\n          notesArray={notesArray}\n          selectedIndex={selectedNote ? selectedNote.id : null}\n          changeSelectedIndex={(index) =>\n            setSelectedNote(notesArray.find((note) => note.id === index))\n          }\n          setNotesArray={setNotesArray}\n        />\n        <ActiveNoteContainer\n          item\n          selectedItem={selectedNote}\n          updateNote={updateNote}\n          isOnSharedNotes={false}\n        />\n      </Grid>\n    </div>\n  );\n};\n\nconst setStateToProps = (state) => ({\n  userEmail: state.auth.email,\n});\n\nNotesContainer.propTypes = {\n  userEmail: PropTypes.string,\n};\n\nNotesContainer.defaultProps = {\n  userEmail: \"\",\n};\n\nexport default connect(setStateToProps)(NotesContainer);\n","import NotesContainer from \"./NotesContainer\";\n\nexport default NotesContainer;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\n// eslint-disable-next-line import/no-unresolved\nimport ROUTES from \"@constants/ROUTES\";\n// eslint-disable-next-line import/no-unresolved\nimport SharedNotesContainer, { PreviewSharedNote } from \"@pages/sharedNotes\";\n// eslint-disable-next-line import/no-unresolved\nimport About from \"@pages/about\";\n// eslint-disable-next-line import/no-unresolved\nimport Error404 from \"@pages/errors\";\n// eslint-disable-next-line import/no-unresolved\nimport NotesContainer from \"@pages/notes\";\n\nconst PrivateRoutes = () => (\n  <Switch>\n    <Route exact path={ROUTES.notes} component={NotesContainer} />\n    <Route path={ROUTES.sharedNotesWithParams} component={PreviewSharedNote} />\n    <Route exect path={ROUTES.sharedNotes} component={SharedNotesContainer} />\n    <Route exact path={ROUTES.about} component={About} />\n    <Route component={Error404} />\n  </Switch>\n);\n\nexport default PrivateRoutes;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\n// eslint-disable-next-line import/no-unresolved\nimport ROUTES from \"@constants/ROUTES\";\n// eslint-disable-next-line import/no-unresolved\nimport About from \"@pages/about\";\n// eslint-disable-next-line import/no-unresolved\nimport Error404 from \"@pages/errors\";\n\nconst CommonRoutes = () => (\n  <Switch>\n    <Route exact path={ROUTES.about} component={About} />\n    <Route component={Error404} />\n  </Switch>\n);\n\nexport default CommonRoutes;\n","import React from \"react\";\nimport { HashRouter, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\n// eslint-disable-next-line import/no-unresolved\nimport HeaderMenu from \"@components/HeaderMenu\";\n// eslint-disable-next-line import/no-unresolved\nimport ROUTES from \"@constants/ROUTES\";\nimport PrivateRoutes from \"./PrivateRoutes\";\nimport CommonRoutes from \"./CommonRoutes\";\n\nconst ApplicationRouter = ({ isSignIn }) => (\n  <div>\n    <HashRouter basename=\"/\">\n      <HeaderMenu />\n      {isSignIn ? <PrivateRoutes /> : <CommonRoutes />}\n      <Redirect from={ROUTES.root} to={ROUTES.notes} />\n    </HashRouter>\n  </div>\n);\n\nconst setStateToProps = (state) => ({\n  isSignIn: state.signIn.isSignIn,\n});\n\nApplicationRouter.propTypes = {\n  isSignIn: PropTypes.bool,\n};\n\nApplicationRouter.defaultProps = {\n  isSignIn: false,\n};\n\nexport default connect(setStateToProps)(ApplicationRouter);\n","import ApplicationRouter from \"./ApplicationRouter\";\n\nexport default ApplicationRouter;\n","import React from \"react\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\n// eslint-disable-next-line import/no-unresolved\nimport rootReducer from \"@redux/reducer\";\nimport ApplicationRouter from \"./routing\";\n\nconst store = createStore(rootReducer);\nconst queryClient = new QueryClient();\n\nconst App = () => (\n  <Provider store={store}>\n    <QueryClientProvider client={queryClient}>\n      <ApplicationRouter />\n    </QueryClientProvider>\n  </Provider>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}